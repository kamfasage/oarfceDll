"use strict";angular.module("bigSQL.common",[]),angular.module("bigSQL.components",["bigSQL.common","nvd3","ui.grid","ui.grid.expandable"]),angular.module("bigSQL.menus",["bigSQL.common"]),angular.module("bigSQL",["templates","angular.filter","ui.router","ui.bootstrap","bigSQL.common","bigSQL.menus","bigSQL.components"]),angular.module("bigSQL").run(function(PubSubService,$state,$window,$rootScope,$stateParams){var sessionCreated=function(session){$rootScope.$emit("sessionCreated",session)};$window.onbeforeunload=function(){PubSubService.closeConnection()},PubSubService.initConnection(),PubSubService.openConnection(sessionCreated)}),angular.module("bigSQL").config(function($urlRouterProvider){$urlRouterProvider.otherwise("/")}),angular.module("bigSQL").controller("BigSqlController",["$scope","$rootScope","$uibModal","PubSubService","MachineInfo","$state","$window",function($scope,$rootScope,$uibModal,PubSubService,MachineInfo,$state,$window){}]),angular.module("bigSQL.common"),angular.module("bigSQL.components").config(function($stateProvider,$urlRouterProvider){$stateProvider.state("components",{url:"/components",views:{main:{controller:"ComponentsController",templateUrl:"../app/components/components.html"}}}).state("components.view",{url:"/view",views:{sub:{controller:"ComponentsViewController",templateUrl:"../app/components/partials/view.html"}}}).state("components.status",{url:"/status",views:{sub:{controller:"ComponentsStatusController",templateUrl:"../app/components/partials/status.html"}}}).state("components.log",{url:"/log/",views:{sub:{controller:"ComponentsLogController",templateUrl:"../app/components/partials/log.html"}}}).state("components.detailsView",{url:"^/details/{component}",views:{sub:{controller:"ComponentDetailsController",templateUrl:"../app/components/partials/details.html"}}}).state("components.settingsView",{url:"/settings",views:{sub:{controller:"ComponentsSettingsController",templateUrl:"../app/components/partials/settings.html"}}}).state("components.detailspg95",{url:"^/details-pg/{component}",views:{sub:{controller:"ComponentDetailsPg95Controller",templateUrl:"../app/components/partials/detailspg95.html"}}}).state("components.componentLog",{url:"^/log/{component}",views:{sub:{controller:"ComponentsLogController",templateUrl:"../app/components/partials/log.html"}}}).state("components.loading",{url:"^/",views:{sub:{controller:"bamLoading",templateUrl:"../app/components/partials/loading.html"}}}).state("components.profiler",{url:"^/profiler",views:{sub:{controller:"profilerController",templateUrl:"../app/components/partials/profiler.html"}}})}).controller("ComponentsController",["$scope",function($scope){}]),angular.module("bigSQL.common").directive("errSrc",function(){return{link:function(scope,element,attrs){scope.$watch(function(){return attrs.ngSrc},function(value){value||element.attr("src",attrs.errSrc)}),element.bind("error",function(){element.attr("src",attrs.errSrc)})}}}),angular.module("bigSQL.common").directive("progressbar",function(){return{scope:{value:"="},restrict:"E",template:"<div class='progressBar'><div></div></div>",link:function(scope,elem,attr){var progressbar=jQuery(elem).contents(),bar=progressbar.find("div");scope.$watch("value",function(newVal){if(void 0!=newVal){var progressBarWidth=newVal*progressbar.width()/100;bar.width(progressBarWidth)}})}}}),angular.module("bigSQL.common").directive("serverInfoDetails",function(){return{scope:{title:"@"},restrict:"E",template:'<div class="components-update-title-wrapper">  <h1><strong>{{title}}</strong> : {{data.host}} </h1>  <h3><strong> OS </strong> : {{data.os}} &nbsp; <strong>HW </strong>: {{data.mem}} GB, {{data.cores}} x {{data.cpu}} &nbsp; <strong>PGC</strong> : {{data.version}}</h3></div>',controller:["$scope","MachineInfo","PubSubService",function($scope,MachineInfo,PubSubService){var sessionPromise=PubSubService.getSession();sessionPromise.then(function(session){var promise=MachineInfo.get(session);promise.then(function(data){$scope.data=data})})}]}}),angular.module("bigSQL.common").directive("validPasswordC",function(){return{require:"ngModel",link:function(scope,elm,attrs,ctrl){ctrl.$parsers.unshift(function(viewValue,$scope){var noMatch=viewValue!=scope.initForm.password.$viewValue;ctrl.$setValidity("noMatch",!noMatch)})}}}),angular.module("bigSQL.common").factory("MachineInfo",function(PubSubService,$q,$filter){var machineInfo,updationMode="",setUpdationMode=function(machineInfo){try{var currentDate=new Date,today=new Date(currentDate),sevenDaysBackDate=new Date;sevenDaysBackDate=sevenDaysBackDate.setDate(today.getDate()-7),sevenDaysBackDate=$filter("date")(sevenDaysBackDate,"yyyy-MM-dd"),updationMode=null!=machineInfo.interval&&machineInfo.interval?"auto":"manual"}catch(err){throw new Error(err)}},getUpdationMode=function(){return updationMode},get=function(session){return $q(function(resolve,reject){var subscription;session.subscribe("com.bigsql.onInfo",function(data){(null==data||void 0==data)&&reject("No Data Available"),machineInfo=JSON.parse(data[0][0])[0],session.unsubscribe(subscription),setUpdationMode(machineInfo),resolve(machineInfo)}).then(function(sub){subscription=sub}),session.call("com.bigsql.info")})},set=function(info){machineInfo=info};return{get:get,set:set,getUpdationMode:getUpdationMode,setUpdationMode:setUpdationMode}}),angular.module("bigSQL.common").factory("PubSubService",function($window,$rootScope,$q,$interval){function getConnection(){return connection}function initConnection(){void 0==connection&&(connection=new autobahn.Connection({transports:[{type:"websocket",url:wsuri}],realm:"realm1"}))}function openConnection(sessionCreated){connection.open(),connection.onopen=function(sessionObj){session=sessionObj,sessionCreated(session)}}function closeConnection(){connection.close("closed","Connection Closed"),connection.onclose=function(){connection=void 0,session=void 0}}function getSession(){return $q(function(resolve,reject){if(void 0===session){if(void 0==connection)connection=initConnection(),resolve(openConnection());else if(void 0!=connection.session&&null!=connection.session)if(connection.session.isOpen)session=connection.session,resolve(session);else try{var count=0,interval=$interval(function(){count++,connection.session.isOpen?($interval.cancel(interval),resolve(connection.session)):!connection.session.isOpen&&count>20&&($interval.cancel(interval),reject("connection has failed"))},100)}catch(err){throw new Error(err)}}else resolve(session)})}var connection,session,wsuri;return wsuri="file://"==$window.location.origin?"ws://127.0.0.1:8080":("http:"===document.location.protocol?"ws:":"wss:")+"//"+document.location.host+"/ws",{getConnection:getConnection,initConnection:initConnection,openConnection:openConnection,getSession:getSession,closeConnection:closeConnection}}),angular.module("bigSQL.components").controller("ComponentBamUpdateController",["$rootScope","$scope","$stateParams","PubSubService","$state","$uibModalInstance","MachineInfo","UpdateBamService","$window",function($rootScope,$scope,$stateParams,PubSubService,$state,$uibModalInstance,MachineInfo,UpdateBamService,$window){function updateComponents(val){session=val,$scope.component={};var bamUpdatePromise=UpdateBamService.getBamUpdateInfo();bamUpdatePromise.then(function(info){$scope.updateVersion=info.current_version,$scope.currentVersion=info.version},function(){throw new Error("failed to subscribe to topic updateComponents",err)}),$scope.redirect=function(){$uibModalInstance.dismiss("cancel"),$window.location.reload(!0),$rootScope.$emit("bamUpdated")},$scope.action=function(event){session.call("com.bigsql.update",["bam2"]).then(function(sub){$scope.bamUpdateIntiated=!0,$scope.updatingStatus=!0,$scope.$apply()},function(err){throw new Error("failed to install comp",err)})}}var session,subscriptions=[],sessionPromise=PubSubService.getSession();sessionPromise.then(function(val){session=val}),updateComponents(),$rootScope.$on("sessionCreated",function(){var bamUpdatePromise=UpdateBamService.getBamUpdateInfo();bamUpdatePromise.then(function(info){1==info.is_current?$scope.bamUpdatedStatus=!0:$scope.bamNotUpdatedStatus=!0,$scope.updatingStatus=!1},function(){throw new Error("failed to subscribe to topic updateComponents",err)})},function(failObj){throw new Error(failObj)}),$scope.$on("$destroy",function(){for(var i=0;i<subscriptions.length;i++)session.unsubscribe(subscriptions[i])})}]),angular.module("bigSQL.components").controller("ComponentDetailsController",["$scope","$stateParams","PubSubService","$rootScope",function($scope,$stateParams,PubSubService,$rootScope){var session,subscriptions=[],dependentCount=0,componentStatus=0;$scope.alerts=[],$scope.statusColors={Stopped:"orange",NotInitialized:"yellow",Running:"green"};var sessionPromise=PubSubService.getSession();sessionPromise.then(function(val){function compAction(action){"init"==action?$scope.component.spinner="Initializing..":"start"==action?$scope.component.spinner="Starting..":"stop"==action?$scope.component.spinner="Stopping..":"remove"==action?$scope.component.spinner="Removing..":"restart"==action&&($scope.component.spinner="Restarting..");var sessionKey="com.bigsql."+action;session.call(sessionKey,[$scope.component.component])}session=val,$scope.component={},session.call("com.bigsql.infoComponent",[$stateParams.component]);var getCurrentObject=function(list,name){for(var currentObject,i=0;i<list.length;i++)if(list[i].component==name)return currentObject=list[i]};session.subscribe("com.bigsql.status",function(data){var list=JSON.parse(data[0]);componentStatus=getCurrentObject(list,$stateParams.component),componentStatus.state!=$scope.component.status&&session.call("com.bigsql.infoComponent",[$stateParams.component])}).then(function(sub){subscriptions.push(sub)});var onRemove=function(response){var data=JSON.parse(response[0])[0];if("error"==data.status){var alertObj={msg:data.msg,type:"danger"};$scope.alerts.push(alertObj),$scope.$apply()}"complete"==data.status&&session.call("com.bigsql.infoComponent",[$stateParams.component])};session.subscribe("com.bigsql.onRemove",onRemove).then(function(sub){subscriptions.push(sub)}),session.subscribe("com.bigsql.onInit",function(data){var res=JSON.parse(data[0])[0];"error"==res.status?$scope.alerts.push({msg:res.msg,type:"danger"}):($scope.alerts.push({msg:res.msg}),$scope.component.spinner=res.msg,compAction("start")),$scope.$apply()}).then(function(sub){subscriptions.push(sub)}),session.subscribe("com.bigsql.onInfoComponent",function(args){var jsonD=JSON.parse(args[0][0]);window.location.href.split("/").pop(-1)==jsonD[0].component&&($scope.component=jsonD[0],$scope.$apply())}).then(function(sub){$rootScope.$emit("topMenuEvent"),subscriptions.push(sub)}),session.call("com.bigsql.getRelNotes",[$stateParams.component]),session.subscribe("com.bigsql.onGetRelNotes",function(argument){$scope.relnotes=argument[0]}).then(function(sub){subscriptions.push(sub)}),$scope.isCollapsed2=!0,$scope.action=function(event){if("A"===event.target.tagName){"init"==event.target.attributes.action.value?$scope.component.spinner="Initializing..":"start"==event.target.attributes.action.value?$scope.component.spinner="Starting..":"stop"==event.target.attributes.action.value?$scope.component.spinner="Stopping..":"remove"==event.target.attributes.action.value&&($scope.component.spinner="Removing..");var sessionKey="com.bigsql."+event.target.attributes.action.value;session.call(sessionKey,[$scope.component.component])}},session.subscribe("com.bigsql.onInstall",function(response){var data=JSON.parse(response[0])[0];"deplist"==data.state?data.deps.length>1&&(dependentCount=data.deps.length,$scope.component.installationDependents=!0):"start"==data.status?($scope.component.installationStart=data,$scope.component.installation=!0,$stateParams.component==data.component?delete $scope.component.installationDependents:$scope.component.installationDependents=!0):"wip"==data.status?($scope.component.installationRunning=data,$scope.component.progress=data.pct):("complete"==data.status||"cancelled"==data.status)&&("unpack"==data.state&&(session.call("com.bigsql.infoComponent",[$stateParams.component]),["pg96","pg95","pg94","pg93","pg92"].indexOf(data.component)>=0&&($scope.component.status="NotInitialized",compAction("init"))),"cancelled"==data.status&&$scope.alerts.push({msg:data.msg,type:"danger"}),delete $scope.component.installationStart,delete $scope.component.installationRunning),"error"==data.state&&($scope.alerts.push({msg:data.msg,type:"danger"}),delete $scope.component.installation),$scope.$apply()}).then(function(sub){subscriptions.push(sub)})}),$scope.cancelInstallation=function(action){session.call("com.bigsql.cancelInstall")},$scope.closeAlert=function(index){$scope.alerts.splice(index,1)},$scope.$on("$destroy",function(){for(var i=0;i<subscriptions.length;i++)session.unsubscribe(subscriptions[i])})}]),angular.module("bigSQL.components").controller("ComponentDetailsPg95Controller",["$scope","$stateParams","PubSubService","$rootScope","$interval","MachineInfo","$uibModal",function($scope,$stateParams,PubSubService,$rootScope,$interval,MachineInfo,$uibModal){$scope.alerts=[];var infoRefreshRate,subscriptions=[],session=PubSubService.getSession(),dependentCount=0,componentStatus=0,actionCall=!1,activityTab=angular.element(document.querySelector("#activityTab"));$scope.statusColors={Stopped:"orange",NotInitialized:"yellow",Running:"green"},$scope.optionList=[{label:"Off",value:"0"},{label:"5",value:""},{label:"10",value:"10000"},{label:"15",value:"15000"},{label:"30",value:"30000"}],$scope.opt={interval:""};var getCurrentObject=function(list,name){for(var currentObject,i=0;i<list.length;i++)if(list[i].component==name)return currentObject=list[i]};$rootScope.$on("sessionCreated",function(){var sessPromise=PubSubService.getSession();sessPromise.then(function(sessParam){session=sessParam,$rootScope.$emit("topMenuEvent")})});var sessionPromise=PubSubService.getSession();sessionPromise.then(function(val){function compAction(action){"init"==action?$scope.component.spinner="Initializing..":"start"==action?$scope.component.spinner="Starting..":"stop"==action?$scope.component.spinner="Stopping..":"remove"==action?$scope.component.spinner="Removing..":"restart"==action&&($scope.component.spinner="Restarting..");var sessionKey="com.bigsql."+action;session.call(sessionKey,[$scope.component.component]).then(function(argument){callInfo()})}function callInfo(){session.call("com.bigsql.infoComponent",[$stateParams.component])}session=val,infoRefreshRate=$interval(callInfo,6e4),$scope.component={},session.call("com.bigsql.infoComponent",[$stateParams.component]),session.subscribe("com.bigsql.status",function(data){var list=JSON.parse(data[0]);componentStatus=getCurrentObject(list,$stateParams.component),$rootScope.$emit("componentStatus",componentStatus),componentStatus.state!=$scope.component.status&&session.call("com.bigsql.infoComponent",[$stateParams.component])}).then(function(sub){subscriptions.push(sub)}),$scope.changeOption=function(value){$rootScope.$emit("refreshRateVal",$scope.opt.interval)},$scope.autostartChange=function(args){var autoStartVal;autoStartVal=args?"on":"off",session.call("com.bigsql.autostart",[autoStartVal,$stateParams.component]).then(function(sub){session.call("com.bigsql.infoComponent",[$stateParams.component])})},$scope.dataBaseTabEvent=function(args){"Running"==$scope.component.status&&session.call("com.bigsql.db_list",[$stateParams.component])},$scope.cancelInstallation=function(action){session.call("com.bigsql.cancelInstall")},session.subscribe("com.bigsql.ondblist",function(data){data[0].component==$stateParams.component&&($scope.myData=data[0].list,$scope.gridOptions={data:"myData",columnDefs:[{field:"datname",displayName:"Database"},{field:"owner",displayName:"Owner"},{field:"size",displayName:"Size (MB)",cellClass:"numberCell",headerTooltip:"This is the total disk space used by the database, which includes all the database objects like Tables and Indexes within that database",sort:{direction:"desc",priority:0}}],enableColumnMenus:!1},$scope.$apply())}).then(function(sub){subscriptions.push(sub)}),$scope.configureTabEvent=function(args){"Running"==$scope.component.status&&session.call("com.bigsql.pg_settings",[$stateParams.component])},session.subscribe("com.bigsql.onPGsettings",function(data){if(data[0].component==$stateParams.component){$scope.settingsData=data[0].list,$scope.gridSettings={expandableRowTemplate:'<div ui-grid="row.entity.subGridOptions" style="height: 140px"></div>'},$scope.gridSettings.columnDefs=[{field:"name",displayName:"Category"}],$scope.gridSettings.enableColumnMenus=!1,data=data[0].list;for(var i=0;i<data.length;i++)data[i].subGridOptions={columnDefs:[{field:"name",displayName:"Parameter",cellTemplate:'<div class="ui-grid-cell-contents" title="{{row.entity.short_desc}}"><a>{{ COL_FIELD }}</a></div>'},{field:"setting",displayName:"value"},{field:"short_desc",visible:!1}],data:data[i].settings,enableColumnMenus:!1};$scope.gridSettings.data=data,$scope.$apply()}}).then(function(sub){subscriptions.push(sub)}),$scope.securityTabEvent=function(args){session.call("com.bigsql.read_pg_hba_conf",[$stateParams.component])},session.subscribe("com.bigsql.onPGhba",function(data){data[0].component==$stateParams.component&&($scope.securityTabContent=data[0].contents,$scope.$apply())}).then(function(sub){subscriptions.push(sub)}),session.subscribe("com.bigsql.onAutostart",function(data){var res=JSON.parse(data[0])[0];"error"==res.status?$scope.alerts.push({msg:res.msg,type:"danger"}):"completed"==res.status&&$scope.alerts.push({msg:res.msg}),$scope.$apply()}).then(function(sub){subscriptions.push(sub)});var onRemove=function(response){var data=JSON.parse(response[0])[0];if("error"==data.status){var alertObj={msg:data.msg,type:"danger"};$scope.alerts.push(alertObj),$scope.$apply()}"complete"==data.status&&session.call("com.bigsql.infoComponent",[$stateParams.component])};session.subscribe("com.bigsql.onRemove",onRemove).then(function(sub){subscriptions.push(sub)}),session.subscribe("com.bigsql.onInit",function(data){var res=JSON.parse(data[0])[0];"error"==res.status?$scope.alerts.push({msg:res.msg,type:"danger"}):($scope.alerts.push({msg:res.msg}),compAction("start")),$scope.$apply()}).then(function(sub){subscriptions.push(sub)}),$scope.closeAlert=function(index){$scope.alerts.splice(index,1)},session.subscribe("com.bigsql.onActivity",function(data){if(data[0].component==$stateParams.component){var parseData=data[0].activity;void 0===parseData||0==parseData.length?($scope.activities="",$scope.noActivities=!0,activityTab.empty()):($scope.noActivities=!1,$scope.activities=parseData)}}).then(function(sub){subscriptions.push(sub)}),session.subscribe("com.bigsql.onInfoComponent",function(args){var jsonD=JSON.parse(args[0][0]);"on"==jsonD[0].autostart?jsonD[0].autostart=!0:jsonD[0].autostart=!1,window.location.href.split("/").pop(-1)==jsonD[0].component&&($scope.component=jsonD[0],(void 0==$scope.uibStatus||actionCall)&&(actionCall=!1,"Running"!=$scope.component.status?$scope.uibStatus={tpsChartCollapsed:!1,rpsChartCollapsed:!1,diskChartCollapsed:!0,cpuChartCollapsed:!0,connectionsCollapsed:!1}:$scope.uibStatus={tpsChartCollapsed:!0,rpsChartCollapsed:!0,diskChartCollapsed:!1,cpuChartCollapsed:!0,connectionsCollapsed:!1},$scope.$apply()))}).then(function(sub){subscriptions.push(sub)}),$scope.logdirSelect=function(){$interval.cancel(infoRefreshRate)},$scope.openInitPopup=function(comp){var modalInstance=$uibModal.open({templateUrl:"../app/components/partials/pgInitialize.html",controller:"pgInitializeController"});modalInstance.component=comp},$scope.releaseTabEvent=function(argument){session.call("com.bigsql.getRelNotes",[$stateParams.component])},session.subscribe("com.bigsql.onGetRelNotes",function(argument){$scope.relnotes=argument[0],$scope.$apply()}).then(function(sub){subscriptions.push(sub)}),$scope.openRelnotes=function(relnotes){var modalInstance=$uibModal.open({templateUrl:"../app/components/partials/relnotes.html",controller:"relnotesController"});modalInstance.relnotes=relnotes},session.subscribe("com.bigsql.onInstall",function(response){var data=JSON.parse(response[0])[0];"deplist"==data.state&&data.deps.length>1&&(dependentCount=data.deps.length,$scope.component.installationDependents=!0),"start"==data.status&&($scope.component.installationStart=data,$scope.component.installation=!0),"wip"==data.status&&($scope.component.installationRunning=data,$scope.component.progress=data.pct),("complete"==data.status||"cancelled"==data.status)&&("unpack"==data.state&&(session.call("com.bigsql.infoComponent",[$stateParams.component]),$scope.component.status="NotInitialized",$scope.openInitPopup($stateParams.component)),"cancelled"==data.status&&$scope.alerts.push({msg:data.msg,type:"danger"}),0!=dependentCount&&(dependentCount-=1,0==dependentCount&&delete $scope.component.installationDependents),delete $scope.component.installationStart,delete $scope.component.installationRunning),"error"==data.state&&($scope.alerts.push({msg:data.msg,type:"danger"}),delete $scope.component.installationStart,delete $scope.component.installationRunning,delete $scope.component.installation),$scope.$apply()}).then(function(sub){subscriptions.push(sub)})}),$scope.action=function(event){if("A"===event.target.tagName&&void 0!=event.target.attributes.action){"init"==event.target.attributes.action.value?$scope.component.spinner="Initializing..":"start"==event.target.attributes.action.value?$scope.component.spinner="Starting..":"stop"==event.target.attributes.action.value?$scope.component.spinner="Stopping..":"remove"==event.target.attributes.action.value?$scope.component.spinner="Removing..":"restart"==event.target.attributes.action.value&&($scope.component.spinner="Restarting..");var sessionKey="com.bigsql."+event.target.attributes.action.value;session.call(sessionKey,[$scope.component.component]).then(function(sub){actionCall=!0})}},$scope.closeAlert=function(index){$scope.alerts.splice(index,1)},$rootScope.$on("initComp",function(event,comp){$scope.component.spinner="Initializing.."}),$scope.$on("$destroy",function(){for(var i=0;i<subscriptions.length;i++)session.unsubscribe(subscriptions[i]);$interval.cancel(infoRefreshRate)})}]),angular.module("bigSQL.components").controller("ComponentsLogController",["$scope","PubSubService","$state","$interval","$location","$window","$rootScope",function($scope,PubSubService,$state,$interval,$location,$window,$rootScope){function on_log(args){$("#logviewer").append("<br />"+args[0]),autoScroll&&tailScroll()}function tailScroll(){var height=$("#logviewer").get(0).scrollHeight;$("#logviewer").animate({scrollTop:height},5)}var subscriptions=[],count=1;$scope.components={};var autoScroll=!0;$scope.logfile,$scope.intervalPromise=null;var session,logviewer=angular.element(document.querySelector("#logviewer"));$rootScope.$on("sessionCreated",function(){var sessPromise=PubSubService.getSession();sessPromise.then(function(sessParam){session=sessParam,$rootScope.$emit("topMenuEvent")})});var sessionPromise=PubSubService.getSession();sessionPromise.then(function(val){session=val;var logComponent=$location.path().split("log/").pop(-1);$scope.selectComp="#"+$location.path(),"pgcli"!=logComponent?session.call("com.bigsql.infoComponent",[logComponent]):($scope.logfile="pgcli",$scope.intervalPromise,session.call("com.bigsql.selectedLog",["pgcli"])),session.subscribe("com.bigsql.onInfoComponent",function(args){if(1==count){var jsonD=JSON.parse(args[0][0]);window.location.href.split("/").pop(-1)==jsonD[0].component&&(jsonD[0].current_logfile&&($scope.logfile=jsonD[0].current_logfile),session.call("com.bigsql.selectedLog",[$scope.logfile]),$scope.intervalPromise),count+=1}}).then(function(subscription){subscriptions.push(subscription)}),session.subscribe("com.bigsql.pgcliDir",function(dir){$scope.selectedLog=dir[0],$scope.$apply()}).then(function(subscription){subscriptions.push(subscription)}),session.call("com.bigsql.checkLogdir"),session.subscribe("com.bigsql.onCheckLogdir",function(components){$scope.components=JSON.parse(components[0]),$scope.$apply()}).then(function(subscription){subscriptions.push(subscription)}),session.subscribe("com.bigsql.log",function(lg){on_log(lg)}).then(function(subscription){subscriptions.push(subscription)}),session.subscribe("com.bigsql.logError",function(err){$("#logviewer").empty(),$("#logviewer").append("<h4><br />"+err[0]+"</h4>")}).then(function(sub){subscriptions.push(sub)}),$scope.intervalPromise=$interval(function(){void 0!=$scope.logfile&&session.call("com.bigsql.liveLog",[$scope.logfile])},5e3);var tab=1e3;$scope.setTab=function(tabId){tab=tabId},$scope.isSet=function(tabId){return tab===tabId},$scope.selectedButton,$scope.selectButton=function(id){$scope.selectedButton=id}}),$scope.isAutoScroll=function(){return autoScroll},$scope.stopScrolling=function(event){"checked"==event.target.value?(event.target.value="unchecked",$scope.checked=!1,autoScroll=!1):(event.target.value="checked",autoScroll=!0)},$scope.action=function(event){logviewer.empty(),session.call("com.bigsql.logIntLines",[event,$scope.logfile])},$scope.onLogCompChange=function(){$interval.cancel($scope.intervalPromise),$window.location.href=$scope.selectComp},$scope.$on("$destroy",function(){for(var i=0;i<subscriptions.length;i++)session.unsubscribe(subscriptions[i])})}]),angular.module("bigSQL.components").controller("ComponentsSettingsController",["$rootScope","$scope","$uibModal","PubSubService","MachineInfo","UpdateComponentsService",function($rootScope,$scope,$uibModal,PubSubService,MachineInfo,UpdateComponentsService){$scope.alerts=[];var session,subscriptions=[];$scope.updateSettings,$scope.components={},$scope.settingsOptions=[{name:"Weekly"},{name:"Daily"},{name:"Monthly"}],$scope.open=function(manual){UpdateComponentsService.set(""),"manual"==manual?UpdateComponentsService.setCheckUpdatesManual():UpdateComponentsService.setCheckUpdatesAuto();$uibModal.open({templateUrl:"../app/components/partials/updateModal.html",windowClass:"bam-update-modal modal",controller:"ComponentsUpdateController"})};var sessionPromise=PubSubService.getSession();sessionPromise.then(function(val){$rootScope.$emit("topMenuEvent"),session=val;var promise=MachineInfo.get(session);promise.then(function(data){$scope.pgcInfo=data,data.last_update_utc&&($scope.lastUpdateStatus=new Date(data.last_update_utc.replace(/-/g,"/")+" UTC").toString().split(" ",[5]).splice(1).join(" ")),"manual"==MachineInfo.getUpdationMode()?$scope.settingType="manual":($scope.settingType="auto",session.call("com.bigsql.get_host_settings"))}),$scope.updateManualSettings=function(){session.call("com.bigsql.update_host_settings",["localhost","None",""]).then(function(subscription){session.call("com.bigsql.get_host_settings").then(function(sub){MachineInfo.setUpdationMode(sub);var data="Update settings has been set to Manual";$scope.alerts.push({msg:data}),$scope.$apply()})})},$scope.onAutomaticOptionSelection=function(value){session.call("com.bigsql.update_host_settings",["localhost",$scope.automaticSettings.name,""]).then(function(subscription){session.call("com.bigsql.get_host_settings").then(function(sub){MachineInfo.setUpdationMode(sub);var data="Update settings has been set to "+sub.interval+", next update is on "+sub.next_update_utc;$scope.alerts.push({msg:data}),$scope.$apply()})})},$scope.closeAlert=function(index){$scope.alerts.splice(index,1)}}),$scope.$on("$destroy",function(){for(var i=0;i<subscriptions.length;i++)session.unsubscribe(subscriptions[i])})}]),angular.module("bigSQL.components").controller("ComponentsStatusController",["$scope","PubSubService","MachineInfo","$interval","$rootScope","$uibModal",function($scope,PubSubService,MachineInfo,$interval,$rootScope,$uibModal){function handleVisibilityChange(){"hidden"==document.visibilityState?($interval.cancel(refreshRate),clear()):"visible"==document.visibilityState&&(session.call("com.bigsql.initial_graphs"),clear(),refreshRate=$interval(callGraphs,5e3))}function clear(){$scope.cpuData[0].values.splice(0,$scope.cpuData[0].values.length),$scope.cpuData[1].values.splice(0,$scope.cpuData[1].values.length),$scope.diskIO[0].values.splice(0,$scope.diskIO[0].values.length),$scope.diskIO[1].values.splice(0,$scope.diskIO[1].values.length)}function callGraphs(){session.call("com.bigsql.live_graphs")}var subscriptions=[];$scope.comps={};var session,refreshRate,currentComponent={};$scope.alerts=[],$scope.init=!1,$scope.statusColors={Stopped:"orange","Not Initialized":"yellow",Running:"green"};var apis={Stop:"com.bigsql.stop",Restart:"com.bigsql.restart",Initialize:"com.bigsql.init",Start:"com.bigsql.start",Remove:"com.bigsql.remove"},getCurrentComponent=function(name){for(var i=0;i<$scope.comps.length;i++)if($scope.comps[i].component==name)return currentComponent=$scope.comps[i]};$scope.cpuChart={chart:{type:"lineChart",height:150,margin:{top:20,right:40,bottom:40,left:55},x:function(d){return d.x},y:function(d){return d.y},noData:"Loading...",interactiveLayer:{tooltip:{headerFormatter:function(d){var point=new Date(d);return d3.time.format("%Y/%m/%d %H:%M:%S")(point)}}},xAxis:{xScale:d3.time.scale(),tickFormat:function(d){var point=new Date(d);return d3.time.format("%H:%M:%S")(point)}},yAxis:{tickFormat:function(d){return d3.format(",")(d)}},forceY:[0,100],useInteractiveGuideline:!0,duration:500}},$scope.ioChart=angular.copy($scope.cpuChart),$scope.cpuChart.chart.type="stackedAreaChart",$scope.cpuChart.chart.showControls=!1,$scope.cpuData=[{values:[],key:"CPU System %",color:"#006994",area:!0},{values:[],key:"CPU User %",color:"#FF5733",area:!0}],$scope.diskIO=[{values:[],key:"Read Bytes (MB)",color:"#FF5733"},{values:[],key:"Write Bytes (MB)",color:"#006994"}];var sessionPromise=PubSubService.getSession();sessionPromise.then(function(val){function compAction(action,comp){currentComponent=getCurrentComponent(comp),currentComponent.showingSpinner=!0,session.call("com.bigsql."+action,[comp])}$rootScope.$emit("topMenuEvent"),session=val;var promise=MachineInfo.get(session);promise.then(function(data){$scope.pgcInfo=data},function(msg){throw new Error(msg)}),session.subscribe("com.bigsql.onServerStatus",function(components){$scope.comps=JSON.parse(components[0]),0==$scope.comps.length?$scope.showMsg=!0:$scope.showMsg=!1}).then(function(subscription){subscriptions.push(subscription)}),session.subscribe("com.bigsql.status",function(components){$scope.comps=JSON.parse(components[0]),0==$scope.comps.length?$scope.showMsg=!0:$scope.showMsg=!1}).then(function(subscription){subscriptions.push(subscription)}),session.subscribe("com.bigsql.graphs",function(data){$scope.cpuData[0].values.length>60&&($scope.cpuData[0].values.shift(),$scope.cpuData[1].values.shift(),$scope.diskIO[0].values.shift(),$scope.diskIO[1].values.shift());var timeVal=Math.round(new Date(data[0].time+" UTC").getTime());$scope.cpuData[0].values.push({x:timeVal,y:data[0].cpu_per.system}),$scope.cpuData[1].values.push({x:timeVal,y:data[0].cpu_per.user}),$scope.diskIO[0].values.push({x:timeVal,y:data[0].io.read_bytes}),$scope.diskIO[1].values.push({x:timeVal,y:data[0].io.write_bytes})}).then(function(subscription){subscriptions.push(subscription)}),session.subscribe("com.bigsql.initgraphs",function(data){var graph_data=data[0];$scope.cpuData[1].values.length=0,$scope.cpuData[0].values.length=0,$scope.diskIO[0].values.length=0,$scope.diskIO[1].values.length=0;for(var i=0;i<graph_data.length;i+=1){var timeVal=Math.round(new Date(graph_data[i].time+" UTC").getTime());$scope.cpuData[0].values.push({x:timeVal,y:graph_data[i].cpu_per.system}),$scope.cpuData[1].values.push({x:timeVal,y:graph_data[i].cpu_per.user}),$scope.diskIO[0].values.push({x:timeVal,y:graph_data[i].io.read_bytes}),$scope.diskIO[1].values.push({x:timeVal,y:graph_data[i].io.write_bytes})}$scope.cpuData.length<=2&&($scope.cpuChart.chart.noData="No Data Available."),
$scope.diskIO.length<=2&&($scope.ioChart.chart.noData="No Data Available.")}).then(function(subscription){subscriptions.push(subscription),refreshRate=$interval(callGraphs,5e3)}),session.call("com.bigsql.serverStatus"),session.call("com.bigsql.initial_graphs"),session.subscribe("com.bigsql.onInit",function(data){var res=JSON.parse(data[0])[0];"error"==res.status?$scope.alerts.push({msg:res.msg,type:"danger"}):($scope.alerts.push({msg:res.msg}),compAction("start",res.component))}).then(function(sub){subscriptions.push(sub)}),$scope.closeAlert=function(index){$scope.alerts.splice(index,1)}}),$scope.openInitPopup=function(comp){var modalInstance=$uibModal.open({templateUrl:"../app/components/partials/pgInitialize.html",controller:"pgInitializeController"});modalInstance.component=comp},$scope.action=function(event){if("Initialize"!=event.target.text){var showingSpinnerEvents=["Start","Stop"];showingSpinnerEvents.indexOf(event.target.innerText)>=0&&(currentComponent=getCurrentComponent(event.currentTarget.getAttribute("value")),currentComponent.showingSpinner=!0),"A"==event.target.tagName&&session.call(apis[event.target.innerText],[event.currentTarget.getAttribute("value")])}},$rootScope.$on("initComp",function(event,comp){currentComponent=getCurrentComponent(comp),currentComponent.showingSpinner=!0}),document.addEventListener("visibilitychange",handleVisibilityChange,!1),$scope.$on("$destroy",function(){for(var i=0;i<subscriptions.length;i++)session.unsubscribe(subscriptions[i]);$interval.cancel(refreshRate)})}]),angular.module("bigSQL.components").controller("ComponentsUpdateController",["$scope","$uibModalInstance","PubSubService","UpdateComponentsService","MachineInfo",function($scope,$uibModalInstance,PubSubService,UpdateComponentsService,MachineInfo){var session,subscriptions=[];$scope.components={};var checkUpdates,currentComponent={};UpdateComponentsService.get()&&($scope.selectedComp=UpdateComponentsService.get()),checkUpdates=UpdateComponentsService.getCheckUpdates()?!0:!1;var sessionPromise=PubSubService.getSession();sessionPromise.then(function(val){$scope.updateSettings=MachineInfo.getUpdationMode(),session=val,checkUpdates?($scope.loadingSpinner=!0,$scope.body=!1,session.call("com.bigsql.updatesCheck").then(function(sub){$scope.loadingSpinner=!1,$scope.body=!0,session.call("com.bigsql.list")})):($scope.body=!0,session.call("com.bigsql.list")),$scope.ok=function(){$uibModalInstance.close()},$scope.cancel=function(){$uibModalInstance.dismiss("cancel")},session.subscribe("com.bigsql.onList",function(components){$scope.noUpdates=!0,$scope.components=JSON.parse(components[0][0]),$scope.hideLatestInstalled=!0,$scope.hideNewComponents=!1;for(var i=0;i<$scope.components.length;i++){0==$scope.components[i].is_current&&$scope.components[i].current_version&&($scope.noUpdates=!1),1==$scope.components[i].is_new&&($scope.hideNewComponents=!0),1==$scope.components[i].is_updated&&($scope.hideLatestInstalled=!1);try{UpdateComponentsService.get().component==$scope.components[i].component?$scope.components[i].selected=!0:$scope.components[i].selected=!1}catch(err){}}$scope.noUpdates?$scope.uibStatus={newComponents:!0,installedComponents:!0}:$scope.uibStatus={newComponents:!1,installedComponents:!1},$scope.$apply()}).then(function(subscription){subscriptions.push(subscription)});var getCurrentComponent=function(name){for(var i=0;i<$scope.components.length;i++)if($scope.components[i].component==name)return currentComponent=$scope.components[i]};session.subscribe("com.bigsql.onInstall",function(installStream){var data=JSON.parse(installStream[0])[0];if("start"==data.status)currentComponent=getCurrentComponent(data.component),currentComponent.installationStart=data,currentComponent.installation=!0;else if("wip"==data.status)currentComponent=getCurrentComponent(data.component),currentComponent.installationRunning=data,currentComponent.progress=data.pct;else if("complete"==data.status&&"download"==data.state)currentComponent=getCurrentComponent(data.component),delete currentComponent.installationStart,delete currentComponent.installationRunning,delete currentComponent.installation;else if("complete"==data.status&&"update"==data.state)if(delete currentComponent.installationStart,delete currentComponent.installationRunning,delete currentComponent.installation,angular.element(document.querySelector("#"+currentComponent.component)).remove(),selUpdatedComp.length>0){var popListComp=selUpdatedComp.pop();$scope.compAction("update",popListComp.component)}else session.call("com.bigsql.getBamConfig"),$uibModalInstance.dismiss("cancel");$scope.$apply()}).then(function(subscription){subscriptions.push(subscription)}),$scope.compAction=function(action,compName){var sessionKey="com.bigsql."+action;session.call(sessionKey,[compName])};var selUpdatedComp=[];$scope.selectedUpdate=function(val){for(var i=0;i<$scope.components.length;i++)$scope.components[i].selected&&$scope.components[i].current_version&&selUpdatedComp.push($scope.components[i]);if(selUpdatedComp.length>1){var popComp=selUpdatedComp.pop().component;$scope.compAction("update",popComp)}else session.call("com.bigsql.update",[selUpdatedComp[0].component]).then(function(sub){$uibModalInstance.dismiss("cancel")},function(err){throw new Error("failed to update comp",err)})}}),$scope.cancelInstallation=function(action){session.call("com.bigsql.cancelInstall")},$scope.$on("$destroy",function(){for(var i=0;i<subscriptions.length;i++)session.unsubscribe(subscriptions[i])})}]),angular.module("bigSQL.components").controller("ComponentsViewController",["$scope","$uibModal","PubSubService","$state","UpdateComponentsService","$filter","$rootScope","$timeout","$window",function($scope,$uibModal,PubSubService,$state,UpdateComponentsService,$filter,$rootScope,$timeout,$window){function changePostgresOrder(data){for(var comps=data,pgComps=[],nonPgComps=[],i=0;i<comps.length;i++)"PostgreSQL"==comps[i].category_desc?pgComps.push(comps[i]):nonPgComps.push(comps[i]);return pgComps.reverse().concat(nonPgComps)}$scope.alerts=[];var subscriptions=[];$scope.components={};var session,currentComponent={},parentComponent={},dependentCount=0,depList=[];$scope.updateSettings,$scope.loading=!0,$scope.retry=!1,$scope.disableShowInstalled=!1;var getCurrentComponent=function(name){for(var i=0;i<$scope.components.length;i++)if($scope.components[i].component==name)return currentComponent=$scope.components[i]};$rootScope.$on("sessionCreated",function(){var sessPromise=PubSubService.getSession();sessPromise.then(function(sessParam){session=sessParam})});var sessionPromise=PubSubService.getSession();sessionPromise.then(function(val){function wait(){$window.location.reload()}session=val,session.call("com.bigsql.info"),$scope.open=function(manual){try{UpdateComponentsService.set(this.c)}catch(err){}"manual"==manual?UpdateComponentsService.setCheckUpdatesManual():UpdateComponentsService.setCheckUpdatesAuto();$uibModal.open({templateUrl:"../app/components/partials/updateModal.html",windowClass:"bam-update-modal modal",controller:"ComponentsUpdateController"})},$scope.openInitPopup=function(comp){var modalInstance=$uibModal.open({templateUrl:"../app/components/partials/pgInitialize.html",controller:"pgInitializeController"});modalInstance.component=comp},session.call("com.bigsql.getBamConfig",["showInstalled"]),session.subscribe("com.bigsql.onGetBamConfig",function(settings){$scope.showInstalled=settings[0],$scope.$apply()}).then(function(subscription){subscriptions.push(subscription)}),session.call("com.bigsql.list").then(function(subscribe){$rootScope.$emit("topMenuEvent")},function(error){$timeout(wait,5e3),$scope.loading=!1,$scope.retry=!0}),session.call("com.bigsql.getTestSetting"),session.subscribe("com.bigsql.onGetTestSetting",function(settings){"test"==settings[0]?$scope.isList=!0:$scope.isList=!1,$scope.$apply()}).then(function(subscription){subscriptions.push(subscription)}),session.subscribe("com.bigsql.onList",function(components){if($scope.nothingInstalled=!1,$scope.showInstalled){var onlyInstalled=$(JSON.parse(components[0][0])).filter(function(i,n){return"NotInstalled"!=n.status&&"bam2"!=n.component});$scope.components=changePostgresOrder(onlyInstalled),0==$scope.components.length&&($scope.components=[],$scope.nothingInstalled=!0)}else $scope.components=changePostgresOrder(JSON.parse(components[0][0]));$scope.loading=!1;for(var i=0;i<$scope.components.length;i++)$scope.components[i].progress=0;for(var Checkupdates=0,i=0;i<$scope.components.length;i++)Checkupdates+=$scope.components[i].updates;$scope.$apply()}).then(function(subscription){subscriptions.push(subscription)}),session.subscribe("com.bigsql.onInfo",function(machineInfo){$scope.machineInfo=JSON.parse(machineInfo[0][0]);var myDate=new Date,previousDay=new Date(myDate);previousDay.setDate(myDate.getDate()-7),$scope.prevWeek=$filter("date")(previousDay,"yyyy-MM-dd");for(var i=0;i<$scope.machineInfo.length;i++)null==$scope.machineInfo[i].interval&&(null==$scope.machineInfo[i].last_update_utc||$scope.machineInfo[i].last_update_utc<$scope.prevWeek)&&($scope.updateBtn=!0);null!=$scope.machineInfo.interval&&$scope.machineInfo.interval?$scope.updateSettings="auto":$scope.updateSettings="manual"}).then(function(subscription){subscriptions.push(subscription)}),session.subscribe("com.bigsql.onInit",function(data){var res=JSON.parse(data[0])[0];"error"==res.status?($scope.alerts.push({msg:res.msg,type:"danger"}),delete currentComponent.init,$scope.disableShowInstalled=!1):($scope.alerts.push({msg:res.msg}),currentComponent=getCurrentComponent(res.component),currentComponent.status="Installed",currentComponent.init=!1,$scope.disableShowInstalled=!1,$scope.compAction("start",res.component)),$scope.$apply()}).then(function(subscription){subscriptions.push(subscription)}),$scope.setTest=function(event){var param;param=$scope.isList?"test":"prod",session.call("com.bigsql.setTestSetting",[param]),session.call("com.bigsql.list")},session.subscribe("com.bigsql.onInstall",function(installStream){var data=JSON.parse(installStream[0])[0];"deplist"==data.state?data.deps.length>1&&(parentComponent=getCurrentComponent(data.component[0]),parentComponent.installationDependents=data,dependentCount=data.deps.length,depList=data.deps,currentComponent.installation=!0,parentComponent.installation=!0):"start"==data.status?(currentComponent=getCurrentComponent(data.component),currentComponent.installationStart=data,currentComponent.installation=!0,depList[depList.length-1]==currentComponent.component&&delete parentComponent.installationDependents):"wip"==data.status?(currentComponent.installationRunning=data,currentComponent.progress=data.pct):("complete"==data.status||"cancelled"==data.status)&&("unpack"==data.state&&"complete"==data.status&&(["pg96","pg95","pg94","pg93","pg92"].indexOf(data.component)>=0?(currentComponent.status="NotInitialized",$scope.openInitPopup(data.component)):currentComponent.status="Installed"),"install"==data.state&&(currentComponent=getCurrentComponent(data.component)),"cancelled"==data.status&&(0==dependentCount?$scope.alerts.push({msg:data.component+" "+data.msg,type:"danger"}):(delete parentComponent.installation,$scope.alerts.push({msg:parentComponent.component+" >>  "+data.msg,type:"danger"})),dependentCount=0),delete currentComponent.installationStart,delete currentComponent.installationRunning,delete currentComponent.installation,$scope.disableShowInstalled=!1,"update"==data.state&&(currentComponent.updates-=1,session.call("com.bigsql.list"))),"error"==data.state?($scope.alerts.push({msg:data.msg,type:"danger"}),delete parentComponent.installationDependents,delete currentComponent.installationStart,delete currentComponent.installationRunning,delete currentComponent.installation,delete parentComponent.installation,$scope.disableShowInstalled=!1):"locked"==data.state&&$scope.alerts.push({msg:data.msg,type:"danger"}),$scope.$apply()}).then(function(subscription){subscriptions.push(subscription)});var onRemove=function(response){var data=JSON.parse(response[0])[0];("error"==data.status||"locked"==data.state)&&(delete currentComponent.removing,$scope.disableShowInstalled=!1,$scope.alerts.push({msg:data.msg,type:"danger"})),"complete"==data.status&&(delete currentComponent.removing,currentComponent.status="NotInstalled",$scope.disableShowInstalled=!1,session.call("com.bigsql.list")),$scope.$apply()};session.subscribe("com.bigsql.onRemove",onRemove).then(function(subscription){subscriptions.push(subscription)})}),$scope.installedComps=function(event){session.call("com.bigsql.setBamConfig",["showInstalled",$scope.showInstalled]),session.call("com.bigsql.list")},$scope.compAction=function(action,compName){var sessionKey="com.bigsql."+action;if($scope.disableShowInstalled=!0,"init"==action?(currentComponent=getCurrentComponent(compName),currentComponent.init=!0):"remove"==action&&(currentComponent=getCurrentComponent(compName),currentComponent.removing=!0),session.call(sessionKey,[compName]),"update"==action&&"bam2"==compName){$uibModal.open({templateUrl:"../app/components/partials/bamUpdateModal.html",windowClass:"bam-update-modal modal",controller:"bamUpdateModalController"})}},$scope.cancelInstallation=function(action){session.call("com.bigsql.cancelInstall")},$scope.closeAlert=function(index){$scope.alerts.splice(index,1)},$rootScope.$on("initComp",function(event,comp){currentComponent=getCurrentComponent(comp),currentComponent.init=!0}),$timeout(function(){$scope.loading&&$window.location.reload()},5e3),$scope.$on("$destroy",function(){for(var i=0;i<subscriptions.length;i++)session.unsubscribe(subscriptions[i])})}]),angular.module("bigSQL.components").controller("bamLoading",["$scope","PubSubService","$rootScope","$window","$timeout",function($scope,PubSubService,$rootScope,$window,$timeout){$scope.bamLoading=!0;var session,subscriptions=[],sessPromise=PubSubService.getSession();sessPromise.then(function(sessPram){session=sessPram,session.call("com.bigsql.serverStatus"),session.subscribe("com.bigsql.onServerStatus",function(args){$scope.bamLoading=!1;var components=$(JSON.parse(args[0])).filter(function(i,n){return 1===n.category});0!=components.length?($window.location.href="#/details-pg/"+components[0].component,$rootScope.$emit("topMenuEvent")):$window.location.href="#/components/view"}).then(function(subscription){subscriptions.push(subscription)})}),$timeout(function(){$scope.bamLoading&&$window.location.reload()},5e3),$scope.$on("$destroy",function(){for(var i=0;i<subscriptions.length;i++)session.unsubscribe(subscriptions[i])})}]),angular.module("bigSQL.components").controller("graphsTabController",["$scope","$stateParams","PubSubService","$rootScope","$interval","MachineInfo",function($scope,$stateParams,PubSubService,$rootScope,$interval,MachineInfo){function clear(){$scope.rowsData[0].values.splice(0,$scope.rowsData[0].values.length),$scope.rowsData[1].values.splice(0,$scope.rowsData[1].values.length),$scope.rowsData[2].values.splice(0,$scope.rowsData[2].values.length),$scope.rowsData[3].values.splice(0,$scope.rowsData[3].values.length),$scope.commitRollbackData[0].values.splice(0,$scope.commitRollbackData[0].values.length),$scope.commitRollbackData[1].values.splice(0,$scope.commitRollbackData[1].values.length),$scope.connectionsData[0].values.splice(0,$scope.connectionsData[0].values.length),$scope.connectionsData[1].values.splice(0,$scope.connectionsData[1].values.length),$scope.connectionsData[2].values.splice(0,$scope.connectionsData[2].values.length),$scope.cpuData[0].values.splice(0,$scope.cpuData[0].values.length),$scope.cpuData[1].values.splice(0,$scope.cpuData[1].values.length),$scope.diskIOData[0].values.splice(0,$scope.diskIOData[0].values.length),$scope.diskIOData[1].values.splice(0,$scope.diskIOData[1].values.length)}var session,componentStatus,refreshRate,subscriptions=[];$scope.showGraphs=!1,$scope.transctionsPerSecondChart={chart:{type:"lineChart",height:150,margin:{top:20,right:40,bottom:40,left:55},x:function(d){return d.x},y:function(d){return d.y},noData:"Loading...",interactiveLayer:{tooltip:{headerFormatter:function(d){var point=new Date(d);return d3.time.format("%Y/%m/%d %H:%M:%S")(point)}}},xAxis:{xScale:d3.time.scale(),tickFormat:function(d){var point=new Date(d);return d3.time.format("%H:%M:%S")(point)}},yAxis:{tickFormat:function(d){return d3.format(",")(d)}},forceY:[0,5],useInteractiveGuideline:!0,legend:{margin:{top:10,right:0,left:0,bottom:0}}}},$scope.cpuChart=angular.copy($scope.transctionsPerSecondChart),$scope.cpuChart.chart.forceY=[0,100],$scope.cpuChart.chart.type="stackedAreaChart",$scope.cpuChart.chart.showControls=!1,$scope.rowsChart=angular.copy($scope.transctionsPerSecondChart),$scope.rowsChart.chart.forceY=[0,1e3],$scope.connectionsChart=angular.copy($scope.transctionsPerSecondChart),$scope.connectionsChart.chart.type="stackedAreaChart",$scope.connectionsChart.chart.showControls=!1,$scope.diskIOChart=angular.copy($scope.transctionsPerSecondChart),$scope.transctionsPerSecondChart.chart.forceY=[0,50],$scope.commitRollbackData=[{values:[],key:"Commit",color:"#FF5733"},{values:[],key:"Rollback",color:"#006994"}],$scope.cpuData=[{values:[],key:"CPU System %",color:"#FF5733"},{values:[],key:"CPU User %",color:"#006994"}],$scope.diskIOData=[{values:[],key:"Read Bytes (MB)",color:"#FF5733"},{values:[],key:"Write Bytes (MB)",color:"#006994"}],$scope.rowsData=[{values:[],key:"Insert",color:"#006400"},{values:[],key:"Update",color:"#FF5733"},{values:[],key:"Delete",color:"#006994"},{values:[],key:"Select",color:"#9932CC"}],$scope.connectionsData=[{values:[],key:"Active",color:"#FF5733"},{values:[],key:"Idle",color:"#006994"},{values:[],key:"Idle Transactions",color:"#9932CC"}],$rootScope.$on("sessionCreated",function(){var sessPromise=PubSubService.getSession();sessPromise.then(function(sessParam){session=sessParam,$rootScope.$emit("topMenuEvent")})}),$rootScope.$on("componentStatus",function(argument){componentStatus=arguments[1]});var sessionPromise=PubSubService.getSession();sessionPromise.then(function(val){function callStatus(argument){session.call("com.bigsql.live_graphs"),$scope.commitRollbackData.length<=2&&($scope.transctionsPerSecondChart.chart.noData="No Data Available."),$scope.connectionsData.length<=3&&($scope.connectionsChart.chart.noData="No Data Available."),$scope.rowsData.length<=4&&($scope.rowsChart.chart.noData="No Data Available."),void 0==componentStatus||"Running"==componentStatus.state&&(session.call("com.bigsql.live_dbstats",[$stateParams.component]),session.call("com.bigsql.activity",[$stateParams.component]))}function handleVisibilityChange(){"hidden"==document.visibilityState?($interval.cancel(refreshRate),clear()):"visible"==document.visibilityState&&(clear(),session.call("com.bigsql.initial_dbstats",[$stateParams.component]),session.call("com.bigsql.initial_graphs"),refreshRate=$interval(callStatus,5e3))}session=val,session.call("com.bigsql.initial_dbstats",[$stateParams.component]),session.call("com.bigsql.initial_graphs"),$scope.tabClick=function(argument){session.call("com.bigsql.live_graphs"),session.call("com.bigsql.live_dbstats",[$stateParams.component])},session.subscribe("com.bigsql.initdbstats",function(data){var graph_data=data[0];if(graph_data.component==$stateParams.component){$scope.commitRollbackData[0].values.length=0,$scope.commitRollbackData[1].values.length=0,$scope.rowsData[0].values.length=0,$scope.rowsData[1].values.length=0,$scope.rowsData[2].values.length=0,$scope.rowsData[3].values.length=0,$scope.connectionsData[0].values.length=0,$scope.connectionsData[1].values.length=0,$scope.connectionsData[2].values.length=0;for(var i=0;i<graph_data.stats.length;i+=1){var timeData=Math.round(new Date(graph_data.stats[i].time+" UTC").getTime());$scope.commitRollbackData[0].values.push({x:timeData,y:graph_data.stats[i].xact_commit}),$scope.commitRollbackData[1].values.push({x:timeData,y:graph_data.stats[i].xact_rollback}),$scope.connectionsData[0].values.push({x:timeData,y:graph_data.stats[i].connections.active}),$scope.connectionsData[1].values.push({x:timeData,y:graph_data.stats[i].connections.idle}),$scope.connectionsData[2].values.push({x:timeData,y:graph_data.stats[i].connections["idle in transaction"]}),$scope.rowsData[0].values.push({x:timeData,y:graph_data.stats[i].tup_inserted}),$scope.rowsData[1].values.push({x:timeData,y:graph_data.stats[i].tup_updated}),$scope.rowsData[2].values.push({x:timeData,y:graph_data.stats[i].tup_deleted}),$scope.rowsData[3].values.push({x:timeData,y:graph_data.stats[i].tup_fetched})}$scope.connectionsChart.chart.forceY=[0,graph_data.stats[1].connections.max],$scope.$apply()}}).then(function(subscription){subscriptions.push(subscription)}),session.subscribe("com.bigsql.dbstats",function(data){if(data[0].component==$stateParams.component){$scope.commitRollbackData[0].values.length>60&&($scope.commitRollbackData[0].values.shift(),$scope.commitRollbackData[1].values.shift(),$scope.rowsData[0].values.shift(),$scope.rowsData[1].values.shift(),$scope.rowsData[2].values.shift(),$scope.rowsData[3].values.shift(),$scope.connectionsData[0].values.shift(),$scope.connectionsData[1].values.shift(),$scope.connectionsData[2].values.shift());var timeVal=Math.round(new Date(data[0].stats.time+" UTC").getTime());$scope.commitRollbackData[0].values.push({x:timeVal,y:data[0].stats.xact_commit}),$scope.commitRollbackData[1].values.push({x:timeVal,y:data[0].stats.xact_rollback}),$scope.connectionsData[0].values.push({x:timeVal,y:data[0].stats.connections.active}),$scope.connectionsData[1].values.push({x:timeVal,y:data[0].stats.connections.idle}),$scope.connectionsData[2].values.push({x:timeVal,y:data[0].stats.connections["idle in transaction"]}),$scope.rowsData[0].values.push({x:timeVal,y:data[0].stats.tup_inserted}),$scope.rowsData[1].values.push({x:timeVal,y:data[0].stats.tup_updated}),$scope.rowsData[2].values.push({x:timeVal,y:data[0].stats.tup_deleted}),$scope.rowsData[3].values.push({x:timeVal,y:data[0].stats.tup_fetched}),$scope.$apply()}}).then(function(subscription){subscriptions.push(subscription)}),refreshRate=$interval(callStatus,5e3),$rootScope.$on("refreshRateVal",function(){$interval.cancel(refreshRate),""==arguments[1]||void 0==arguments[1]?refreshRate=$interval(callStatus,5e3):"0"==arguments[1]?$interval.cancel(refreshRate):refreshRate=$interval(callStatus,arguments[1])}),session.subscribe("com.bigsql.initgraphs",function(data){var graph_data=data[0];$scope.cpuData[0].values.length=0,$scope.cpuData[1].values.length=0,$scope.diskIOData[0].values.length=0,$scope.diskIOData[1].values.length=0;for(var i=0;i<graph_data.length;i+=1){var timeVal=Math.round(new Date(graph_data[i].time+" UTC").getTime());$scope.cpuData[0].values.push({x:timeVal,y:graph_data[i].cpu_per.system}),$scope.cpuData[1].values.push({x:timeVal,y:graph_data[i].cpu_per.user}),$scope.diskIOData[0].values.push({x:timeVal,y:graph_data[i].io.read_bytes}),$scope.diskIOData[1].values.push({x:timeVal,y:graph_data[i].io.write_bytes})}$scope.cpuData.length<=2&&($scope.cpuChart.chart.noData="No Data Available."),$scope.diskIOData.length<=2&&($scope.diskIOChart.chart.noData="No Data Available."),$scope.$apply()}).then(function(subscription){subscriptions.push(subscription)}),session.subscribe("com.bigsql.graphs",function(data){$scope.cpuData[0].values.length>60&&($scope.cpuData[0].values.shift(),$scope.cpuData[1].values.shift(),$scope.diskIOData[0].values.shift(),$scope.diskIOData[1].values.shift());var timeVal=Math.round(new Date(data[0].time+" UTC").getTime());$scope.cpuData[0].values.push({x:timeVal,y:data[0].cpu_per.system}),$scope.cpuData[1].values.push({x:timeVal,y:data[0].cpu_per.user}),$scope.diskIOData[0].values.push({x:timeVal,y:data[0].io.read_bytes}),$scope.diskIOData[1].values.push({x:timeVal,y:data[0].io.write_bytes}),$scope.showGraphs=!0,$scope.$apply()}).then(function(subscription){subscriptions.push(subscription)}),document.addEventListener("visibilitychange",handleVisibilityChange,!1)}),$scope.$on("$destroy",function(){for(var i=0;i<subscriptions.length;i++)session.unsubscribe(subscriptions[i]);clear(),$interval.cancel(refreshRate)})}]),angular.module("bigSQL.components").controller("pgInitializeController",["$scope","$rootScope","$uibModalInstance","MachineInfo","PubSubService",function($scope,$rootScope,$uibModalInstance,MachineInfo,PubSubService){var session;$scope.cancel=function(){$uibModalInstance.dismiss("cancel")},$scope.comp=$uibModalInstance.component;var sessionPromise=PubSubService.getSession();sessionPromise.then(function(val){session=val,$rootScope.$emit("topMenuEvent");var promise=MachineInfo.get(val);promise.then(function(data){$scope.dataDir=data.home+"/"+$scope.comp})}),$scope.init=function(){session.call("com.bigsql.init",[$scope.comp,$scope.formData.password]),$rootScope.$emit("initComp",[$scope.comp]),$uibModalInstance.dismiss("cancel")}}]),angular.module("bigSQL.components").controller("profilerController",["$scope","$uibModal","PubSubService","$state","UpdateComponentsService","$filter","$rootScope","$timeout","$window","$http","$location",function($scope,$uibModal,PubSubService,$state,UpdateComponentsService,$filter,$rootScope,$timeout,$window,$http,$location){$scope.alerts=[];var subscriptions=[];$scope.components={};var session;$scope.updateSettings,$scope.loading=!0,$scope.retry=!1,$scope.disableShowInstalled=!1,$rootScope.$on("sessionCreated",function(){var sessPromise=PubSubService.getSession();sessPromise.then(function(sessParam){session=sessParam})});var sessionPromise=PubSubService.getSession();sessionPromise.then(function(val){session=val,session.subscribe("com.bigsql.profilerReports",function(data){var result=data[0];0==result.error?($scope.report_file=result.report_file,$scope.report_url="/reports/"+result.report_file,$scope.$apply()):alert(result.msg)}).then(function(subscription){subscriptions.push(subscription)})}),$scope.generateReport=function(){$scope.report_file="",$scope.report_url="";var dataObj={};dataObj.hostName=$scope.hostName,dataObj.pgUser=$scope.pgUser,dataObj.pgPass=$scope.pgPass,dataObj.pgPort=$scope.pgPort,dataObj.pgQuery=$scope.pgQuery,dataObj.pgTitle=$scope.pgTitle,dataObj.pgDesc=$scope.pgDesc,dataObj.pgDB=$scope.pgDB,session.call("com.bigsql.plprofiler",[$scope.hostName,$scope.pgUser,$scope.pgPort,$scope.pgDB,$scope.pgPass,$scope.pgQuery,$scope.pgTitle,$scope.pgDesc])},$scope.$on("$destroy",function(){for(var i=0;i<subscriptions.length;i++)session.unsubscribe(subscriptions[i])})}]),angular.module("bigSQL.components").directive("bigsqlInstallComponent",function(){var directive={};return directive.restrict="E",directive.transclude=!0,directive.template="<div class='bigsqlInstallComponent' ng-transclude></div>",directive}),angular.module("bigSQL.components").factory("UpdateBamService",function(PubSubService,$q){var getBamUpdateInfo=function(){return $q(function(resolve,reject){var subscription,sessionPromise=PubSubService.getSession();sessionPromise.then(function(session){session.call("com.bigsql.infoComponent",["bam2"]),session.subscribe("com.bigsql.onInfoComponent",function(components){var components=JSON.parse(components[0][0]);session.unsubscribe(subscription),resolve(components[0])}).then(function(sub){subscription=sub},function(msg){reject()})})})};return{getBamUpdateInfo:getBamUpdateInfo}}),angular.module("bigSQL.components").factory("UpdateComponentsService",function(){var manualUpdateSettings,components=[],set=function(comp){components=comp},get=function(){return components},setCheckUpdatesManual=function(){manualUpdateSettings=!0},setCheckUpdatesAuto=function(){manualUpdateSettings=!1},getCheckUpdates=function(){return manualUpdateSettings};return{get:get,set:set,setCheckUpdatesManual:setCheckUpdatesManual,getCheckUpdates:getCheckUpdates,setCheckUpdatesAuto:setCheckUpdatesAuto}}),angular.module("bigSQL.menus").component("bamUpdate",{bindings:{},controller:function($rootScope,$scope,PubSubService,MachineInfo,$uibModal,UpdateComponentsService,UpdateBamService){function updateComponents(sessParam){var bamUpdatePromise=UpdateBamService.getBamUpdateInfo();bamUpdatePromise.then(function(info){"bam2"==info.component&&0==info.is_current&&info.current_version?$scope.bamUpdate=!0:$scope.bamUpdate=!1},function(){throw new Error("failed to subscribe to topic updateComponents",err)})}var session,subscriptions=[];$rootScope.$on("topMenuEvent",function(){var sessPromise=PubSubService.getSession();sessPromise.then(function(sessionParam){updateComponents(sessionParam)})}),$scope.open=function(){$uibModal.open({templateUrl:"../app/components/partials/bamUpdate.html",windowClass:"bam-update-modal modal",controller:"ComponentBamUpdateController"})},$scope.$on("$destroy",function(){for(var i=0;i<subscriptions.length;i++)session.unsubscribe(subscriptions[i])})},templateUrl:"../app/menus/partials/bamHeaderUpdate.html"}),angular.module("bigSQL.menus").component("leftMenu",{bindings:{},controller:function($scope,PubSubService){},templateUrl:"../app/menus/partials/leftMenu.html"}),angular.module("bigSQL.menus").component("topMenu",{bindings:{},controller:function($rootScope,$scope,PubSubService,$uibModal,UpdateComponentsService,MachineInfo){var subscriptions=[];$rootScope.$on("topMenuEvent",function(){var sessPromise=PubSubService.getSession();sessPromise.then(function(session){session.call("com.bigsql.list"),session.subscribe("com.bigsql.onList",function(components){var Checkupdates=0;$scope.components=JSON.parse(components[0][0]);for(var i=0;i<$scope.components.length;i++)"bam2"!=$scope.components[i].component&&(Checkupdates+=$scope.components[i].updates);$scope.updates=Checkupdates}).then(function(subscription){subscriptions.push(subscription)});var promise=MachineInfo.get(session);promise.then(function(data){$scope.pgcInfo=data},function(failObj){throw new Error(failObj)})}),$scope.open=function(){UpdateComponentsService.setCheckUpdatesAuto();$uibModal.open({templateUrl:"../app/components/partials/updateModal.html",windowClass:"bam-update-modal modal",controller:"ComponentsUpdateController"})}})},templateUrl:"../app/menus/partials/topMenu.html"});