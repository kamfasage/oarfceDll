-- Generated by Ora2Pg, the Oracle database Schema converter, version 17.4
-- Copyright 2000-2016 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=ovwdids11;sid=D12D;port=1664

SET client_encoding TO 'UTF8';

\set ON_ERROR_STOP ON

CREATE OR REPLACE VIEW vw_borrowertariff (bot_id, bot_contract, bot_number, bot_borrower, bot_coborrower1, bot_coborrower2, bot_coborrower3, bot_tariffborrower, bot_tariffcoborrower1, bot_tariffcoborrower2, bot_tariffcoborrower3, bot_tarifftitle, bot_tariffproperty, bot_insertiondate, bot_modifmode, bot__user, bot_balancedebt, l_bot_installmentdate, l_bot_premiumborrower, l_bot_premiumcoborrower1, l_bot_premiumcoborrower2, l_bot_premiumcoborrower3, l_bot_premiumtitle, l_bot_premiumproperty) AS SELECT  BOT_ID,
       BOT_CONTRACT,
       BOT_NUMBER,
       BOT_BORROWER,
       BOT_COBORROWER1,
       BOT_COBORROWER2,
       BOT_COBORROWER3,
       BOT_TARIFFBORROWER,
       BOT_TARIFFCOBORROWER1,
       BOT_TARIFFCOBORROWER2,
       BOT_TARIFFCOBORROWER3,
       BOT_TARIFFTITLE,
       BOT_TARIFFPROPERTY,
       BOT_INSERTIONDATE,
       BOT_MODIFMODE,
       BOT__USER,
       BOT_BALANCEDEBT,
       to_char(cnt_date, (bot_number - 1) * 12), 'DD/MM/YYYY') as L_BOT_InstallmentDate,
       To_char(Round(BOT_BalanceDebt * bct1.BCT_QuotaShare / 100 * BOT_TariffBorrower / 100 + '2 month'::interval) as l_BOT_PremiumBorrower,
       To_char(Round(BOT_BalanceDebt * bct2.BCT_QuotaShare / 100 * BOT_TariffCoBorrower1 / 100, 2)) as l_BOT_PremiumCoBorrower1,
       To_char(Round(BOT_BalanceDebt * bct3.BCT_QuotaShare / 100 * BOT_TariffCoBorrower2 / 100, 2)) as l_BOT_PremiumCoBorrower2,
       To_char(Round(BOT_BalanceDebt * bct4.BCT_QuotaShare / 100 * BOT_TariffCoBorrower3 / 100, 2)) as l_BOT_PremiumCoBorrower3,
       To_char(Round(BOT_BalanceDebt * BOT_TariffTitle / 100, 2)) as l_BOT_PremiumTitle,
       To_char(Round(BOT_BalanceDebt * BOT_TariffProperty / 100, 2)) as l_BOT_PremiumProperty
     FROM TBL_BorrowerTariff,
         TBL_Contract,
         TBL_BorrowerContract bct1,
         TBL_BorrowerContract bct2,
         TBL_BorrowerContract bct3,
         TBL_BorrowerContract bct4
   WHERE CNT_Id = BOT_Contract
     AND bct1.BCT_Role(+) = 1
     and bct1.BCT_Contract(+) = CNT_Id
     AND bct2.BCT_Role(+) = 2
     and bct2.BCT_Contract(+) = CNT_Id
     AND bct3.BCT_Role(+) = 3
     and bct3.BCT_Contract(+) = CNT_Id
     AND bct4.BCT_Role(+) = 4
     and bct4.BCT_Contract(+) = CNT_Id
   ORDER BY BOT_Number;

CREATE OR REPLACE VIEW vw_b2b_paymentreference (cnt_id, cnt_number, prd_name, pyr_id, pyr_premium, pyr_payeename, pyr_inn, pyr_kpp, pyr_accountnumber, pyr_bik, pyr_bankname, pyr_bankaccount, pyr_inactive, pyr__user, pyr_filetimestamp, pyr_modifmode) AS SELECT  CNT_Id , CNT_Number , PRD_Name ,
       PYR_ID,
       PYR_PREMIUM,
       PYR_PAYEENAME,
       PYR_INN,
       PYR_KPP,
       PYR_ACCOUNTNUMBER,
       PYR_BIK,
       PYR_BANKNAME,
       PYR_BANKACCOUNT,
       PYR_INACTIVE,
       PYR__USER,
       PYR_FILETIMESTAMP,
       PYR_MODIFMODE
   FROM TBL_Contract , TBL_Product , TBL_Premium , TBL_PaymentReference
  where prd_id = cnt_product
  and cnt_id = prm_contract
  and pyr_premium = prm_id
  and ( PRD_B2B is not null and PRD_B2B <> 0 )
  and ( CNT_Status is null or CNT_Status <> 'V' )
  and ( PRM_Inactive is null or PRM_Inactive = 0 );

CREATE OR REPLACE VIEW vw_reserve_product (reserve_product) AS SELECT  UPR_Product as Reserve_Product  FROM Tbl_Upr41_1
  union select UPR_Product from Tbl_UPR41_2
  union select UPR_Product from Tbl_UPR41_3
  union select UPR_Product from Tbl_UPR41_4
  union select UPR_Product from Tbl_UPR41_5
  union select UPR_Product from Tbl_UPR41_6
  union select UPR_Product from Tbl_UPR41_7
  union select UPR_Product from Tbl_UPR41_8
  union select UPR_Product from Tbl_UPR41_9
  union select UPR_Product from Tbl_UPR41_10
  union select UPR_Product from Tbl_UPR41_11
  union select UPR_Product from Tbl_UPR41_12
  union select UPR_Product from Tbl_UPR41_13
  union select UPR_Product from Tbl_UPR41_14
  union select UPR_Product from Tbl_UPR41_15
  union select UPR_Product from Tbl_UPR41_16
  union select UPR_Product from Tbl_UPR41_17
  union select UPR_Product from Tbl_UPR41_18
  union select UPR_Product from Tbl_UPR41_19
  union select UPR_Product from Tbl_UPR41_20
  union select UPR_Product from Tbl_UPR41_21
  union select UPR_Product from Tbl_UPR42_1
  union select UPR_Product from Tbl_UPR42_2
  union select UPR_Product from Tbl_UPR42_3
  union select UPR_Product from Tbl_UPR42_4
  union select UPR_Product from Tbl_UPR42_5
  union select UPR_Product from Tbl_UPR42_6
  union select UPR_Product from Tbl_UPR42_7
  union select UPR_Product from Tbl_UPR42_8
  union select UPR_Product from Tbl_UPR42_9
  union select UPR_Product from Tbl_UPR42_10
  union select UPR_Product from Tbl_UPR42_11
  union select UPR_Product from Tbl_UPR42_12
  union select UPR_Product from Tbl_UPR42_13
  union select UPR_Product from Tbl_UPR42_14
  union select UPR_Product from Tbl_UPR42_15
  union select UPR_Product from Tbl_UPR42_16
  union select UPR_Product from Tbl_UPR42_17
  union select UPR_Product from Tbl_UPR42_18
  union select UPR_Product from Tbl_UPR42_19
  union select UPR_Product from Tbl_UPR42_20
  union select UPR_Product from Tbl_UPR42_21
  union select MR_Product from Tbl_MR_1
  union select MR_Product from Tbl_MR_2
  union select MR_Product from Tbl_MR_3
  union select MR_Product from Tbl_MR_4
  union select MR_Product from Tbl_MR_5
  union select MR_Product from Tbl_MR_6
  union select MR_Product from Tbl_MR_7
  union select MR_Product from Tbl_MR_8
  union select MR_Product from Tbl_MR_9
  union select MR_Product from Tbl_MR_10
  union select MR_Product from Tbl_MR_11
  union select MR_Product from Tbl_MR_12
  union select MR_Product from Tbl_MR_13
  union select MR_Product from Tbl_MR_14
  union select MR_Product from Tbl_MR_15
  union select MR_Product from Tbl_MR_16
  union select MR_Product from Tbl_MR_17
  union select MR_Product from Tbl_MR_18
  union select MR_Product from Tbl_MR_19
  union select MR_Product from Tbl_MR_20
  union select MR_Product from Tbl_MR_21;

CREATE OR REPLACE VIEW vw_beneficiary (cnt_id, cnt_number, prd_id, prd_name, ben_number, ben_name, ben_birthdate) AS SELECT  CNT_Id
         , CNT_Number
         , PRD_Id
         , PRD_Name
         , BEN_Number
         , BEN_Name
         , BEN_BirthDate
     FROM TBL_Beneficiary , TBL_Contract , TBl_Product
    where BEN_Contract = CNT_Id
    and CNT_Product = PRD_Id;

CREATE OR REPLACE VIEW vw_guaranteetax (gt_guarantee, gt_tax) AS SELECT  grt_id as gt_guarantee , grt_Tax1 as gt_tax
 FROM tbl_guarantee
where grt_Tax1 is not null
union
select grt_id as gt_guarantee , grt_Tax2 as gt_tax
from tbl_guarantee
where grt_Tax2 is not null
union
select grt_id as gt_guarantee , grt_Tax3 as gt_tax
from tbl_guarantee
where grt_Tax3 is not null
union
select grt_id as gt_guarantee , grt_Tax4 as gt_tax
from tbl_guarantee
where grt_Tax4 is not null
union
select grt_id as gt_guarantee , grt_Tax5 as gt_tax
from tbl_guarantee
where grt_Tax5 is not null
union
select grt_id as gt_guarantee , grt_Tax6 as gt_tax
from tbl_guarantee
where grt_Tax6 is not null;

CREATE OR REPLACE VIEW vw_b2b_claim (cnt_id, cnt_number, prd_name, clm_id, clm_contract, clm_foldernumber, clm_occurencedate, clm_statusdate, clm_riskcode, clm_folderstatus, clm_lastname, clm_firstname, clm_dateofbirth, clm_folderstatusreason, clm_declarationdate, clm_registrationdate) AS SELECT  CNT_Id , CNT_Number , PRD_Name ,
       clm_id,
       clm_contract,
       clm_foldernumber,
       clm_occurencedate,
       clm_statusdate,
       clm_riskcode,
       clm_folderstatus,
       clm_lastname,
       clm_firstname,
       clm_dateofbirth,
       clm_folderstatusreason,
       clm_declarationdate,
       clm_registrationdate
   FROM TBL_Contract , TBL_Product , TBL_Claim
  where prd_id = cnt_product
  and cnt_id = clm_contract
  and ( PRD_B2B is not null and PRD_B2B <> 0 )
  and ( CNT_Status is null or CNT_Status <> 'V' );

CREATE OR REPLACE VIEW vw_h_borrower (bor_filetimestamp, bor__modificationdate, l_bor__modificationdate, l_bor_dateofbirth, bor_firstname, bor_surname, bor_patronymicname, bor_uniqueid, bor_gender, l_bor_gender, bor_homezipcode, bor_homeregion, bor_homecity, bor_homestreetname, bor_homecountryname, usr_login, bct_contract, bor_modifmode, bor_loanquotashare, bor_inn) AS SELECT  BOR_FileTimeStamp , BOR__ModificationDate,
       to_char(BOR__ModificationDate, 'DD/MM/YYYY HH24:MI:SS') as l_BOR__ModificationDate,
       to_char(BOR_DateOfBirth, 'DD/MM/YYYY') as l_BOR_DateOfBirth,
       bor_firstname,
       BOR_SURNAME,
       BOR_PATRONYMICNAME,
       BOR_UNIQUEID,
       bor_gender,
       case bor_gender when '1' then 'Male' when '2' then 'Female' when '3' then 'Firm' when '4' then 'Other' else null end as l_bor_gender,
       bor_homezipcode,
       bor_homeregion,
       bor_homecity,
       bor_homestreetname,
       bor_homecountryname,
       usr_login,
       bct_contract,
       bor_ModifMode,
       BOR_LoanQuotaShare,
       bor_inn
   FROM TBL_H_Borrower, tbl_User, tbl_BorrowerContract
 WHERE USR_Id(+) = BOR__User
   AND BOR__Parent = BCT_Borrower
   AND BCT_Role = 1
 order by BOR__ModificationDate;

CREATE OR REPLACE VIEW vw_a_guaranteetax (gt_guarantee, gt_tax) AS SELECT  grt_id as gt_guarantee , grt_Tax1 as gt_Tax
 FROM tbl_guarantee
where grt_Tax1 is not null
union
select grt_id as gt_guarantee , grt_Tax1 as gt_Tax
from tbl_guarantee
where grt_Tax2 is not null
union
select grt_id as gt_guarantee , grt_Tax1 as gt_Tax
from tbl_guarantee
where grt_Tax3 is not null
union
select grt_id as gt_guarantee , grt_Tax1 as gt_Tax
from tbl_guarantee
where grt_Tax4 is not null
union
select grt_id as gt_guarantee , grt_Tax1 as gt_Tax
from tbl_guarantee
where grt_Tax5 is not null
union
select grt_id as gt_guarantee , grt_Tax1 as gt_Tax
from tbl_guarantee
where grt_Tax6 is not null;

CREATE OR REPLACE VIEW vw_coborrower3 (bor_id, bor_fullname, bor_uniqueid, bor_dateofbirth, l_bor_dateofbirth, bor_clientid, bor_clientaccount, bor_contract, bor_quotashare, bor_firstname, bor_surname, bor_patronymicname, bor_placeofbirth, bor_homeaddress, bor_gender, l_bor_gender, bor_phonenumber, bor_profession, bor_passportnumber, bor_homezipcode, bor_homeregion, bor_homecity, bor_homestreetname, bor_homecountryname, bor_filetimestamp, bor_fileintegrationdate, l_bor_fileintegrationdate, bor_documenttype, bor_passportissuingdate, l_bor_passportissuingdate, bor_passportissuingplace, bor_deltaaccountnumber, bor_citizenship, bor_migrationcard_number, bor_migrationcard_from, l_bor_migrationcard_from, bor_migrationcard_to, l_bor_migrationcard_to, bor_lancername, bor_lancercui, l_bor_driverlicenseissuingdate, bor_maritalstatus, bor_childrenpresence, bor_mobilephonenumber, bor_workphonenumber, bor_accountnumber, bor_registrationaddress, bor_registrationzipcode, bor_registrationcity, bor_registrationtown, bor_registrationstreet, bor_registrationhouse, bor_registrationbuilding, bor_registrationapartment, bor_loanquotashare, bor_inn, bor_residencepermit, bor_publicperson, bor_tarifflife, bor_premiumlife, bor_documentissuingplacecode, bor_phonenumbers, bor_actualregion, bor_actualzipcode, bor_actualcountry, bor_actualcity, bor_actualstreetname, bor_actualhouse, bor_actualbuilding, bor_actuallitera, bor_actualcorpus, bor_actualapartment, bor_email, bor_klifedeath, bor_klifedisability, bor_klifeloading, bor_respermittype, bor_respermitnumber, l_bor_respermitstartdate, l_bor_respermitenddate, bor_respermitissuingplace) AS SELECT 
    bor_id,
    bor_fullname,
    bor_uniqueid,
    bor_dateofbirth,
    to_char(bor_DateOfBirth,'DD/MM/YYYY') as l_bor_DateOfBirth,
    bor_clientid,
    bor_clientaccount,
    bct_contract as bor_contract,
    bct_quotashare as bor_quotashare,
    bor_firstname,
    bor_surname,
    bor_patronymicname,
    bor_placeofbirth,
    bor_homeaddress,
    bor_gender,
    case bor_gender when '1' then 'Male' when '2' then 'Female' when '3' then 'Firm' when '4' then 'Other' else null end as l_bor_gender,
    bor_phonenumber,
    bor_profession,
    bor_Passportnumber,
    bor_homezipcode,
    bor_homeregion,
    bor_homecity,
    bor_homestreetname,
    bor_homecountryname,
    bor_filetimestamp,
    bor_fileintegrationdate,
    to_char(bor_fileintegrationdate,'DD/MM/YYYY HH24:MI:SS') as l_bor_fileintegrationdate,
    bor_documenttype,
    bor_passportissuingdate,
    to_char(bor_passportissuingdate,'DD/MM/YYYY') as l_bor_passportissuingdate,
    bor_passportissuingplace,
    bor_deltaaccountnumber,
    bor_citizenship,
    bor_migrationcard_number,
    bor_migrationcard_from,
    to_char(bor_migrationcard_from,'DD/MM/YYYY') as l_bor_migrationcard_from,
    bor_migrationcard_to,
    to_char(bor_migrationcard_to,'DD/MM/YYYY') as l_bor_migrationcard_to,
    Bor_LancerName,
    Bor_LancerCUI,
    to_char(bor_driverlicenseissuingdate,'DD/MM/YYYY') as l_bor_driverlicenseissuingdate,
    bor_maritalstatus,
    bor_childrenpresence,
    bor_mobilephonenumber,
    bor_workphonenumber,
    bor_accountnumber,
    bor_registrationaddress,
    bor_registrationzipcode,
    bor_registrationcity,
    bor_registrationtown,
    bor_registrationstreet,
    bor_registrationhouse,
    bor_registrationbuilding,
    bor_registrationapartment,
    BOR_LoanQuotaShare,
    bor_inn,
    bor_residencepermit,
    bor_publicperson,
    bor_tarifflife,
    bor_premiumlife,
    bor_documentissuingplacecode,
        case WHEN bor_phonenumber IS not NULL THEN bor_phonenumber
     || case WHEN bor_mobilephonenumber IS not NULL or bor_workphonenumber IS not NULL then ' ; ' end end
     || case WHEN bor_mobilephonenumber IS not NULL THEN bor_mobilephonenumber
     || case WHEN bor_workphonenumber IS not NULL then ' ; ' end end
     || case WHEN bor_workphonenumber IS not NULL THEN bor_workphonenumber END as bor_phonenumbers,
    bor_actualregion,
    bor_actualzipcode,
    bor_actualcountry,
    bor_actualcity,
    bor_actualstreetname,
    bor_actualhouse,
    bor_actualbuilding,
    bor_actuallitera,
    bor_actualcorpus,
    bor_actualapartment,
    bor_email,
    bor_klifedeath,
    bor_klifedisability,
    bor_klifeloading,
    bor_respermittype,
    bor_respermitnumber,
    to_char(bor_respermitstartdate, 'DD/MM/YYYY') as l_bor_respermitstartdate,
    to_char(bor_respermitenddate, 'DD/MM/YYYY') as l_bor_respermitenddate,
    bor_respermitissuingplace
   FROM tbl_borrower , tbl_borrowercontract
  where bct_borrower = bor_id
  and bct_role = 4;

CREATE OR REPLACE VIEW vw_b2b_borrowertariff (cnt_id, cnt_number, prd_name, bot_id, bot_contract, bot_number, bot_borrower, bot_coborrower1, bot_coborrower2, bot_coborrower3, bot_tariffborrower, bot_tariffcoborrower1, bot_tariffcoborrower2, bot_tariffcoborrower3, bot_tarifftitle, bot_tariffproperty, bot_balancedebt, bot_insertiondate, bot_modifmode, bot__user) AS SELECT  CNT_Id , CNT_Number , PRD_Name ,
       bot_id,
       bot_contract,
       bot_number,
       bot_borrower,
       bot_coborrower1,
       bot_coborrower2,
       bot_coborrower3,
       bot_tariffborrower,
       bot_tariffcoborrower1,
       bot_tariffcoborrower2,
       bot_tariffcoborrower3,
       bot_tarifftitle,
       bot_tariffproperty,
       bot_balancedebt,
       bot_insertiondate,
       bot_modifmode,
       bot__user
   FROM TBL_Contract , TBL_Product , TBL_BorrowerTariff
  where prd_id = cnt_product
  and cnt_id = bot_contract
  and ( PRD_B2B is not null and PRD_B2B <> 0 )
  and ( CNT_Status is null or CNT_Status <> 'V' );

CREATE OR REPLACE VIEW vw_coborrower2 (bor_id, bor_fullname, bor_uniqueid, bor_dateofbirth, l_bor_dateofbirth, bor_clientid, bor_clientaccount, bor_contract, bor_quotashare, bor_firstname, bor_surname, bor_patronymicname, bor_placeofbirth, bor_homeaddress, bor_gender, l_bor_gender, bor_phonenumber, bor_profession, bor_passportnumber, bor_homezipcode, bor_homeregion, bor_homecity, bor_homestreetname, bor_homecountryname, bor_filetimestamp, bor_fileintegrationdate, l_bor_fileintegrationdate, bor_documenttype, bor_passportissuingdate, l_bor_passportissuingdate, bor_passportissuingplace, bor_deltaaccountnumber, bor_citizenship, bor_migrationcard_number, bor_migrationcard_from, l_bor_migrationcard_from, bor_migrationcard_to, l_bor_migrationcard_to, bor_lancername, bor_lancercui, l_bor_driverlicenseissuingdate, bor_maritalstatus, bor_childrenpresence, bor_mobilephonenumber, bor_workphonenumber, bor_accountnumber, bor_registrationaddress, bor_registrationzipcode, bor_registrationcity, bor_registrationtown, bor_registrationstreet, bor_registrationhouse, bor_registrationbuilding, bor_registrationapartment, bor_loanquotashare, bor_inn, bor_residencepermit, bor_publicperson, bor_tarifflife, bor_premiumlife, bor_documentissuingplacecode, bor_phonenumbers, bor_actualregion, bor_actualzipcode, bor_actualcountry, bor_actualcity, bor_actualstreetname, bor_actualhouse, bor_actualbuilding, bor_actuallitera, bor_actualcorpus, bor_actualapartment, bor_email, bor_klifedeath, bor_klifedisability, bor_klifeloading, bor_respermittype, bor_respermitnumber, l_bor_respermitstartdate, l_bor_respermitenddate, bor_respermitissuingplace) AS SELECT 
    bor_id,
    bor_fullname,
    bor_uniqueid,
    bor_dateofbirth,
    to_char(bor_DateOfBirth,'DD/MM/YYYY') as l_bor_DateOfBirth,
    bor_clientid,
    bor_clientaccount,
    bct_contract as bor_contract,
    bct_quotashare as bor_quotashare,
    bor_firstname,
    bor_surname,
    bor_patronymicname,
    bor_placeofbirth,
    bor_homeaddress,
    bor_gender,
    case bor_gender when '1' then 'Male' when '2' then 'Female' when '3' then 'Firm' when '4' then 'Other' else null end as l_bor_gender,
    bor_phonenumber,
    bor_profession,
    bor_Passportnumber,
    bor_homezipcode,
    bor_homeregion,
    bor_homecity,
    bor_homestreetname,
    bor_homecountryname,
    bor_filetimestamp,
    bor_fileintegrationdate,
    to_char(bor_fileintegrationdate,'DD/MM/YYYY HH24:MI:SS') as l_bor_fileintegrationdate,
    bor_documenttype,
    bor_passportissuingdate,
    to_char(bor_passportissuingdate,'DD/MM/YYYY') as l_bor_passportissuingdate,
    bor_passportissuingplace,
    bor_deltaaccountnumber,
    bor_citizenship,
    bor_migrationcard_number,
    bor_migrationcard_from,
    to_char(bor_migrationcard_from,'DD/MM/YYYY') as l_bor_migrationcard_from,
    bor_migrationcard_to,
    to_char(bor_migrationcard_to,'DD/MM/YYYY') as l_bor_migrationcard_to,
    Bor_LancerName,
    Bor_LancerCUI,
    to_char(bor_driverlicenseissuingdate,'DD/MM/YYYY') as l_bor_driverlicenseissuingdate,
    bor_maritalstatus,
    bor_childrenpresence,
    bor_mobilephonenumber,
    bor_workphonenumber,
    bor_accountnumber,
    bor_registrationaddress,
    bor_registrationzipcode,
    bor_registrationcity,
    bor_registrationtown,
    bor_registrationstreet,
    bor_registrationhouse,
    bor_registrationbuilding,
    bor_registrationapartment,
    BOR_LoanQuotaShare,
    bor_inn,
    bor_residencepermit,
    bor_publicperson,
    bor_tarifflife,
    bor_premiumlife,
    bor_documentissuingplacecode,
        case WHEN bor_phonenumber IS not NULL THEN bor_phonenumber
     || case WHEN bor_mobilephonenumber IS not NULL or bor_workphonenumber IS not NULL then ' ; ' end end
     || case WHEN bor_mobilephonenumber IS not NULL THEN bor_mobilephonenumber
     || case WHEN bor_workphonenumber IS not NULL then ' ; ' end end
     || case WHEN bor_workphonenumber IS not NULL THEN bor_workphonenumber END as bor_phonenumbers,
    bor_actualregion,
    bor_actualzipcode,
    bor_actualcountry,
    bor_actualcity,
    bor_actualstreetname,
    bor_actualhouse,
    bor_actualbuilding,
    bor_actuallitera,
    bor_actualcorpus,
    bor_actualapartment,
    bor_email,
    bor_klifedeath,
    bor_klifedisability,
    bor_klifeloading,
    bor_respermittype,
    bor_respermitnumber,
    to_char(bor_respermitstartdate, 'DD/MM/YYYY') as l_bor_respermitstartdate,
    to_char(bor_respermitenddate, 'DD/MM/YYYY') as l_bor_respermitenddate,
    bor_respermitissuingplace
   FROM tbl_borrower , tbl_borrowercontract
  where bct_borrower = bor_id
  and bct_role = 3;

CREATE OR REPLACE VIEW vw_h_reimbursement (rmb_filetimestamp, l_rmb__modificationdate, l_rmb_date, rmb_amount, rmb_modifmode, usr_login, cnt_id, rmb__modificationdate) AS SELECT  RMB_FileTimeStamp,
       to_char(RMB__ModificationDate, 'DD/MM/YYYY HH24:MI:SS') as l_RMB__ModificationDate,
       to_char(RMB_date, 'DD/MM/YYYY') as l_RMB_date,
       RMB_Amount,
       RMB_ModifMode,
       usr_login,
       cnt_id,
       RMB__modificationdate
   FROM TBL_H_Reimbursement, tbl_User, tbl_Contract
 WHERE USR_Id(+) = RMB__User
   AND RMB_Contract = CNT_Id;

CREATE OR REPLACE VIEW vw_claim (cnt_id, bct_role, bor_id, bor_surname, bor_patronymicname, bor_firstname, bor_uniqueid, bor_dateofbirth, bor_gender, bor_citizenship, bor_homestreetname, bor_homezipcode, bor_homecity, bor_homecountryname, bor_passportnumber, bor_passportissuingplace, bor_migrationcard_number, bor_migrationcard_from, bor_migrationcard_to, bor_phonenumber, prd_name, prd_description, prd_productreference, cnt_number, cnt_date, cnt_closingdate, cnt_loanamount, cnt_insuredamount, cnt_insurer, cnt_rmnduecapital, cnt_currency, cnt_duration, cnt_closingreason, cnt_policynumber, cnt_fullypaid, cnt_refundexists, grt_code, grt_description, sts_label, dst_description, region, cnt_deductibleamount, cnt_deductiblerepurchase, cnt_deductiblerepurchasedate, cnt_clientpacketidsticker, cnt_clientpacketidkeychain, cnt_clientpacketidkeychain2, grt_id, cnt_status, insured_amount, ctg_effectdate, ctg_resignationdate) AS SELECT  distinct
  CNT_ID
 ,BCT_ROLE
 ,BOR_ID
 ,BOR_SURNAME
 ,BOR_PATRONYMICNAME
 ,BOR_FIRSTNAME
 ,BOR_UNIQUEID
 ,BOR_DATEOFBIRTH
 ,BOR_GENDER
 ,BOR_CITIZENSHIP
 ,BOR_HOMESTREETNAME
 ,BOR_HOMEZIPCODE
 ,BOR_HOMECITY
 ,BOR_HOMECOUNTRYNAME
 ,BOR_PASSPORTNUMBER
 ,BOR_PASSPORTISSUINGPLACE
 ,BOR_MIGRATIONCARD_NUMBER
 ,BOR_MIGRATIONCARD_FROM
 ,BOR_MIGRATIONCARD_TO
 ,BOR_PHONENUMBER
 ,PRD_NAME
 ,PRD_DESCRIPTION
 ,PRD_PRODUCTREFERENCE
 ,CNT_NUMBER
 ,CNT_DATE
 ,CNT_CLOSINGDATE
 ,CNT_LOANAMOUNT
 ,CNT_INSUREDAMOUNT
 ,CNT_INSURER
 ,CNT_RMNDUECAPITAL
 ,CNT_CURRENCY
 ,CNT_DURATION
 ,CNT_CLOSINGREASON
 , CNT_PolicyNumber
 , CNT_FullyPaid
 , CNT_RefundExists
 ,GRT_CODE
 ,GRT_DESCRIPTION
 ,STS_LABEL
 ,DST_DESCRIPTION
 ,REGION
 ,CNT_DEDUCTIBLEAMOUNT
 ,CNT_DEDUCTIBLEREPURCHASE
 ,CNT_DEDUCTIBLEREPURCHASEDATE
 ,CNT_ClientPacketIDsticker
 ,CNT_ClientPacketIDkeychain
 ,cnt_clientpacketidkeychain2
 ,GRT_ID,CNT_STATUS
  , case when POSITION('_A' in grt_code) <> 0 and cnt_status='O' then ctg_insuredamount else null end as Insured_Amount
  , ctg_effectdate
  , ctg_resignationdate
   FROM
  (
    select CNT_ID
      , BCT_Role
      , BOR_Id
      , BOR_SurName
      , BOR_PatronymicName
      , BOR_FirstName
      , BOR_UniqueID
      , BOR_DateOfBirth
      , BOR_Gender
      , BOR_Citizenship
      , BOR_HomeStreetName
      , BOR_HomeZipCode
      , BOR_HomeCity
      , BOR_HomeCountryName
      , BOR_PassportNumber
      , BOR_PassportIssuingPlace
      , BOR_MigrationCard_Number
      , BOR_MigrationCard_From
      , BOR_MigrationCard_To
      , BOR_PhoneNumber
      , PRD_Name
      , PRD_Description
      , PRD_ProductReference
      , CNT_Number
      , CNT_Date
      , CNT_ClosingDate
      , CNT_LoanAmount
      , CNT_InsuredAmount
      , CNT_Insurer
      , CNT_RmnDueCapital
      , CNT_Currency
      , CNT_Duration
      , CNT_ClosingReason
      , CNT_PolicyNumber
      , CNT_ClientPacketIDsticker
      , CNT_ClientPacketIDkeychain
      , cnt_clientpacketidkeychain2
      , case
          when (PRD_ContractProlongation = 'NO' or PRD_ContractProlongation is null) then
            case when sum_PRM_ForeignCollected >= sum_PRM_ForeignDue then 1 else 0 end
          when (PRD_ContractProlongation = 'YES') then
            case when sum_PRM_ForeignCollectedLP >= sum_PRM_ForeignDueLP then 1 else 0 end
        end as cnt_FullyPaid
      , case when max_prm_contract_REF is not null then 0 else 1 end as CNT_RefundExists
      , GRT_Code
      , GRT_Description
      , STS_Label
      , DST_Description
      , case when POSITION('BSGV' in upper(prd_name)) <> 0 then case when cnt_branch is not null then cnt_branch else cnt_pointofsale end
             when POSITION('RFB' in upper(prd_name)) <> 0 then to_char(cnt_comRegionCode)
             when POSITION('RSB' in upper(prd_name)) <> 0 then cnt_BankFilial
             else null
        end as Region
      , cnt_deductibleamount
      , CNT_DeductibleRepurchase
      , CNT_DeductibleRepurchaseDate
      , GRT_Id
      , CNT_Status
      from TBL_Contract , TBL_BorrowerContract , TBL_Borrower , TBL_Product , TBL_Guarantee , TBL_PRODUCTGUARANTEE , Tbl_Status , tbl_distributor
       , ( select prm_contract as sum_prm_contract, sum(case when PRM_Status = 'P' and PRM_ForeignCollected is null then PRM_ForeignDue else PRM_ForeignCollected end) as Sum_PRM_ForeignCollected
           , sum(PRM_ForeignDue) as Sum_PRM_ForeignDue
           from tbl_premium where prm_type2 is null and (prm_type3 is null or prm_type3 <> 'D' and prm_type3 <> 'C') and (prm_status is null or prm_status <> 'C') and (prm_inactive is null or prm_inactive = 0)
           group by prm_contract )
       , ( select prm_contract as sum_prm_contractLP, sum(case when PRM_Status = 'P' and PRM_ForeignCollected is null then PRM_ForeignDue else PRM_ForeignCollected end) as Sum_PRM_ForeignCollectedLP
           , sum(PRM_ForeignDue) as Sum_PRM_ForeignDueLP
           from (select prm_contract as max_prm_contract, max(prm_installmentdate) as max_prm_installmentdate from tbl_premium where prm_type2 is null and (prm_type3 is null or prm_type3 <> 'D' and prm_type3 <> 'C') and (prm_status is null or prm_status <> 'C') group by prm_contract) , tbl_premium
           where prm_type2 is null and (prm_type3 is null or prm_type3 <> 'D' and prm_type3 <> 'C') and (prm_status is null or prm_status <> 'C') and (prm_inactive is null or prm_inactive = 0) and prm_contract = max_prm_contract and prm_installmentdate = max_prm_installmentdate
           group by prm_contract )
       , ( select prm_contract as max_prm_contract_REF , max(prm_installmentdate) as max_prm_installmentdate_REF
           from tbl_premium
           where prm_type2 is null and prm_type3 = 'R' and (prm_status is null or prm_status <> 'C') and (prm_inactive is null or prm_inactive = 0)
           group by prm_contract)
      where BCT_Contract = CNT_Id
      and BCT_Borrower = BOR_Id
      and PRD_Id = CNT_Product
      and DST_Id = PRD_Distributor
      and PRG_Product = PRD_Id
      and PRG_Guarantee = GRT_Id
      and (((PRG_InsuredRole is null or PRG_InsuredRole=1) and BCT_Role=1) or (PRG_InsuredRole=2 and BCT_Role=2))
      and STS_Code = CNT_Status
      and (CNT_Status is null or (CNT_Status <> 'P' and CNT_Status <> 'V'))
      and sum_prm_contract (+) = cnt_id
      and sum_prm_contractLP (+) = cnt_id
      and max_prm_contract_REF (+) = cnt_id
    ) table_temp, (select * from tbl_ContractGuarantee)
    where ctg_contract (+) = cnt_id
    and ctg_guarantee (+) = grt_id
    and ((prd_name in ('CCARD','CASH','CASHCO','CCARD Indiv','CASH Indiv','CASHCO Indiv') and ctg_guarantee is not null) or prd_name not in ('CCARD','CASH','CASHCO','CCARD Indiv','CASH Indiv','CASHCO Indiv'));

CREATE OR REPLACE VIEW vw_b2b_borrower (cnt_id, cnt_number, prd_name, bct_role, bor_id, bor_fullname, bor_uniqueid, bor_dateofbirth, bor_clientid, bor_clientaccount, bor_firstname, bor_surname, bor_patronymicname, bor_placeofbirth, bor_homeaddress, bor_gender, bor_phonenumber, bor_profession, bor_passportnumber, bor__user, bor_passportissuingdate, bor_passportissuingplace, bor_homezipcode, bor_homeregion, bor_homecity, bor_homestreetname, bor_homecountryname, bor_filetimestamp, bor_fileintegrationdate, bor_inactive, bor_documenttype, bor_accountnumber, bor_deltaaccountnumber, bor_identification, bor_modifmode, bor_citizenship, bor_migrationcard_number, bor_migrationcard_from, bor_migrationcard_to, bor_lancername, bor_lancercui, bor_driverlicenseissuingdate, bor_maritalstatus, bor_childrenpresence, bor_mobilephonenumber, bor_workphonenumber, bor_registrationaddress, bor_registrationzipcode, bor_registrationcity, bor_registrationtown, bor_registrationstreet, bor_registrationhouse, bor_registrationbuilding, bor_registrationapartment, bor_inn, bor_residencepermit, bor_publicperson, bor_tarifflife, bor_premiumlife, bor_documentissuingplacecode, bor_loanquotashare, bor_actualregion, bor_actualzipcode, bor_actualcountry, bor_actualcity, bor_actualstreetname, bor_actualhouse, bor_actualbuilding, bor_actuallitera, bor_actualcorpus, bor_actualapartment, bor_email, bor_klifedeath, bor_klifedisability, bor_klifeloading) AS SELECT  CNT_Id , CNT_Number , PRD_Name , BCT_Role ,
       BOR_ID,
       BOR_FULLNAME,
       BOR_UNIQUEID,
       BOR_DATEOFBIRTH,
       BOR_CLIENTID,
       BOR_CLIENTACCOUNT,
       BOR_FIRSTNAME,
       BOR_SURNAME,
       BOR_PATRONYMICNAME,
       BOR_PLACEOFBIRTH,
       BOR_HOMEADDRESS,
       BOR_GENDER,
       BOR_PHONENUMBER,
       BOR_PROFESSION,
       BOR_PASSPORTNUMBER,
       BOR__USER,
       BOR_PASSPORTISSUINGDATE,
       BOR_PASSPORTISSUINGPLACE,
       BOR_HOMEZIPCODE,
       BOR_HOMEREGION,
       BOR_HOMECITY,
       BOR_HOMESTREETNAME,
       BOR_HOMECOUNTRYNAME,
       BOR_FILETIMESTAMP,
       BOR_FILEINTEGRATIONDATE,
       BOR_INACTIVE,
       BOR_DOCUMENTTYPE,
       BOR_ACCOUNTNUMBER,
       BOR_DELTAACCOUNTNUMBER,
       BOR_IDENTIFICATION,
       BOR_MODIFMODE,
       BOR_CITIZENSHIP,
       BOR_MIGRATIONCARD_NUMBER,
       BOR_MIGRATIONCARD_FROM,
       BOR_MIGRATIONCARD_TO,
       BOR_LANCERNAME,
       BOR_LANCERCUI,
       BOR_DRIVERLICENSEISSUINGDATE,
       BOR_MARITALSTATUS,
       BOR_CHILDRENPRESENCE,
       BOR_MOBILEPHONENUMBER,
       BOR_WORKPHONENUMBER,
       BOR_REGISTRATIONADDRESS,
       BOR_REGISTRATIONZIPCODE,
       BOR_REGISTRATIONCITY,
       BOR_REGISTRATIONTOWN,
       BOR_REGISTRATIONSTREET,
       BOR_REGISTRATIONHOUSE,
       BOR_REGISTRATIONBUILDING,
       BOR_REGISTRATIONAPARTMENT,
       BOR_INN,
       BOR_RESIDENCEPERMIT,
       BOR_PUBLICPERSON,
       BOR_TARIFFLIFE,
       BOR_PREMIUMLIFE,
       BOR_DOCUMENTISSUINGPLACECODE,
       BOR_LOANQUOTASHARE,
       BOR_ACTUALREGION,
       BOR_ACTUALZIPCODE,
       BOR_ACTUALCOUNTRY,
       BOR_ACTUALCITY,
       BOR_ACTUALSTREETNAME,
       BOR_ACTUALHOUSE,
       BOR_ACTUALBUILDING,
       BOR_ACTUALLITERA,
       BOR_ACTUALCORPUS,
       BOR_ACTUALAPARTMENT,
       bor_email,
       bor_klifedeath,
       bor_klifedisability,
       bor_klifeloading
   FROM TBL_Contract , TBL_Product , TBL_BorrowerContract , TBL_Borrower
  where prd_id = cnt_product
  and cnt_id = bct_contract
  and bor_id = bct_borrower
  and ( PRD_B2B is not null and PRD_B2B <> 0 )
  and ( CNT_Status is null or CNT_Status <> 'V' )
  and ( BOR_Inactive is null or BOR_Inactive = 0 );

CREATE OR REPLACE VIEW vw_brdfcontract (cnt_id, cnt_product, cnt_number, cnt_date, cnt_duration, cnt_additionalterm, cnt_loanamount, cnt_rmnduecapital, cnt_rmnduecapitalnextmonth, cnt_policynumber, cnt_insurancerate, cnt_premiumamount, cnt_duedays, cnt_loanproduct, cnt_loantype, cnt_status, cnt_branch, cnt_closingdate, cnt_sogelifeclosingdate, cnt_closingreason, cnt_integrationdatesgeb, cnt_integrationdateclosed, cnt_calculatedtariff, cnt_currency, cnt_lastrmbdate, cnt_statusdate, cnt_insurancecode, cnt_pointofsale, cnt_netprmcomexplclcur, cnt_premiumcurrency, cnt_netprmcomexpprdcur, cnt_financinguse, cnt_premiumcalcbasis, cnt_paymentfreq, cnt_maxauthinsuredamount, cnt_fileref, cnt_status2, cnt_clientclosingdate, cnt__user, cnt_insuredamount, cnt_cancel_fts, cnt_cancel_fid, cnt_earlyreimbursementdate, cnt_earlyreimbursement_fts, cnt_earlyreimbursement_fid, cnt_claimdate, cnt_filetimestamp, cnt_fileintegrationdate, cnt_inactive, cnt_loanamountlocal, cnt_calculatedtariff_1, cnt_comregioncode, cnt_premiumamountlocal, cnt_renewaldate, cnt_insurer, cnt_insertiondate, cnt_termofsubscription, cnt_utistartdate, cnt_financedamount, cnt_graceduration, cnt_utidescr, cnt_modifmode, cnt_calcextrapremrate, cnt_productcategory, cnt_nbinstallpremium, cnt_singlepremiumamount, cnt_bankstartdate, cnt_expirydate, cnt_coveragedegree, cnt_riskstandard, cnt_emergencycapital, cnt_bankfilial, cnt_addagreementnumber, cnt_bankemployeecode, cnt_br, cnt_account, cnt_sfx, cnt_originalregdate, cnt_deductibleamount, cnt_nbpremiumcancelled, cnt_mr0, cnt_currentaccount, cnt_deductiblerepurchase, cnt_deductiblerepurchasedate, cnt_numberinsureddays, cnt_numberinsuredcars, cnt_autorenewal, cnt_pl_role, cnt_pl_name, cnt_pl_dateofbirth, cnt_creditcontractdate, cnt_creditcontractnumber, cnt_bankemployeename, cnt_bankemployeeposition, cnt_additionalofficecode, cnt_poscode, cnt_filialnameincludingpos, cnt_issuedpolicyemployeepos, cnt_lastintegration, cnt_comment, cnt_insurancesigningdate, cnt_dealer, cnt_dealercode, cnt_paymentmethod, cnt_monthlyinstallment, cnt_bankfilialaddress, cnt_credittype, cnt_fullcreditamount, cnt_okato, cnt_tarifftitle, cnt_tariffproperty, cnt_renewalintegration, cnt_terfile, cnt_clientpacketidsticker, cnt_clientpacketidkeychain, cnt_clientpacketidkeychain2) AS SELECT 
cnt_id,
cnt_product,
cnt_number,
cnt_date,
cnt_duration,
cnt_additionalterm,
cnt_loanamount,
sum_cnt_rmnduecapital as cnt_rmnduecapital,
cnt_rmnduecapitalnextmonth,
cnt_policynumber,
cnt_insurancerate,
cnt_premiumamount,
cnt_duedays,
cnt_loanproduct,
cnt_loantype,
cnt_status,
cnt_branch,
cnt_closingdate,
cnt_sogelifeclosingdate,
cnt_closingreason,
cnt_integrationdatesgeb,
cnt_integrationdateclosed,
cnt_calculatedtariff,
cnt_currency,
cnt_lastrmbdate,
cnt_statusdate,
cnt_insurancecode,
cnt_pointofsale,
cnt_netprmcomexplclcur,
cnt_premiumcurrency,
cnt_netprmcomexpprdcur,
cnt_financinguse,
cnt_premiumcalcbasis,
cnt_paymentfreq,
cnt_maxauthinsuredamount,
cnt_fileref,
cnt_status2,
cnt_clientclosingdate,
cnt__user,
cnt_insuredamount,
cnt_cancel_fts,
cnt_cancel_fid,
cnt_earlyreimbursementdate,
cnt_earlyreimbursement_fts,
cnt_earlyreimbursement_fid,
cnt_claimdate,
cnt_filetimestamp,
cnt_fileintegrationdate,
cnt_inactive,
cnt_loanamountlocal,
cnt_calculatedtariff_1,
cnt_comregioncode,
cnt_premiumamountlocal,
cnt_renewaldate,
cnt_insurer,
cnt_insertiondate,
cnt_termofsubscription,
cnt_utistartdate,
cnt_financedamount,
cnt_graceduration,
cnt_utidescr,
cnt_modifmode,
cnt_calcextrapremrate,
cnt_productcategory,
cnt_nbinstallpremium,
cnt_singlepremiumamount,
cnt_bankstartdate,
cnt_expirydate,
cnt_coveragedegree,
cnt_riskstandard,
cnt_emergencycapital,
cnt_bankfilial,
cnt_addagreementnumber,
cnt_bankemployeecode,
cnt_br,
cnt_account,
cnt_sfx,
cnt_originalregdate,
cnt_deductibleamount,
cnt_nbpremiumcancelled,
cnt_mr0,
cnt_currentaccount,
cnt_deductiblerepurchase,
cnt_deductiblerepurchasedate,
cnt_numberinsureddays,
cnt_numberinsuredcars,
cnt_autorenewal,
cnt_pl_role,
cnt_pl_name,
cnt_pl_dateofbirth,
cnt_creditcontractdate,
cnt_creditcontractnumber,
cnt_bankemployeename,
cnt_bankemployeeposition,
cnt_additionalofficecode,
cnt_poscode,
cnt_filialnameincludingpos,
cnt_issuedpolicyemployeepos,
cnt_lastintegration,
cnt_comment,
cnt_insurancesigningdate,
cnt_dealer,
cnt_dealercode,
cnt_paymentmethod,
cnt_monthlyinstallment,
cnt_bankfilialaddress,
cnt_credittype,
cnt_fullcreditamount,
cnt_okato,
cnt_tarifftitle,
cnt_tariffproperty,
cnt_renewalintegration,
cnt_terfile,
cnt_clientpacketidsticker,
CNT_ClientPacketIDkeychain,
CNT_ClientPacketIDkeychain2
 FROM tbl_contract ,
(
  select max(cnt_id) as max_cnt_id , sum(cnt_rmnduecapital) as sum_cnt_rmnduecapital
  from tbl_contract
  group by cnt_number
)
where cnt_id = max_cnt_id;

CREATE OR REPLACE VIEW vw_h_repayment (rpy_filetimestamp, l_rpy__modificationdate, l_rpy_duedate, rpy_currency, rpy_remainingbalance, rpy_financedamount, rpy_modifmode, rpy_number, usr_login, cnt_id, rpy__modificationdate) AS SELECT  rpy_FileTimeStamp ,
       to_char(RPY__ModificationDate, 'DD/MM/YYYY HH24:MI:SS') as l_RPY__ModificationDate,
       to_char(RPY_DueDate, 'DD/MM/YYYY') as l_RPY_DueDate,
       RPY_CURRENCY,
       RPY_RemainingBalance,
       RPY_FinancedAmount,
       RPY_ModifMode,
       rpy_number,
       usr_login,
       cnt_id,
       RPY__modificationdate
   FROM TBL_H_Repayment, tbl_User, tbl_Contract
 WHERE USR_Id(+) = RPY__User
   AND RPY_Contract = CNT_Id;

CREATE OR REPLACE VIEW vw_h_product (l_prd__modificationdate, prd_id, prd_name, prd_category, prd_distributor, prd_grouptermination, prd_currency, prd_renunciationdelay, prd_paymentfrequency, prd_uniquerate, prd_agemin, prd_agemax, prd_durationmax, prd_suminsuredmin, prd_suminsuredmax, prd_suminsuredmax2, prd_minimumpayment, prd_reinsurancebenchmark, prd_prmbenefinsurerrate, prd_prmbenefdistribrate, prd_coboruniquerate, prd_taxrate, prd_acquisitioncosts, prd_otherfees1, prd_otherfees2, prd_penalitiesrating, prd__directory, prd__user, prd__modificationdate, prd__parent, prd_description, prd_calcmethod, prd_fixedpremiumamount, prd_feetypeinsurer, prd_feetypedistributor, prd_feetypetax, prd_feetypeacquisition, prd_feetypeother1, prd_feetypeother2, prd_feelabelother1, prd_feelabelother2, prd_durationmin, prd_type, prd_tariffgrid, prd_tariffgridname, prd_agemaxmaturity, prd_maxcoverperiod, prd_premiumtype, prd_applyfreq, prd_rpyperiodrule, prd_rpyperiodvalue, prd_productreference, prd_comfrom, prd_comto, prd_reservecalc, prd_bortariffcode, prd_cobortariffcode, prd_convrule1, prd_convrule2, prd_convrule3, prd_convrule4, prd_uprcalc, prd_mrcalc, prd_mrcalcfee, prd_mrcalccom, prd_tacitrenewal, prd_discountrate, prd_coverstartdate, prd_coverenddate, prd_usecategory, prd_separatecategory, prd_agemaxmaturity1, prd_agemaxmaturity2, prd_deductiblerepurchase, prd_agreedvehiclenumber, prd_agreedvehiclefixprmamount, prd_agreedvehicleextprmamount, prd_insurancepremiumamount, prd_aggregateamount, prd_prmmanagementtype, prd_contractprolongation, prd_maxyearlypremium, prd_rebaterate, prd_insurancetype, prd_maximumpayment, prd_rebaterate2, prd_annualgwp, usr_login) AS SELECT  to_char(PRD__ModificationDate, 'DD/MM/YYYY HH24:MI:SS') as l_PRD__ModificationDate,
       PRD_ID,
       PRD_NAME,
       PRD_CATEGORY,
       PRD_DISTRIBUTOR,
       PRD_GROUPTERMINATION,
       PRD_CURRENCY,
       PRD_RENUNCIATIONDELAY,
       PRD_PAYMENTFREQUENCY,
       PRD_UNIQUERATE,
       PRD_AGEMIN,
       PRD_AGEMAX,
       PRD_DURATIONMAX,
       PRD_SUMINSUREDMIN,
       PRD_SUMINSUREDMAX,
       PRD_SUMINSUREDMAX2,
       PRD_MINIMUMPAYMENT,
       PRD_REINSURANCEBENCHMARK,
       PRD_PRMBENEFINSURERRATE,
       PRD_PRMBENEFDISTRIBRATE,
       PRD_COBORUNIQUERATE,
       PRD_TAXRATE,
       PRD_ACQUISITIONCOSTS,
       PRD_OTHERFEES1,
       PRD_OTHERFEES2,
       PRD_PENALITIESRATING,
       PRD__DIRECTORY,
       PRD__USER,
       PRD__MODIFICATIONDATE,
       PRD__PARENT,
       PRD_DESCRIPTION,
       PRD_CALCMETHOD,
       PRD_FIXEDPREMIUMAMOUNT,
       PRD_FEETYPEINSURER,
       PRD_FEETYPEDISTRIBUTOR,
       PRD_FEETYPETAX,
       PRD_FEETYPEACQUISITION,
       PRD_FEETYPEOTHER1,
       PRD_FEETYPEOTHER2,
       PRD_FEELABELOTHER1,
       PRD_FEELABELOTHER2,
       PRD_DURATIONMIN,
       prd_type,
       prd_tariffgrid,
       prd_tariffgridname,
       prd_agemaxmaturity,
       prd_maxcoverperiod,
       prd_premiumtype,
       prd_applyfreq,
       prd_rpyperiodrule,
       prd_rpyperiodvalue,
       prd_productreference,
       prd_comfrom,
       prd_comto,
       prd_reservecalc,
       prd_bortariffcode,
       prd_cobortariffcode,
       prd_convrule1,
       prd_convrule2,
       prd_convrule3,
       prd_convrule4,
       prd_uprcalc,
       prd_mrcalc,
       prd_mrcalcfee,
       prd_mrcalccom,
       prd_tacitrenewal,
       prd_discountrate,
       prd_coverstartdate,
       prd_coverenddate,
       prd_usecategory,
       prd_separatecategory,
       prd_agemaxmaturity1,
       prd_agemaxmaturity2,
       prd_deductiblerepurchase,
       prd_agreedvehiclenumber,
       prd_agreedvehiclefixprmamount,
       prd_agreedvehicleextprmamount,
       prd_insurancepremiumamount,
       prd_aggregateamount,
       prd_prmmanagementtype,
       prd_contractprolongation,
       PRD_MaxYearlyPremium,
       prd_rebaterate,
       prd_insurancetype,
       prd_maximumpayment,
       prd_rebaterate2,
       PRD_AnnualGWP,
       usr_login
   FROM TBL_H_Product, tbl_User
 WHERE USR_Id(+) = PRD__User;

CREATE OR REPLACE VIEW vw_reserve_date (date_reserve, reserve_date) AS SELECT  UPR_Date as Date_Reserve,to_char(UPR_Date,'DD/MM/YYYY') as Reserve_Date  FROM Tbl_Upr41_1
  union select UPR_Date,to_char(UPR_Date,'DD/MM/YYYY') from Tbl_UPR41_2
  union select UPR_Date,to_char(UPR_Date,'DD/MM/YYYY') from Tbl_UPR41_3
  union select UPR_Date,to_char(UPR_Date,'DD/MM/YYYY') from Tbl_UPR41_4
  union select UPR_Date,to_char(UPR_Date,'DD/MM/YYYY') from Tbl_UPR41_5
  union select UPR_Date,to_char(UPR_Date,'DD/MM/YYYY') from Tbl_UPR41_6
  union select UPR_Date,to_char(UPR_Date,'DD/MM/YYYY') from Tbl_UPR41_7
  union select UPR_Date,to_char(UPR_Date,'DD/MM/YYYY') from Tbl_UPR41_8
  union select UPR_Date,to_char(UPR_Date,'DD/MM/YYYY') from Tbl_UPR41_9
  union select UPR_Date,to_char(UPR_Date,'DD/MM/YYYY') from Tbl_UPR41_10
  union select UPR_Date,to_char(UPR_Date,'DD/MM/YYYY') from Tbl_UPR41_11
  union select UPR_Date,to_char(UPR_Date,'DD/MM/YYYY') from Tbl_UPR41_12
  union select UPR_Date,to_char(UPR_Date,'DD/MM/YYYY') from Tbl_UPR41_13
  union select UPR_Date,to_char(UPR_Date,'DD/MM/YYYY') from Tbl_UPR41_14
  union select UPR_Date,to_char(UPR_Date,'DD/MM/YYYY') from Tbl_UPR41_15
  union select UPR_Date,to_char(UPR_Date,'DD/MM/YYYY') from Tbl_UPR41_16
  union select UPR_Date,to_char(UPR_Date,'DD/MM/YYYY') from Tbl_UPR41_17
  union select UPR_Date,to_char(UPR_Date,'DD/MM/YYYY') from Tbl_UPR41_18
  union select UPR_Date,to_char(UPR_Date,'DD/MM/YYYY') from Tbl_UPR41_19
  union select UPR_Date,to_char(UPR_Date,'DD/MM/YYYY') from Tbl_UPR41_20
  union select UPR_Date,to_char(UPR_Date,'DD/MM/YYYY') from Tbl_UPR41_21
  union select UPR_Date,to_char(UPR_Date,'DD/MM/YYYY') from Tbl_UPR42_1
  union select UPR_Date,to_char(UPR_Date,'DD/MM/YYYY') from Tbl_UPR42_2
  union select UPR_Date,to_char(UPR_Date,'DD/MM/YYYY') from Tbl_UPR42_3
  union select UPR_Date,to_char(UPR_Date,'DD/MM/YYYY') from Tbl_UPR42_4
  union select UPR_Date,to_char(UPR_Date,'DD/MM/YYYY') from Tbl_UPR42_5
  union select UPR_Date,to_char(UPR_Date,'DD/MM/YYYY') from Tbl_UPR42_6
  union select UPR_Date,to_char(UPR_Date,'DD/MM/YYYY') from Tbl_UPR42_7
  union select UPR_Date,to_char(UPR_Date,'DD/MM/YYYY') from Tbl_UPR42_8
  union select UPR_Date,to_char(UPR_Date,'DD/MM/YYYY') from Tbl_UPR42_9
  union select UPR_Date,to_char(UPR_Date,'DD/MM/YYYY') from Tbl_UPR42_10
  union select UPR_Date,to_char(UPR_Date,'DD/MM/YYYY') from Tbl_UPR42_11
  union select UPR_Date,to_char(UPR_Date,'DD/MM/YYYY') from Tbl_UPR42_12
  union select UPR_Date,to_char(UPR_Date,'DD/MM/YYYY') from Tbl_UPR42_13
  union select UPR_Date,to_char(UPR_Date,'DD/MM/YYYY') from Tbl_UPR42_14
  union select UPR_Date,to_char(UPR_Date,'DD/MM/YYYY') from Tbl_UPR42_15
  union select UPR_Date,to_char(UPR_Date,'DD/MM/YYYY') from Tbl_UPR42_16
  union select UPR_Date,to_char(UPR_Date,'DD/MM/YYYY') from Tbl_UPR42_17
  union select UPR_Date,to_char(UPR_Date,'DD/MM/YYYY') from Tbl_UPR42_18
  union select UPR_Date,to_char(UPR_Date,'DD/MM/YYYY') from Tbl_UPR42_19
  union select UPR_Date,to_char(UPR_Date,'DD/MM/YYYY') from Tbl_UPR42_20
  union select UPR_Date,to_char(UPR_Date,'DD/MM/YYYY') from Tbl_UPR42_21
  union select MR_Date,to_char(MR_Date,'DD/MM/YYYY') from Tbl_MR_1
  union select MR_Date,to_char(MR_Date,'DD/MM/YYYY') from Tbl_MR_2
  union select MR_Date,to_char(MR_Date,'DD/MM/YYYY') from Tbl_MR_3
  union select MR_Date,to_char(MR_Date,'DD/MM/YYYY') from Tbl_MR_4
  union select MR_Date,to_char(MR_Date,'DD/MM/YYYY') from Tbl_MR_5
  union select MR_Date,to_char(MR_Date,'DD/MM/YYYY') from Tbl_MR_6
  union select MR_Date,to_char(MR_Date,'DD/MM/YYYY') from Tbl_MR_7
  union select MR_Date,to_char(MR_Date,'DD/MM/YYYY') from Tbl_MR_8
  union select MR_Date,to_char(MR_Date,'DD/MM/YYYY') from Tbl_MR_9
  union select MR_Date,to_char(MR_Date,'DD/MM/YYYY') from Tbl_MR_10
  union select MR_Date,to_char(MR_Date,'DD/MM/YYYY') from Tbl_MR_11
  union select MR_Date,to_char(MR_Date,'DD/MM/YYYY') from Tbl_MR_12
  union select MR_Date,to_char(MR_Date,'DD/MM/YYYY') from Tbl_MR_13
  union select MR_Date,to_char(MR_Date,'DD/MM/YYYY') from Tbl_MR_14
  union select MR_Date,to_char(MR_Date,'DD/MM/YYYY') from Tbl_MR_15
  union select MR_Date,to_char(MR_Date,'DD/MM/YYYY') from Tbl_MR_16
  union select MR_Date,to_char(MR_Date,'DD/MM/YYYY') from Tbl_MR_17
  union select MR_Date,to_char(MR_Date,'DD/MM/YYYY') from Tbl_MR_18
  union select MR_Date,to_char(MR_Date,'DD/MM/YYYY') from Tbl_MR_19
  union select MR_Date,to_char(MR_Date,'DD/MM/YYYY') from Tbl_MR_20
  union select MR_Date,to_char(MR_Date,'DD/MM/YYYY') from Tbl_MR_21;

CREATE OR REPLACE VIEW vw_h_contract (cnt_filetimestamp, cnt__modificationdate, l_cnt__modificationdate, l_cnt_date, l_cnt_closingdate, cnt_duration, cnt_loanamount, cnt_insuredamount, cnt_policynumber, cnt_insurancerate, cnt_loantype, l_cnt_sogelifeclosingdate, cnt_closingreason, cnt_currency, cnt_status2, usr_login, l_cnt_statusdate, cnt__parent, cnt_modifmode, cnt_financedamount, cnt_financinguse, l_cnt_utistartdate, l_cnt_clientclosingdate, l_cnt_claimdate, cnt_utidescr, cnt_calcextrapremrate, cnt_premiumamountlocal, cnt_singlepremiumamount, cnt_coveragedegree, cnt_deductibleamount, cnt_currentaccount, cnt_bankemployeename, cnt_bankemployeeposition, cnt_additionalofficecode, cnt_poscode, cnt_filialnameincludingpos, cnt_issuedpolicyemployeepos, l_cnt_insurancesigningdate, cnt_dealer, cnt_dealercode, cnt_paymentmethod, cnt_monthlyinstallment, cnt_bankfilialaddress, cnt_credittype, cnt_fullcreditamount, cnt_clientpacketidsticker, cnt_clientpacketidkeychain, cnt_clientpacketidkeychain2, cnt_policynumberextra, cnt_br, cnt_sfx, cnt_account) AS SELECT  cnt_filetimestamp,cnt__modificationdate,
       to_char(CNT__ModificationDate, 'DD/MM/YYYY HH24:MI:SS') as l_CNT__ModificationDate,
       to_char(cnt_date, 'DD/MM/YYYY') as l_cnt_date,
       to_char(cnt_closingdate, 'DD/MM/YYYY') as l_cnt_closingdate,
       cnt_duration,
       cnt_loanamount,
       cnt_insuredamount,
       cnt_policynumber,
       cnt_insurancerate,
       cnt_loantype,
       to_char(cnt_sogelifeclosingdate, 'DD/MM/YYYY') as l_cnt_sogelifeclosingdate,
       cnt_closingreason,
       cnt_currency,
       cnt_status2,
       usr_login,
       to_char(cnt_statusdate, 'DD/MM/YYYY') as l_cnt_statusdate,
       cnt__parent,
       cnt_ModifMode,
       cnt_financedamount,
       cnt_financinguse,
       to_char(cnt_utistartdate, 'DD/MM/YYYY') as l_cnt_utistartdate,
       to_char(cnt_clientclosingdate, 'DD/MM/YYYY') as l_cnt_clientclosingdate,
       to_char(cnt_claimdate, 'DD/MM/YYYY') as l_cnt_claimdate,
       cnt_utidescr,
       Cnt_Calcextrapremrate,
       cnt_premiumamountlocal,
       CNT_SinglePremiumAmount,
       cnt_CoverageDegree,
       cnt_DeductibleAmount,
       CNT_CurrentAccount,
       cnt_bankemployeename,
       cnt_bankemployeeposition,
       cnt_additionalofficecode,
       cnt_poscode,
       cnt_filialnameincludingpos,
       cnt_issuedpolicyemployeepos,
       to_char(cnt_InsuranceSigningDate, 'DD/MM/YYYY') as l_cnt_InsuranceSigningDate,
       CNT_Dealer,
       CNT_DealerCode,
       cnt_paymentmethod,
       cnt_monthlyinstallment,
       cnt_bankfilialaddress,
       cnt_credittype,
       cnt_fullcreditamount,
       cnt_ClientPacketIDsticker,
       cnt_ClientPacketIDkeychain,
       cnt_clientpacketidkeychain2,
       cnt_PolicyNumberExtra,
       cnt_br,
       cnt_sfx,
       cnt_account
   FROM TBL_H_Contract, tbl_User
 WHERE USR_Id(+) = CNT__User;

CREATE OR REPLACE VIEW vw_vehicle (veh_id, veh_brand, veh_model, veh_vin, veh_passport, veh_productionyear, veh_price, veh_contractnumber, veh_contract, veh_filetimestamp, veh_fileintegrationdate, veh__user, veh_color, veh_platenumber, veh_enginepower, veh_passportissuingdate, veh_enginetype, veh_mileage, veh_remoteenginestart, veh_antitheftalarm, veh_antithefttype, veh_cardealer, veh_modifmode, veh_carcode, veh_leasingcontractnumber, veh_inclusiondate, veh_startingcirculationdate, veh_endingcirculationdate, veh_exclusiondate, veh_chassisnumber, veh_vehicletype, veh_taxablehorsepower, veh_weight, veh_retailchannel, veh_geographicalarea, veh_country, veh_numberofseats, veh_presenceofaccidenttracker, veh_activeperiod, veh_greencardcopyrequestdate, veh_circperiodoccurences, veh_clientfleetnumber, veh_autorenewal, veh_exclusionreason, veh_platenumberchangedate, veh_enginenumber, veh_category, veh_newcar, veh_cardealeraddress, veh_cardealerinn, veh_motorkey1, veh_borrower) AS SELECT  veh_id,
       veh_brand,
       veh_model,
       veh_vin,
       veh_passport,
       veh_productionyear,
       veh_price,
       veh_contractnumber,
       veh_contract,
       veh_filetimestamp,
       veh_fileintegrationdate,
       veh__user,
       veh_color,
       veh_platenumber,
       veh_enginepower,
       veh_passportissuingdate,
       veh_enginetype,
       veh_mileage,
       veh_remoteenginestart,
       veh_antitheftalarm,
       veh_antithefttype,
       veh_cardealer,
       veh_modifmode,
       veh_carcode,
       veh_leasingcontractnumber,
       veh_inclusiondate,
       veh_startingcirculationdate,
       veh_endingcirculationdate,
       veh_exclusiondate,
       veh_chassisnumber,
       veh_vehicletype,
       veh_taxablehorsepower,
       veh_weight,
       veh_retailchannel,
       veh_geographicalarea,
       veh_country,
       veh_numberofseats,
       veh_presenceofaccidenttracker,
       veh_activeperiod,
       veh_greencardcopyrequestdate,
       veh_circperiodoccurences,
       veh_clientfleetnumber,
       veh_autorenewal,
       veh_exclusionreason,
       veh_platenumberchangedate,
       veh_enginenumber,
       veh_category,
       veh_newcar,
       veh_cardealeraddress,
       veh_cardealerinn,
       veh_motorkey1,
       BCT_Borrower as VEH_Borrower
     FROM TBL_VEHICLE , Tbl_Borrowercontract
    where BCT_Role = 1
    and BCT_Contract = VEH_Contract;

CREATE OR REPLACE VIEW vw_a_productguarantee (pg_product, pg_guarantee, pg_rate) AS SELECT  prg_product as pg_product , prg_guarantee as pg_guarantee, prg_rate as pg_rate
 FROM tbl_productguarantee;

CREATE OR REPLACE VIEW vw_borrower (bor_id, bor_fullname, bor_uniqueid, bor_dateofbirth, l_bor_dateofbirth, bor_clientid, bor_clientaccount, bor_contract, bor_quotashare, bor_firstname, bor_surname, bor_patronymicname, bor_placeofbirth, bor_homeaddress, bor_gender, l_bor_gender, bor_phonenumber, bor_profession, bor_passportnumber, bor_homezipcode, bor_homeregion, bor_homecity, bor_homestreetname, bor_homecountryname, bor_filetimestamp, bor_fileintegrationdate, l_bor_fileintegrationdate, bor_documenttype, bor_passportissuingdate, l_bor_passportissuingdate, bor_passportissuingplace, bor_deltaaccountnumber, bor_citizenship, bor_migrationcard_number, bor_migrationcard_from, l_bor_migrationcard_from, bor_migrationcard_to, l_bor_migrationcard_to, bor_lancername, bor_lancercui, l_bor_driverlicenseissuingdate, bor_maritalstatus, bor_childrenpresence, bor_mobilephonenumber, bor_workphonenumber, bor_accountnumber, bor_registrationaddress, bor_registrationzipcode, bor_registrationcity, bor_registrationtown, bor_registrationstreet, bor_registrationhouse, bor_registrationbuilding, bor_registrationapartment, bor_loanquotashare, bor_inn, bor_residencepermit, bor_publicperson, bor_tarifflife, bor_premiumlife, bor_documentissuingplacecode, bor_actualregion, bor_actualzipcode, bor_actualcountry, bor_actualcity, bor_actualstreetname, bor_actualhouse, bor_actualbuilding, bor_actuallitera, bor_actualcorpus, bor_actualapartment, bor_email, bor_klifedeath, bor_klifedisability, bor_klifeloading, bor_respermittype, bor_respermitnumber, bor_respermitstartdate, bor_respermitenddate, bor_respermitissuingplace) AS SELECT 
    bor_id,
    bor_fullname,
    bor_uniqueid,
    bor_dateofbirth,
    to_char(bor_DateOfBirth,'DD/MM/YYYY') as l_bor_DateOfBirth,
    bor_clientid,
    bor_clientaccount,
    bct_contract as bor_contract,
    bct_quotashare as bor_quotashare,
    bor_firstname,
    bor_surname,
    bor_patronymicname,
    bor_placeofbirth,
    bor_homeaddress,
    bor_gender,
    case bor_gender when '1' then 'Male' when '2' then 'Female' when '3' then 'Firm' when '4' then 'Other' else null end as l_bor_gender,
    bor_phonenumber,
    bor_profession,
    bor_Passportnumber,
    bor_homezipcode,
    bor_homeregion,
    bor_homecity,
    bor_homestreetname,
    bor_homecountryname,
    bor_filetimestamp,
    bor_fileintegrationdate,
    to_char(bor_fileintegrationdate,'DD/MM/YYYY HH24:MI:SS') as l_bor_fileintegrationdate,
    bor_documenttype,
    bor_passportissuingdate,
    to_char(bor_passportissuingdate,'DD/MM/YYYY') as l_bor_passportissuingdate,
    bor_passportissuingplace,
    bor_deltaaccountnumber,
    bor_citizenship,
    bor_migrationcard_number,
    bor_migrationcard_from,
    to_char(bor_migrationcard_from,'DD/MM/YYYY') as l_bor_migrationcard_from,
    bor_migrationcard_to,
    to_char(bor_migrationcard_to,'DD/MM/YYYY') as l_bor_migrationcard_to,
    Bor_LancerName,
    Bor_LancerCUI,
    to_char(bor_driverlicenseissuingdate,'DD/MM/YYYY') as l_bor_driverlicenseissuingdate,
    bor_maritalstatus,
    bor_childrenpresence,
    bor_mobilephonenumber,
    bor_workphonenumber,
    bor_accountnumber,
    bor_registrationaddress,
    bor_registrationzipcode,
    bor_registrationcity,
    bor_registrationtown,
    bor_registrationstreet,
    bor_registrationhouse,
    bor_registrationbuilding,
    bor_registrationapartment,
    BOR_LoanQuotaShare,
    bor_inn,
    bor_residencepermit,
    bor_publicperson,
    bor_tarifflife,
    bor_premiumlife,
    bor_documentissuingplacecode,
    bor_actualregion,
    bor_actualzipcode,
    bor_actualcountry,
    bor_actualcity,
    bor_actualstreetname,
    bor_actualhouse,
    bor_actualbuilding,
    bor_actuallitera,
    bor_actualcorpus,
    bor_actualapartment,
    bor_email,
    bor_klifedeath,
    bor_klifedisability,
    bor_klifeloading,
    bor_respermittype,
    bor_respermitnumber,
    bor_respermitstartdate,
    bor_respermitenddate,
    bor_respermitissuingplace
   FROM tbl_borrower , tbl_borrowercontract
  where bct_borrower = bor_id
  and bct_role = 1;

CREATE OR REPLACE VIEW vw_b2b_premium (cnt_id, cnt_number, prd_name, prm_id, prm_contract, prm_paymentdate, prm_currency, prm_localdue, prm_foreigndue, prm_installmentdate, prm_localcollected, prm_foreigncollected, prm__user, prm_filetimestamp, prm_fileintegrationdate, prm_inactive, prm_type, prm_tariffapplied, prm_modifmode, prm_calcbasis, prm_calcextrapremamout, prm_status, prm_statusdate, prm_tsaccounted, prm_type2, prm_calculated, prm_anomalyflag, prm_anomalyflagdate, prm_transstatus, prm_transdate, prm_cashinstatus, prm_cashindate, prm_transprevstatus, prm_number, prm_rmbamount, prm_borrole, prm_converted, prm_epconverted, prm_type3, prm_rowstatus, prm_filesentdate, prm_fileid, prm_recordid, prm_paymentbatch, prm_paymentdateupdatemode) AS SELECT  CNT_Id , CNT_Number , PRD_Name ,
       PRM_ID,
       PRM_CONTRACT,
       PRM_PAYMENTDATE,
       PRM_CURRENCY,
       PRM_LOCALDUE,
       PRM_FOREIGNDUE,
       PRM_INSTALLMENTDATE,
       PRM_LOCALCOLLECTED,
       PRM_FOREIGNCOLLECTED,
       PRM__USER,
       PRM_FILETIMESTAMP,
       PRM_FILEINTEGRATIONDATE,
       PRM_INACTIVE,
       PRM_TYPE,
       PRM_TARIFFAPPLIED,
       PRM_MODIFMODE,
       PRM_CALCBASIS,
       PRM_CALCEXTRAPREMAMOUT,
       PRM_STATUS,
       PRM_STATUSDATE,
       PRM_TSACCOUNTED,
       PRM_TYPE2,
       PRM_CALCULATED,
       PRM_ANOMALYFLAG,
       PRM_ANOMALYFLAGDATE,
       PRM_TRANSSTATUS,
       PRM_TRANSDATE,
       PRM_CASHINSTATUS,
       PRM_CASHINDATE,
       PRM_TRANSPREVSTATUS,
       PRM_NUMBER,
       PRM_RMBAMOUNT,
       PRM_BORROLE,
       PRM_CONVERTED,
       PRM_EPCONVERTED,
       PRM_TYPE3,
       PRM_ROWSTATUS,
       PRM_FILESENTDATE,
       PRM_FILEID,
       PRM_RECORDID,
       PRM_PAYMENTBATCH,
       PRM_PAYMENTDATEUPDATEMODE
   FROM TBL_Contract , TBL_Product , TBL_Premium
  where prd_id = cnt_product
  and cnt_id = prm_contract
  and ( PRD_B2B is not null and PRD_B2B <> 0 )
  and ( CNT_Status is null or CNT_Status <> 'V' )
  and ( PRM_Inactive is null or PRM_Inactive = 0 );

CREATE OR REPLACE VIEW vw_a_guaranteeloading (gl_guarantee, gl_loading) AS SELECT  GRL_Guarantee as gl_guarantee , GRL_Loading as gl_loading
 FROM tbl_GuaranteeLoading;

CREATE OR REPLACE VIEW vw_h_coborrower (bor_filetimestamp, bor__modificationdate, l_bor__modificationdate, l_bor_dateofbirth, bor_firstname, bor_surname, bor_patronymicname, bor_uniqueid, bor_gender, l_bor_gender, bor_homezipcode, bor_homeregion, bor_homecity, bor_homestreetname, bor_homecountryname, usr_login, bct_contract, bor_modifmode) AS SELECT  BOR_FileTimeStamp , BOR__ModificationDate,
       to_char(BOR__ModificationDate, 'DD/MM/YYYY HH24:MI:SS') as l_BOR__ModificationDate,
       to_char(BOR_DateOfBirth, 'DD/MM/YYYY') as l_BOR_DateOfBirth,
       bor_firstname,
       BOR_SURNAME,
       BOR_PATRONYMICNAME,
       BOR_UNIQUEID,
       bor_gender,
       case bor_gender when '1' then 'Male' when '2' then 'Female' when '3' then 'Firm' when '4' then 'Other' else null end as l_bor_gender,
       bor_homezipcode,
       bor_homeregion,
       bor_homecity,
       bor_homestreetname,
       bor_homecountryname,
       usr_login,
       bct_contract,
       bor_ModifMode
   FROM TBL_H_Borrower, tbl_User, tbl_BorrowerContract
 WHERE USR_Id(+) = BOR__User
   AND BOR__Parent = BCT_Borrower
   AND BCT_Role = 2
 order by BOR__ModificationDate;

CREATE OR REPLACE VIEW vw_h_premium (prm_filetimestamp, l_prm__modificationdate, l_prm_installmentdate, l_prm_paymentdate, prm_currency, prm_foreigndue, prm_foreigncollected, prm_type, cnt_premiumcalcbasis, usr_login, cnt_id, prm__modificationdate, prm_modifmode, prm_calcextrapremamout, prm_status, prm_number, prm_rmbamount, prm_borrole, l_prm_statusdate) AS SELECT  prm_filetimestamp,
       to_char(PRM__ModificationDate, 'DD/MM/YYYY HH24:MI:SS') as l_PRM__ModificationDate,
       to_char(prm_installmentdate, 'DD/MM/YYYY') as l_prm_installmentdate,
       to_char(PRM_PAYMENTDATE, 'DD/MM/YYYY') as l_PRM_PAYMENTDATE,
       PRM_CURRENCY,
       PRM_FOREIGNDUE,
       PRM_FOREIGNCOLLECTED,
       prm_type,
       cnt_premiumcalcbasis,
       usr_login,
       cnt_id,
       prm__modificationdate,
       prm_ModifMode,
       prm_calcextrapremamout,
       prm_status,
       prm_number,
       prm_rmbamount,
       prm_borrole,
       to_char(prm_statusdate,'DD/MM/YYYY') as l_prm_statusdate
   FROM TBL_H_Premium, tbl_User, tbl_Contract
 WHERE USR_Id(+) = PRM__User
   AND PRM_Contract = CNT_Id
   and prm_type2 is null;

CREATE OR REPLACE VIEW vw_a_p_productguarantee (pg_product, pg_guarantee, pg_rate) AS SELECT  prg_product as pg_product , prg_guarantee as pg_guarantee, prg_rate as pg_rate
 FROM tbl_p_productguarantee;

CREATE OR REPLACE VIEW vw_report_53 (f_date, f_contract, f_product, f_productcategory, f_type, f_amount1, f_amount2, f_amount3) AS SELECT  UPR_Date as F_Date, UPR_contract as F_Contract, UPR_Product as F_Product, UPR_ProductCategory as F_ProductCategory, 'UPR based on split premium by cover' as F_Type, 0 as F_Amount1, UPR_Commission as F_Amount2, UPR_Loading as F_Amount3  FROM TBL_UPR41_1
  union select UPR_Date as F_Date, UPR_contract, UPR_Product, UPR_ProductCategory, 'UPR based on split premium by cover', 0, UPR_Commission, UPR_Loading from TBL_UPR41_2
  union select UPR_Date as F_Date, UPR_contract, UPR_Product, UPR_ProductCategory, 'UPR based on split premium by cover', 0, UPR_Commission, UPR_Loading from TBL_UPR41_3
  union select UPR_Date as F_Date, UPR_contract, UPR_Product, UPR_ProductCategory, 'UPR based on split premium by cover', 0, UPR_Commission, UPR_Loading from TBL_UPR41_4
  union select UPR_Date as F_Date, UPR_contract, UPR_Product, UPR_ProductCategory, 'UPR based on split premium by cover', 0, UPR_Commission, UPR_Loading from TBL_UPR41_5
  union select UPR_Date as F_Date, UPR_contract, UPR_Product, UPR_ProductCategory, 'UPR based on split premium by cover', 0, UPR_Commission, UPR_Loading from TBL_UPR41_6
  union select UPR_Date as F_Date, UPR_contract, UPR_Product, UPR_ProductCategory, 'UPR based on split premium by cover', 0, UPR_Commission, UPR_Loading from TBL_UPR41_7
  union select UPR_Date as F_Date, UPR_contract, UPR_Product, UPR_ProductCategory, 'UPR based on split premium by cover', 0, UPR_Commission, UPR_Loading from TBL_UPR41_8
  union select UPR_Date as F_Date, UPR_contract, UPR_Product, UPR_ProductCategory, 'UPR based on split premium by cover', 0, UPR_Commission, UPR_Loading from TBL_UPR41_9
  union select UPR_Date as F_Date, UPR_contract, UPR_Product, UPR_ProductCategory, 'UPR based on split premium by cover', 0, UPR_Commission, UPR_Loading from TBL_UPR41_10
  union select UPR_Date as F_Date, UPR_contract, UPR_Product, UPR_ProductCategory, 'UPR based on split premium by cover', 0, UPR_Commission, UPR_Loading from TBL_UPR41_11
  union select UPR_Date as F_Date, UPR_contract, UPR_Product, UPR_ProductCategory, 'UPR based on split premium by cover', 0, UPR_Commission, UPR_Loading from TBL_UPR41_12
  union select UPR_Date as F_Date, UPR_contract, UPR_Product, UPR_ProductCategory, 'UPR based on split premium by cover', 0, UPR_Commission, UPR_Loading from TBL_UPR41_13
  union select UPR_Date as F_Date, UPR_contract, UPR_Product, UPR_ProductCategory, 'UPR based on split premium by cover', 0, UPR_Commission, UPR_Loading from TBL_UPR41_14
  union select UPR_Date as F_Date, UPR_contract, UPR_Product, UPR_ProductCategory, 'UPR based on split premium by cover', 0, UPR_Commission, UPR_Loading from TBL_UPR41_15
  union select UPR_Date as F_Date, UPR_contract, UPR_Product, UPR_ProductCategory, 'UPR based on split premium by cover', 0, UPR_Commission, UPR_Loading from TBL_UPR41_16
  union select UPR_Date as F_Date, UPR_contract, UPR_Product, UPR_ProductCategory, 'UPR based on split premium by cover', 0, UPR_Commission, UPR_Loading from TBL_UPR41_17
  union select UPR_Date as F_Date, UPR_contract, UPR_Product, UPR_ProductCategory, 'UPR based on split premium by cover', 0, UPR_Commission, UPR_Loading from TBL_UPR41_18
  union select UPR_Date as F_Date, UPR_contract, UPR_Product, UPR_ProductCategory, 'UPR based on split premium by cover', 0, UPR_Commission, UPR_Loading from TBL_UPR41_19
  union select UPR_Date as F_Date, UPR_contract, UPR_Product, UPR_ProductCategory, 'UPR based on split premium by cover', 0, UPR_Commission, UPR_Loading from TBL_UPR41_20
  union select UPR_Date as F_Date, UPR_contract, UPR_Product, UPR_ProductCategory, 'UPR based on split premium by cover', 0, UPR_Commission, UPR_Loading from TBL_UPR41_21
  union select UPR_Date as F_Date, UPR_contract, UPR_Product, UPR_ProductCategory, 'UPR based on commercial premium', UPR_Value, 0, 0 from TBL_UPR42_1
  union select UPR_Date as F_Date, UPR_contract, UPR_Product, UPR_ProductCategory, 'UPR based on commercial premium', UPR_Value, 0, 0 from TBL_UPR42_2
  union select UPR_Date as F_Date, UPR_contract, UPR_Product, UPR_ProductCategory, 'UPR based on commercial premium', UPR_Value, 0, 0 from TBL_UPR42_3
  union select UPR_Date as F_Date, UPR_contract, UPR_Product, UPR_ProductCategory, 'UPR based on commercial premium', UPR_Value, 0, 0 from TBL_UPR42_4
  union select UPR_Date as F_Date, UPR_contract, UPR_Product, UPR_ProductCategory, 'UPR based on commercial premium', UPR_Value, 0, 0 from TBL_UPR42_5
  union select UPR_Date as F_Date, UPR_contract, UPR_Product, UPR_ProductCategory, 'UPR based on commercial premium', UPR_Value, 0, 0 from TBL_UPR42_6
  union select UPR_Date as F_Date, UPR_contract, UPR_Product, UPR_ProductCategory, 'UPR based on commercial premium', UPR_Value, 0, 0 from TBL_UPR42_7
  union select UPR_Date as F_Date, UPR_contract, UPR_Product, UPR_ProductCategory, 'UPR based on commercial premium', UPR_Value, 0, 0 from TBL_UPR42_8
  union select UPR_Date as F_Date, UPR_contract, UPR_Product, UPR_ProductCategory, 'UPR based on commercial premium', UPR_Value, 0, 0 from TBL_UPR42_9
  union select UPR_Date as F_Date, UPR_contract, UPR_Product, UPR_ProductCategory, 'UPR based on commercial premium', UPR_Value, 0, 0 from TBL_UPR42_10
  union select UPR_Date as F_Date, UPR_contract, UPR_Product, UPR_ProductCategory, 'UPR based on commercial premium', UPR_Value, 0, 0 from TBL_UPR42_11
  union select UPR_Date as F_Date, UPR_contract, UPR_Product, UPR_ProductCategory, 'UPR based on commercial premium', UPR_Value, 0, 0 from TBL_UPR42_12
  union select UPR_Date as F_Date, UPR_contract, UPR_Product, UPR_ProductCategory, 'UPR based on commercial premium', UPR_Value, 0, 0 from TBL_UPR42_13
  union select UPR_Date as F_Date, UPR_contract, UPR_Product, UPR_ProductCategory, 'UPR based on commercial premium', UPR_Value, 0, 0 from TBL_UPR42_14
  union select UPR_Date as F_Date, UPR_contract, UPR_Product, UPR_ProductCategory, 'UPR based on commercial premium', UPR_Value, 0, 0 from TBL_UPR42_15
  union select UPR_Date as F_Date, UPR_contract, UPR_Product, UPR_ProductCategory, 'UPR based on commercial premium', UPR_Value, 0, 0 from TBL_UPR42_16
  union select UPR_Date as F_Date, UPR_contract, UPR_Product, UPR_ProductCategory, 'UPR based on commercial premium', UPR_Value, 0, 0 from TBL_UPR42_17
  union select UPR_Date as F_Date, UPR_contract, UPR_Product, UPR_ProductCategory, 'UPR based on commercial premium', UPR_Value, 0, 0 from TBL_UPR42_18
  union select UPR_Date as F_Date, UPR_contract, UPR_Product, UPR_ProductCategory, 'UPR based on commercial premium', UPR_Value, 0, 0 from TBL_UPR42_19
  union select UPR_Date as F_Date, UPR_contract, UPR_Product, UPR_ProductCategory, 'UPR based on commercial premium', UPR_Value, 0, 0 from TBL_UPR42_20
  union select UPR_Date as F_Date, UPR_contract, UPR_Product, UPR_ProductCategory, 'UPR based on commercial premium', UPR_Value, 0, 0 from TBL_UPR42_21
  union select MR_Date as F_Date, MR_contract, MR_Product, MR_ProductCategory, 'MR', MR_Value, MR_CommissionValue, MR_ManagementValue from TBL_MR_1
  union select MR_Date as F_Date, MR_contract, MR_Product, MR_ProductCategory, 'MR', MR_Value, MR_CommissionValue, MR_ManagementValue from TBL_MR_2
  union select MR_Date as F_Date, MR_contract, MR_Product, MR_ProductCategory, 'MR', MR_Value, MR_CommissionValue, MR_ManagementValue from TBL_MR_3
  union select MR_Date as F_Date, MR_contract, MR_Product, MR_ProductCategory, 'MR', MR_Value, MR_CommissionValue, MR_ManagementValue from TBL_MR_4
  union select MR_Date as F_Date, MR_contract, MR_Product, MR_ProductCategory, 'MR', MR_Value, MR_CommissionValue, MR_ManagementValue from TBL_MR_5
  union select MR_Date as F_Date, MR_contract, MR_Product, MR_ProductCategory, 'MR', MR_Value, MR_CommissionValue, MR_ManagementValue from TBL_MR_6
  union select MR_Date as F_Date, MR_contract, MR_Product, MR_ProductCategory, 'MR', MR_Value, MR_CommissionValue, MR_ManagementValue from TBL_MR_7
  union select MR_Date as F_Date, MR_contract, MR_Product, MR_ProductCategory, 'MR', MR_Value, MR_CommissionValue, MR_ManagementValue from TBL_MR_8
  union select MR_Date as F_Date, MR_contract, MR_Product, MR_ProductCategory, 'MR', MR_Value, MR_CommissionValue, MR_ManagementValue from TBL_MR_9
  union select MR_Date as F_Date, MR_contract, MR_Product, MR_ProductCategory, 'MR', MR_Value, MR_CommissionValue, MR_ManagementValue from TBL_MR_10
  union select MR_Date as F_Date, MR_contract, MR_Product, MR_ProductCategory, 'MR', MR_Value, MR_CommissionValue, MR_ManagementValue from TBL_MR_11
  union select MR_Date as F_Date, MR_contract, MR_Product, MR_ProductCategory, 'MR', MR_Value, MR_CommissionValue, MR_ManagementValue from TBL_MR_12
  union select MR_Date as F_Date, MR_contract, MR_Product, MR_ProductCategory, 'MR', MR_Value, MR_CommissionValue, MR_ManagementValue from TBL_MR_13
  union select MR_Date as F_Date, MR_contract, MR_Product, MR_ProductCategory, 'MR', MR_Value, MR_CommissionValue, MR_ManagementValue from TBL_MR_14
  union select MR_Date as F_Date, MR_contract, MR_Product, MR_ProductCategory, 'MR', MR_Value, MR_CommissionValue, MR_ManagementValue from TBL_MR_15
  union select MR_Date as F_Date, MR_contract, MR_Product, MR_ProductCategory, 'MR', MR_Value, MR_CommissionValue, MR_ManagementValue from TBL_MR_16
  union select MR_Date as F_Date, MR_contract, MR_Product, MR_ProductCategory, 'MR', MR_Value, MR_CommissionValue, MR_ManagementValue from TBL_MR_17
  union select MR_Date as F_Date, MR_contract, MR_Product, MR_ProductCategory, 'MR', MR_Value, MR_CommissionValue, MR_ManagementValue from TBL_MR_18
  union select MR_Date as F_Date, MR_contract, MR_Product, MR_ProductCategory, 'MR', MR_Value, MR_CommissionValue, MR_ManagementValue from TBL_MR_19
  union select MR_Date as F_Date, MR_contract, MR_Product, MR_ProductCategory, 'MR', MR_Value, MR_CommissionValue, MR_ManagementValue from TBL_MR_20
  union select MR_Date as F_Date, MR_contract, MR_Product, MR_ProductCategory, 'MR', MR_Value, MR_CommissionValue, MR_ManagementValue from TBL_MR_21;

CREATE OR REPLACE VIEW vw_claim_financial (cnt_id, cnt_number, rpy_duedate, rpy_amount, rpy_remainingbalance, rpy_currency, rpy_outstanding) AS SELECT 
    CNT_Id
    , CNT_Number
    , RPY_DueDate
    , RPY_Amount
    , RPY_RemainingBalance
    , RPY_Currency
    , RPY_Outstanding
   FROM TBL_Contract , TBL_Repayment
  where RPY_Contract = CNT_Id;

CREATE OR REPLACE VIEW vw_b2b_contract (prd_name, cnt_id, cnt_product, cnt_number, cnt_date, cnt_duration, cnt_additionalterm, cnt_loanamount, cnt_rmnduecapital, cnt_rmnduecapitalnextmonth, cnt_policynumber, cnt_insurancerate, cnt_premiumamount, cnt_duedays, cnt_loanproduct, cnt_loantype, cnt_status, cnt_branch, cnt_closingdate, cnt_sogelifeclosingdate, cnt_closingreason, cnt_integrationdatesgeb, cnt_integrationdateclosed, cnt_calculatedtariff, cnt_currency, cnt_lastrmbdate, cnt_statusdate, cnt_insurancecode, cnt_pointofsale, cnt_netprmcomexplclcur, cnt_premiumcurrency, cnt_netprmcomexpprdcur, cnt_financinguse, cnt_premiumcalcbasis, cnt_paymentfreq, cnt_maxauthinsuredamount, cnt_fileref, cnt_status2, cnt_clientclosingdate, cnt__user, cnt_insuredamount, cnt_cancel_fts, cnt_cancel_fid, cnt_earlyreimbursementdate, cnt_earlyreimbursement_fts, cnt_earlyreimbursement_fid, cnt_claimdate, cnt_filetimestamp, cnt_fileintegrationdate, cnt_inactive, cnt_loanamountlocal, cnt_calculatedtariff_1, cnt_comregioncode, cnt_premiumamountlocal, cnt_renewaldate, cnt_insurer, cnt_insertiondate, cnt_termofsubscription, cnt_utistartdate, cnt_financedamount, cnt_graceduration, cnt_utidescr, cnt_modifmode, cnt_calcextrapremrate, cnt_productcategory, cnt_nbinstallpremium, cnt_singlepremiumamount, cnt_bankstartdate, cnt_expirydate, cnt_coveragedegree, cnt_riskstandard, cnt_emergencycapital, cnt_bankfilial, cnt_addagreementnumber, cnt_bankemployeecode, cnt_br, cnt_account, cnt_sfx, cnt_originalregdate, cnt_deductibleamount, cnt_nbpremiumcancelled, cnt_mr0, cnt_currentaccount, cnt_deductiblerepurchase, cnt_deductiblerepurchasedate, cnt_numberinsureddays, cnt_numberinsuredcars, cnt_okato, cnt_autorenewal, cnt_pl_role, cnt_pl_name, cnt_pl_dateofbirth, cnt_creditcontractdate, cnt_creditcontractnumber, cnt_bankemployeename, cnt_bankemployeeposition, cnt_additionalofficecode, cnt_poscode, cnt_filialnameincludingpos, cnt_issuedpolicyemployeepos, cnt_lastintegration, cnt_comment, cnt_insurancesigningdate, cnt_dealer, cnt_dealercode, cnt_tarifftitle, cnt_tariffproperty, cnt_renewalintegration, cnt_terfile, cnt_clientpacketidsticker, cnt_clientpacketidkeychain, cnt_clientpacketidkeychain2) AS SELECT  PRD_Name ,
       CNT_ID,
       CNT_PRODUCT,
       CNT_NUMBER,
       CNT_DATE,
       CNT_DURATION,
       CNT_ADDITIONALTERM,
       CNT_LOANAMOUNT,
       CNT_RMNDUECAPITAL,
       CNT_RMNDUECAPITALNEXTMONTH,
       CNT_POLICYNUMBER,
       CNT_INSURANCERATE,
       CNT_PREMIUMAMOUNT,
       CNT_DUEDAYS,
       CNT_LOANPRODUCT,
       CNT_LOANTYPE,
       CNT_STATUS,
       CNT_BRANCH,
       CNT_CLOSINGDATE,
       CNT_SOGELIFECLOSINGDATE,
       CNT_CLOSINGREASON,
       CNT_INTEGRATIONDATESGEB,
       CNT_INTEGRATIONDATECLOSED,
       CNT_CALCULATEDTARIFF,
       CNT_CURRENCY,
       CNT_LASTRMBDATE,
       CNT_STATUSDATE,
       CNT_INSURANCECODE,
       CNT_POINTOFSALE,
       CNT_NETPRMCOMEXPLCLCUR,
       CNT_PREMIUMCURRENCY,
       CNT_NETPRMCOMEXPPRDCUR,
       CNT_FINANCINGUSE,
       CNT_PREMIUMCALCBASIS,
       CNT_PAYMENTFREQ,
       CNT_MAXAUTHINSUREDAMOUNT,
       CNT_FILEREF,
       CNT_STATUS2,
       CNT_CLIENTCLOSINGDATE,
       CNT__USER,
       CNT_INSUREDAMOUNT,
       CNT_CANCEL_FTS,
       CNT_CANCEL_FID,
       CNT_EARLYREIMBURSEMENTDATE,
       CNT_EARLYREIMBURSEMENT_FTS,
       CNT_EARLYREIMBURSEMENT_FID,
       CNT_CLAIMDATE,
       CNT_FILETIMESTAMP,
       CNT_FILEINTEGRATIONDATE,
       CNT_INACTIVE,
       CNT_LOANAMOUNTLOCAL,
       CNT_CALCULATEDTARIFF_1,
       CNT_COMREGIONCODE,
       CNT_PREMIUMAMOUNTLOCAL,
       CNT_RENEWALDATE,
       CNT_INSURER,
       CNT_INSERTIONDATE,
       CNT_TERMOFSUBSCRIPTION,
       CNT_UTISTARTDATE,
       CNT_FINANCEDAMOUNT,
       CNT_GRACEDURATION,
       CNT_UTIDESCR,
       CNT_MODIFMODE,
       CNT_CALCEXTRAPREMRATE,
       CNT_PRODUCTCATEGORY,
       CNT_NBINSTALLPREMIUM,
       CNT_SINGLEPREMIUMAMOUNT,
       CNT_BANKSTARTDATE,
       CNT_EXPIRYDATE,
       CNT_COVERAGEDEGREE,
       CNT_RISKSTANDARD,
       CNT_EMERGENCYCAPITAL,
       CNT_BANKFILIAL,
       CNT_ADDAGREEMENTNUMBER,
       CNT_BANKEMPLOYEECODE,
       CNT_BR,
       CNT_ACCOUNT,
       CNT_SFX,
       CNT_ORIGINALREGDATE,
       CNT_DEDUCTIBLEAMOUNT,
       CNT_NBPREMIUMCANCELLED,
       CNT_MR0,
       CNT_CURRENTACCOUNT,
       CNT_DEDUCTIBLEREPURCHASE,
       CNT_DEDUCTIBLEREPURCHASEDATE,
       CNT_NUMBERINSUREDDAYS,
       CNT_NUMBERINSUREDCARS,
       CNT_OKATO,
       CNT_AUTORENEWAL,
       CNT_PL_ROLE,
       CNT_PL_NAME,
       CNT_PL_DATEOFBIRTH,
       CNT_CREDITCONTRACTDATE,
       CNT_CREDITCONTRACTNUMBER,
       CNT_BANKEMPLOYEENAME,
       CNT_BANKEMPLOYEEPOSITION,
       CNT_ADDITIONALOFFICECODE,
       CNT_POSCODE,
       CNT_FILIALNAMEINCLUDINGPOS,
       CNT_ISSUEDPOLICYEMPLOYEEPOS,
       CNT_LASTINTEGRATION,
       CNT_COMMENT,
       CNT_INSURANCESIGNINGDATE,
       CNT_DEALER,
       CNT_DEALERCODE,
       CNT_TariffTitle,
       CNT_TariffProperty,
       cnt_renewalintegration,
       cnt_terfile,
       CNT_ClientPacketIDsticker,
       CNT_ClientPacketIDkeychain,
       cnt_clientpacketidkeychain2
   FROM TBL_Contract , TBL_Product
  where prd_id = cnt_product
  and ( PRD_B2B is not null and PRD_B2B <> 0 )
  and ( CNT_Status is null or CNT_Status <> 'V' );

CREATE OR REPLACE VIEW vw_coborrower1 (bor_id, bor_fullname, bor_uniqueid, bor_dateofbirth, l_bor_dateofbirth, bor_clientid, bor_clientaccount, bor_contract, bor_quotashare, bor_firstname, bor_surname, bor_patronymicname, bor_placeofbirth, bor_homeaddress, bor_gender, l_bor_gender, bor_phonenumber, bor_profession, bor_passportnumber, bor_homezipcode, bor_homeregion, bor_homecity, bor_homestreetname, bor_homecountryname, bor_filetimestamp, bor_fileintegrationdate, l_bor_fileintegrationdate, bor_documenttype, bor_passportissuingdate, l_bor_passportissuingdate, bor_passportissuingplace, bor_deltaaccountnumber, bor_citizenship, bor_migrationcard_number, bor_migrationcard_from, l_bor_migrationcard_from, bor_migrationcard_to, l_bor_migrationcard_to, bor_lancername, bor_lancercui, l_bor_driverlicenseissuingdate, bor_maritalstatus, bor_childrenpresence, bor_mobilephonenumber, bor_workphonenumber, bor_accountnumber, bor_registrationaddress, bor_registrationzipcode, bor_registrationcity, bor_registrationtown, bor_registrationstreet, bor_registrationhouse, bor_registrationbuilding, bor_registrationapartment, bor_loanquotashare, bor_inn, bor_residencepermit, bor_publicperson, bor_tarifflife, bor_premiumlife, bor_documentissuingplacecode, bor_phonenumbers, bor_actualregion, bor_actualzipcode, bor_actualcountry, bor_actualcity, bor_actualstreetname, bor_actualhouse, bor_actualbuilding, bor_actuallitera, bor_actualcorpus, bor_actualapartment, bor_email, bor_klifedeath, bor_klifedisability, bor_klifeloading, bor_respermittype, bor_respermitnumber, l_bor_respermitstartdate, l_bor_respermitenddate, bor_respermitissuingplace) AS SELECT 
    bor_id,
    bor_fullname,
    bor_uniqueid,
    bor_dateofbirth,
    to_char(bor_DateOfBirth,'DD/MM/YYYY') as l_bor_DateOfBirth,
    bor_clientid,
    bor_clientaccount,
    bct_contract as bor_contract,
    bct_quotashare as bor_quotashare,
    bor_firstname,
    bor_surname,
    bor_patronymicname,
    bor_placeofbirth,
    bor_homeaddress,
    bor_gender,
    case bor_gender when '1' then 'Male' when '2' then 'Female' when '3' then 'Firm' when '4' then 'Other' else null end as l_bor_gender,
    bor_phonenumber,
    bor_profession,
    bor_Passportnumber,
    bor_homezipcode,
    bor_homeregion,
    bor_homecity,
    bor_homestreetname,
    bor_homecountryname,
    bor_filetimestamp,
    bor_fileintegrationdate,
    to_char(bor_fileintegrationdate,'DD/MM/YYYY HH24:MI:SS') as l_bor_fileintegrationdate,
    bor_documenttype,
    bor_passportissuingdate,
    to_char(bor_passportissuingdate,'DD/MM/YYYY') as l_bor_passportissuingdate,
    bor_passportissuingplace,
    bor_deltaaccountnumber,
    bor_citizenship,
    bor_migrationcard_number,
    bor_migrationcard_from,
    to_char(bor_migrationcard_from,'DD/MM/YYYY') as l_bor_migrationcard_from,
    bor_migrationcard_to,
    to_char(bor_migrationcard_to,'DD/MM/YYYY') as l_bor_migrationcard_to,
    Bor_LancerName,
    Bor_LancerCUI,
    to_char(bor_driverlicenseissuingdate,'DD/MM/YYYY') as l_bor_driverlicenseissuingdate,
    bor_maritalstatus,
    bor_childrenpresence,
    bor_mobilephonenumber,
    bor_workphonenumber,
    bor_accountnumber,
    bor_registrationaddress,
    bor_registrationzipcode,
    bor_registrationcity,
    bor_registrationtown,
    bor_registrationstreet,
    bor_registrationhouse,
    bor_registrationbuilding,
    bor_registrationapartment,
    BOR_LoanQuotaShare,
    bor_inn,
    bor_residencepermit,
    bor_publicperson,
    bor_tarifflife,
    bor_premiumlife,
    bor_documentissuingplacecode,
        case WHEN bor_phonenumber IS not NULL THEN bor_phonenumber
     || case WHEN bor_mobilephonenumber IS not NULL or bor_workphonenumber IS not NULL then ' ; ' end end
     || case WHEN bor_mobilephonenumber IS not NULL THEN bor_mobilephonenumber
     || case WHEN bor_workphonenumber IS not NULL then ' ; ' end end
     || case WHEN bor_workphonenumber IS not NULL THEN bor_workphonenumber END as bor_phonenumbers,
    bor_actualregion,
    bor_actualzipcode,
    bor_actualcountry,
    bor_actualcity,
    bor_actualstreetname,
    bor_actualhouse,
    bor_actualbuilding,
    bor_actuallitera,
    bor_actualcorpus,
    bor_actualapartment,
    bor_email,
    bor_klifedeath,
    bor_klifedisability,
    bor_klifeloading,
    bor_respermittype,
    bor_respermitnumber,
    to_char(bor_respermitstartdate, 'DD/MM/YYYY') as l_bor_respermitstartdate,
    to_char(bor_respermitenddate, 'DD/MM/YYYY') as l_bor_respermitenddate,
    bor_respermitissuingplace
   FROM tbl_borrower , tbl_borrowercontract
  where bct_borrower = bor_id
  and bct_role = 2;

CREATE OR REPLACE VIEW vw_b2b_property (cnt_id, cnt_number, prd_name, prp_id, prp_tariff, prp_premium, prp_owners, prp_address, prp_constructiondate, prp_renovationdone, prp_apartmentfloor, prp_floorquantity, prp_bearingwallmeterial, prp_floorseparatingmaterial, prp_roomseparatingmaterial, prp_totalarea, prp_roomquantity, prp_remodelingdone, prp_reequipmentdone, prp_remodelingregistered, prp_reequipmentregistered, prp_active, prp_condition, prp__user, prp_filetimestamp, prp_fileintegrationdate, prp_contract, prp_modifmode, prp_bankunderwriter, prp_kproperty) AS SELECT  CNT_Id , CNT_Number , PRD_Name ,
       PRP_ID,
       PRP_TARIFF,
       PRP_PREMIUM,
       PRP_OWNERS,
       PRP_ADDRESS,
       PRP_CONSTRUCTIONDATE,
       PRP_RENOVATIONDONE,
       PRP_APARTMENTFLOOR,
       PRP_FLOORQUANTITY,
       PRP_BEARINGWALLMETERIAL,
       PRP_FLOORSEPARATINGMATERIAL,
       PRP_ROOMSEPARATINGMATERIAL,
       PRP_TOTALAREA,
       PRP_ROOMQUANTITY,
       PRP_REMODELINGDONE,
       PRP_REEQUIPMENTDONE,
       PRP_REMODELINGREGISTERED,
       PRP_REEQUIPMENTREGISTERED,
       PRP_ACTIVE,
       PRP_CONDITION,
       PRP__USER,
       PRP_FILETIMESTAMP,
       PRP_FILEINTEGRATIONDATE,
       PRP_CONTRACT,
       PRP_MODIFMODE,
       PRP_BANKUNDERWRITER,
       PRP_KProperty
   FROM TBL_Contract , TBL_Product , TBL_Property
  where prd_id = cnt_product
  and cnt_id = prp_contract
  and ( PRD_B2B is not null and PRD_B2B <> 0 )
  and ( CNT_Status is null or CNT_Status <> 'V' );

CREATE OR REPLACE VIEW vw_h_guarantee (l_grt__modificationdate, grt_id, grt_code, grt_description, grt__user, grt__modificationdate, grt__parent, usr_login) AS SELECT  to_char(GRT__ModificationDate, 'DD/MM/YYYY HH24:MI:SS') as l_GRT__ModificationDate,
       tbl_h_guarantee."grt_id",tbl_h_guarantee."grt_code",tbl_h_guarantee."grt_description",tbl_h_guarantee."grt__user",tbl_h_guarantee."grt__modificationdate",tbl_h_guarantee."grt__parent",
       usr_login
   FROM TBL_H_Guarantee, tbl_User
 WHERE USR_Id(+) = GRT__User;

CREATE OR REPLACE VIEW vw_coborrower (cobor_id, cobor_fullname, cobor_uniqueid, cobor_dateofbirth, l_cobor_dateofbirth, cobor_clientid, cobor_clientaccount, cobor_contract, cobor_quotashare, cobor_firstname, cobor_surname, cobor_patronymicname, cobor_placeofbirth, cobor_homeaddress, cobor_gender, l_cobor_gender, cobor_phonenumber, cobor_profession, cobor_passportnumber, cobor_homezipcode, cobor_homeregion, cobor_homecity, cobor_homestreetname, cobor_homecountryname, cobor_filetimestamp, cobor_fileintegrationdate, l_cobor_fileintegrationdate, cobor_documenttype, cobor_passportissuingdate, l_cobor_passportissuingdate, cobor_passportissuingplace, cobor_deltaaccountnumber, cobor_citizenship, cobor_migrationcard_number, cobor_migrationcard_from, l_cobor_migrationcard_from, cobor_migrationcard_to, l_cobor_migrationcard_to, cobor_lancername, cobor_lancercui) AS SELECT 
    bor_id as cobor_id,
    bor_fullname as cobor_fullname,
    bor_uniqueid as cobor_uniqueid,
    bor_dateofbirth as cobor_dateofbirth,
    to_char(bor_DateOfBirth,'DD/MM/YYYY') as l_cobor_DateOfBirth,
    bor_clientid as cobor_clientid,
    bor_clientaccount as cobor_clientaccount,
    bct_contract as cobor_contract,
    bct_quotashare as cobor_quotashare,
    bor_firstname as cobor_firstname,
    bor_surname as cobor_surname,
    bor_patronymicname as cobor_patronymicname,
    bor_placeofbirth as cobor_placeofbirth,
    bor_homeaddress as cobor_homeaddress,
    bor_gender as cobor_gender,
    case bor_gender when '1' then 'Male' when '2' then 'Female' when '3' then 'Firm' when '4' then 'Other' else null end as l_cobor_gender,
    bor_phonenumber as cobor_phonenumber,
    bor_profession as cobor_profession,
    bor_Passportnumber as cobor_Passportnumber,
    bor_homezipcode as cobor_homezipcode,
    bor_homeregion as cobor_homeregion,
    bor_homecity as cobor_homecity,
    bor_homestreetname as cobor_homestreetname,
    bor_homecountryname as cobor_homecountryname,
    bor_filetimestamp as cobor_filetimestamp,
    bor_fileintegrationdate as cobor_fileintegrationdate,
    to_char(bor_fileintegrationdate,'DD/MM/YYYY HH24:MI:SS') as l_cobor_fileintegrationdate,
    bor_documenttype as cobor_documenttype,
    bor_passportissuingdate as cobor_passportissuingdate,
    to_char(bor_passportissuingdate,'DD/MM/YYYY') as l_cobor_passportissuingdate,
    bor_passportissuingplace as cobor_passportissuingplace,
    bor_deltaaccountnumber as cobor_deltaaccountnumber,
    bor_citizenship as cobor_citizenship,
    bor_migrationcard_number as cobor_migrationcard_number,
    bor_migrationcard_from as cobor_migrationcard_from,
    to_char(bor_migrationcard_from,'DD/MM/YYYY') as l_cobor_migrationcard_from,
    bor_migrationcard_to as cobor_migrationcard_to,
    to_char(bor_migrationcard_to,'DD/MM/YYYY') as l_cobor_migrationcard_to,
    Bor_LancerName as coBor_LancerName,
    Bor_LancerCUI as coBor_LancerCUI
   FROM tbl_borrower , tbl_borrowercontract
  where bct_borrower = bor_id
  and bct_role = 2;

CREATE OR REPLACE VIEW vw_b2b_title (cnt_id, cnt_number, prd_name, ttl_id, ttl_contract, ttl_modifmode, ttl_tariff, ttl_premium, ttl_registeredcitizens, ttl_encumbrance, ttl_previousdealtype, ttl_previousdealdate, ttl_acquiringownershipmethod, ttl_acquiringownershipdate, ttl_underagechildrenexistence, ttl_legalproceeding, ttl_thirdpartyclaims, ttl_outstandingdebt, ttl_peopleamongownerexistence, ttl_peopleamongownername, ttl_improperprocessingdoc, ttl_peopleregisteredexistence, ttl_peopleregisteredname, ttl_peoplerightuseexistence, ttl_peoplerightusename, ttl_previousinsurance, ttl_active, ttl__user, ttl_previousdealtotal, ttl_filetimestamp, ttl_fileintegrationdate, ttl_ktitle) AS SELECT  CNT_Id , CNT_Number , PRD_Name ,
       TTL_ID,
       TTL_CONTRACT,
       TTL_MODIFMODE,
       TTL_TARIFF,
       TTL_PREMIUM,
       TTL_REGISTEREDCITIZENS,
       TTL_ENCUMBRANCE,
       TTL_PREVIOUSDEALTYPE,
       TTL_PREVIOUSDEALDATE,
       TTL_ACQUIRINGOWNERSHIPMETHOD,
       TTL_ACQUIRINGOWNERSHIPDATE,
       TTL_UNDERAGECHILDRENEXISTENCE,
       TTL_LEGALPROCEEDING,
       TTL_THIRDPARTYCLAIMS,
       TTL_OUTSTANDINGDEBT,
       TTL_PEOPLEAMONGOWNEREXISTENCE,
       TTL_PEOPLEAMONGOWNERNAME,
       TTL_IMPROPERPROCESSINGDOC,
       TTL_PEOPLEREGISTEREDEXISTENCE,
       TTL_PEOPLEREGISTEREDNAME,
       TTL_PEOPLERIGHTUSEEXISTENCE,
       TTL_PEOPLERIGHTUSENAME,
       TTL_PREVIOUSINSURANCE,
       TTL_ACTIVE,
       TTL__USER,
       TTL_PREVIOUSDEALTOTAL,
       TTL_FILETIMESTAMP,
       TTL_FILEINTEGRATIONDATE,
       TTL_KTitle
   FROM TBL_Contract , TBL_Product , TBL_Title
  where prd_id = cnt_product
  and cnt_id = ttl_contract
  and ( PRD_B2B is not null and PRD_B2B <> 0 )
  and ( CNT_Status is null or CNT_Status <> 'V' );

CREATE OR REPLACE VIEW vw_correction (cor_id, cor_anomaly, cor_contract, cor_premium, cor_borrower, cor_field, cor_fielddescription, cor_oldvalue, cor_newvalue, cor__user) AS SELECT  cor_id,
         cor_anomaly,
         cor_contract,
         cor_premium,
         cor_borrower,
         cor_field,
         cor_fielddescription,
         case when cor_field = 'ANO_STATUS' and cor_oldvalue='A' then 'Activated'
              when cor_field = 'ANO_STATUS' and cor_oldvalue='V' then 'Validated'
              when cor_field = 'ANO_STATUS' and cor_oldvalue='U' then 'Unresolved'
              when cor_field = 'ANO_STATUS' and cor_oldvalue='M' then 'Modified'
              when cor_field = 'ANO_STATUS' and cor_oldvalue='C' then 'Cancelled'
              when cor_field = 'BOR_GENDER' and cor_oldvalue='1' then 'Male'
              when cor_field = 'BOR_GENDER' and cor_oldvalue='2' then 'Female'
              when cor_field = 'BOR_GENDER' and cor_oldvalue='3' then 'Firm'
              when cor_field = 'BOR_GENDER' and cor_oldvalue='4' then 'Other'
              when cor_field = 'PRM_STATUS' and cor_oldvalue='C' then 'Cancelled'
              when cor_field = 'CNT_PRODUCT' then TP1.prd_Name
              when cor_field = 'ANO_JUSTIFICATION' then TJ1.jst_description
         else cor_oldvalue end as cor_oldvalue,
         case when cor_field = 'ANO_STATUS' and cor_newvalue='A' then 'Activated'
              when cor_field = 'ANO_STATUS' and cor_newvalue='V' then 'Validated'
              when cor_field = 'ANO_STATUS' and cor_newvalue='U' then 'Unresolved'
              when cor_field = 'ANO_STATUS' and cor_newvalue='M' then 'Modified'
              when cor_field = 'ANO_STATUS' and cor_newvalue='C' then 'Cancelled'
              when cor_field = 'BOR_GENDER' and cor_newvalue='1' then 'Male'
              when cor_field = 'BOR_GENDER' and cor_newvalue='2' then 'Female'
              when cor_field = 'BOR_GENDER' and cor_newvalue='3' then 'Firm'
              when cor_field = 'BOR_GENDER' and cor_newvalue='4' then 'Other'
              when cor_field = 'PRM_STATUS' and cor_newvalue='C' then 'Cancelled'
              when cor_field = 'CNT_PRODUCT' then TP2.prd_Name
              when cor_field = 'ANO_JUSTIFICATION' then TJ2.jst_description
         else cor_newvalue end as cor_newvalue,
         cor__user
     FROM tbl_Correction
    , (select to_char(prd_id) as prd_id , prd_name from Tbl_Product) TP1
    , (select to_char(prd_id) as prd_id , prd_name from Tbl_Product) TP2
    , (select to_char(jst_id) as jst_id , jst_description from Tbl_Justification) TJ1
    , (select to_char(jst_id) as jst_id , jst_description from Tbl_Justification) TJ2
    where TP1.PRD_ID (+)= cor_oldvalue
    and TP2.PRD_ID (+)= cor_newvalue
    and TJ1.JST_ID (+)= cor_oldvalue
    and TJ2.JST_ID (+)= cor_newvalue;

CREATE OR REPLACE VIEW vw_modifcriteria (cnt_id, cnt_number, user_name, cnt_rmnduecapital, cnt_status, cnt_insurancecode, cnt_rmnduecapital2, cnt_status2, cnt_insurancecode2, cnt_modificationdate, modif_date, modif_mode, cnt_user) AS SELECT  t_data2.cnt_id,
         t_data2.cnt_number,
         usr_lastName || ' ' || usr_FirstName as User_Name,
         t_data2.cnt_rmnduecapital,
         t_data2.cnt_status,
         t_data2.cnt_insurancecode,
         t_data1.cnt_rmnduecapital as cnt_rmnduecapital2,
         t_data1.cnt_status cnt_status2,
         t_data1.cnt_insurancecode cnt_insurancecode2,
         t_data1.cnt_modificationdate,
         to_char(t_data1.cnt_modificationdate, 'DD/MM/YYYY HH24:MI:SS') as Modif_Date,
         t_data1.cnt_modifmode as Modif_Mode,
         t_data1.cnt_user
     FROM (select t2.cnt_id as cnt_id,
                 t2.cnt_h_id as cnt_h_id2,
                 max(t1.cnt_id) as cnt_h_id1
            from tbl_h_contract t1,
                 (select cnt_id, LOCALTIMESTAMP as cnt_modificationdate, 0 as cnt_h_id
                    from tbl_contract
                  union
                  select cnt__parent, cnt__modificationdate, cnt_id as cnt_h_id
                    from tbl_h_contract) t2
           where t1.cnt__parent = t2.cnt_id
             and t1.cnt__modificationdate <= t2.cnt_modificationdate
             and (t1.cnt_id < t2.cnt_h_id or t2.cnt_h_id = 0)
           group by t2.cnt_id, t2.cnt_h_id) t_corresp,
         (select cnt_modifmode,
                 cnt_id,
                 cnt_number,
                 cnt_rmnduecapital,
                 cnt_status,
                 cnt_insurancecode,
                 null as cnt_modificationdate,
                 cnt__user as cnt_user,
                 0 as cnt_h_id
            from tbl_contract
          union
          select cnt_modifmode,
                 cnt__parent,
                 cnt_number,
                 cnt_rmnduecapital,
                 cnt_status,
                 cnt_insurancecode,
                 cnt__modificationdate,
                 cnt__user,
                 cnt_id as cnt_h_id
            from tbl_h_contract) t_data1,
         (select cnt_modifmode,
                 cnt_id,
                 cnt_number,
                 cnt_rmnduecapital,
                 cnt_status,
                 cnt_insurancecode,
                 null as cnt_modificationdate,
                 cnt__user as cnt_user,
                 0 as cnt_h_id
            from tbl_contract
          union
          select cnt_modifmode,
                 cnt__parent,
                 cnt_number,
                 cnt_rmnduecapital,
                 cnt_status,
                 cnt_insurancecode,
                 cnt__modificationdate,
                 cnt__user,
                 cnt_id as cnt_h_id
            from tbl_h_contract) t_data2,
         tbl_user
   where USR_Id = t_data1.CNT_User
     and t_data1.cnt_id = t_corresp.cnt_id
     and t_data1.cnt_h_id = t_corresp.cnt_h_id1
     and t_data2.cnt_id = t_corresp.cnt_id
     and t_data2.cnt_h_id = t_corresp.cnt_h_id2;

CREATE OR REPLACE VIEW vw_contract (cnt_id, cnt_product, cnt_number, cnt_date, l_cnt_date, cnt_duration, cnt_additionalterm, cnt_loanamount, cnt_rmnduecapital, cnt_rmnduecapitalnextmonth, cnt_policynumber, cnt_insurancerate, cnt_premiumamount, cnt_premiumamountlocal, cnt_duedays, cnt_loanproduct, cnt_loantype, cnt_status, cnt_branch, brn_label, cnt_closingdate, l_cnt_closingdate, l_cnt_sogelifeclosingdate, cnt_clientclosingdate, l_cnt_clientclosingdate, cnt_closingreason, l_cnt_integrationdatesgeb, l_cnt_integrationdateclosed, cnt_calculatedtariff, cnt_currency, l_cnt_lastrmbdate, sts_label, sts2_label, l_cnt_statusdate, cnt_insurancecode, cnt_pointofsale, cnt_netprmcomexplclcur, cnt_premiumcurrency, cnt_netprmcomexpprdcur, cnt_financinguse, cnt_premiumcalcbasis, cnt_paymentfreq, cnt_maxauthinsuredamount, cnt_fileref, cnt_productcategory, cnt_filetimestamp, l_cnt_fileintegrationdate, cnt_graceduration, cnt_financedamount, l_cnt_utistartdate, cnt_utidescr, cnt_calcextrapremrate, cnt_claimdate, l_cnt_claimdate, l_cnt_renewaldate, l_cnt_expirydate, cnt_termofsubscription, cnt_nbinstallpremium, cnt_insuredamount, cnt_singlepremiumamount, l_cnt_bankstartdate, cnt_bankstartdate, cnt_coveragedegree, cnt_riskstandard, cnt_emergencycapital, cnt_bankfilial, cnt_addagreementnumber, cnt_bankemployeecode1, cnt_bankemployeecode2, l_cnt_originalregdate, cnt_deductibleamount, cnt_nbpremiumcancelled, cnt_currentaccount, l_cnt_deductiblerepurchase, l_cnt_deductiblerepurchasedate, cnt_numberinsureddays, cnt_numberinsuredcars, cnt_okato, cnt_autorenewal, cnt_pl_role, cnt_pl_name, l_cnt_pl_dateofbirth, l_cnt_creditcontractdate, cnt_creditcontractnumber, cnt_bankemployeename, cnt_bankemployeeposition, cnt_additionalofficecode, cnt_poscode, cnt_filialnameincludingpos, cnt_issuedpolicyemployeepos, cnt_comment, l_cnt_insurancesigningdate, cnt_dealer, cnt_dealercode, cnt_paymentmethod, cnt_monthlyinstallment, cnt_bankfilialaddress, cnt_credittype, cnt_fullcreditamount, cnt_terfile, l_cnt_loanamount, l_cnt_insuredamount, cnt_clientpacketidsticker, cnt_clientpacketidkeychain, cnt_clientpacketidkeychain2, cnt_extraguarantee, cnt_policynumberextra, cnt_br, cnt_sfx, cnt_account, cnt_version, cnt_versiondate, l_cnt_versiondate, cnt_insuredamount2, l_cnt_insuredamount2, cnt_collectionstartingdate, l_cnt_collectionstartingdate, cnt_collectionday, cnt_separeference, bor_id, bor_fullname, bor_uniqueid, bor_dateofbirth, l_bor_dateofbirth, bor_clientid, bor_clientaccount, bor_contract, bor_quotashare, bor_firstname, bor_surname, bor_patronymicname, bor_placeofbirth, bor_homeaddress, bor_gender, l_bor_gender, bor_phonenumber, bor_profession, bor_passportnumber, bor_homezipcode, bor_homeregion, bor_homecity, bor_homestreetname, bor_homecountryname, bor_filetimestamp, bor_fileintegrationdate, l_bor_fileintegrationdate, bor_documenttype, bor_passportissuingdate, l_bor_passportissuingdate, bor_passportissuingplace, bor_deltaaccountnumber, bor_citizenship, bor_migrationcard_number, bor_migrationcard_from, l_bor_migrationcard_from, bor_migrationcard_to, l_bor_migrationcard_to, bor_lancername, bor_lancercui, l_bor_driverlicenseissuingdate, bor_maritalstatus, bor_childrenpresence, bor_mobilephonenumber, bor_workphonenumber, bor_phonenumbers, bor_registrationaddress, bor_registrationzipcode, bor_registrationcity, bor_registrationtown, bor_registrationstreet, bor_registrationhouse, bor_registrationbuilding, bor_registrationapartment, bor_loanquotashare, bor_inn, bor_residencepermit, bor_publicperson, bor_tarifflife, bor_premiumlife, bor_documentissuingplacecode, bor_actualregion, bor_actualzipcode, bor_actualcountry, bor_actualcity, bor_actualstreetname, bor_actualhouse, bor_actualbuilding, bor_actuallitera, bor_actualcorpus, bor_actualapartment, bor_email, bor_klifedeath, bor_klifedisability, bor_klifeloading, bor_respermittype, bor_respermitnumber, l_bor_respermitstartdate, l_bor_respermitenddate, bor_respermitissuingplace, l_bor_insuredamount, cobor_id, cobor_fullname, cobor_uniqueid, cobor_dateofbirth, l_cobor_dateofbirth, cobor_clientid, cobor_clientaccount, cobor_contract, cobor_quotashare, cobor_firstname, cobor_surname, cobor_patronymicname, cobor_placeofbirth, cobor_homeaddress, cobor_gender, l_cobor_gender, cobor_phonenumber, cobor_profession, cobor_passportnumber, cobor_homezipcode, cobor_homeregion, cobor_homecity, cobor_homestreetname, cobor_homecountryname, cobor_filetimestamp, cobor_fileintegrationdate, l_cobor_fileintegrationdate, cobor_documenttype, cobor_passportissuingdate, l_cobor_passportissuingdate, cobor_passportissuingplace, cobor_deltaaccountnumber, cobor_citizenship, cobor_migrationcard_number, cobor_migrationcard_from, l_cobor_migrationcard_from, cobor_migrationcard_to, l_cobor_migrationcard_to, cobor_lancername, cobor_lancercui, l_cobor_insuredamount, bnk_accountfirstname, bnk_accountlastname, bnk_accountnumber, bnk_accountcurrency, prd_id, prd_name, prd_distributor, prd_description, dst_description, ins_label, cnt_comregioncode) AS SELECT  CNT_ID,
       CNT_PRODUCT,
       CNT_NUMBER,
       CNT_DATE,
       to_char(CNT_DATE, 'DD/MM/YYYY') as L_CNT_DATE,
       CNT_DURATION,
       CNT_ADDITIONALTERM,
       CNT_LOANAMOUNT,
       CNT_RMNDUECAPITAL,
       CNT_RMNDUECAPITALNEXTMONTH,
       CNT_POLICYNUMBER,
       CNT_INSURANCERATE,
       CNT_PREMIUMAMOUNT,
       cnt_premiumamountlocal,
       CNT_DUEDAYS,
       CNT_LOANPRODUCT,
       CNT_LOANTYPE,
       CNT_STATUS,
       cnt_branch,
       case when brn_label is null then cnt_branch else brn_label end as brn_label,
       cnt_closingdate,
       to_char(cnt_closingdate, 'DD/MM/YYYY') as L_cnt_closingdate,
       to_char(cnt_sogelifeclosingdate, 'DD/MM/YYYY') as L_cnt_sogelifeclosingdate,
       cnt_clientclosingdate,
       to_char(cnt_clientclosingdate, 'DD/MM/YYYY') as L_cnt_clientclosingdate,
       cnt_closingreason,
       to_char(cnt_integrationdatesgeb, 'DD/MM/YYYY') as L_cnt_integrationdatesgeb,
       to_char(cnt_integrationdateclosed, 'DD/MM/YYYY') as L_cnt_integrationdateclosed,
       cnt_calculatedtariff,
       cnt_currency,
       to_char(cnt_lastrmbdate, 'DD/MM/YYYY') as L_cnt_lastrmbdate,
       sts_label,
       sts2_label,
       to_char(cnt_statusdate, 'DD/MM/YYYY') as L_CNT_statusdate,
       cnt_insurancecode,
       cnt_pointofsale,
       cnt_netprmcomexplclcur,
       cnt_premiumcurrency,
       cnt_netprmcomexpprdcur,
       cnt_financinguse,
       cnt_premiumcalcbasis,
       cnt_paymentfreq,
       cnt_maxauthinsuredamount,
       cnt_fileref,
       cnt_ProductCategory,
       cnt_filetimestamp,
       to_char(cnt_fileintegrationdate, 'DD/MM/YYYY HH24:MI:SS') as L_cnt_fileintegrationdate,
       cnt_graceduration,
       cnt_financedamount,
       to_char(cnt_utistartdate, 'DD/MM/YYYY') as L_cnt_utistartdate,
       cnt_utidescr,
       cnt_calcextrapremrate,
       cnt_ClaimDate,
       to_char(cnt_ClaimDate, 'DD/MM/YYYY') as L_cnt_ClaimDate,
       to_char(cnt_renewaldate, 'DD/MM/YYYY') as L_cnt_renewaldate,
       to_char(cnt_expirydate, 'DD/MM/YYYY') as L_cnt_expirydate,
       cnt_termofsubscription,
       cnt_nbinstallpremium,
       cnt_insuredamount,
       CNT_SinglePremiumAmount,
       to_char(cnt_BankStartDate, 'DD/MM/YYYY') as L_cnt_BankStartDate,
       cnt_BankStartDate,
       cnt_CoverageDegree,
       cnt_RiskStandard,
       cnt_EmergencyCapital,
       cnt_BankFilial,
       cnt_addagreementnumber,
       substring(cnt_bankemployeecode  FROM 1 for 25) as cnt_bankemployeecode1,
       substring(cnt_bankemployeecode from 26) as cnt_bankemployeecode2,
       to_char(cnt_originalregdate, 'DD/MM/YYYY') as L_cnt_originalregdate,
       cnt_deductibleamount,
       cnt_NBpremiumCancelled,
       CNT_CurrentAccount,
       case when cnt_deductiblerepurchase = 1 then 'Yes' else 'No' end as l_cnt_deductiblerepurchase,
       to_char(cnt_deductiblerepurchaseDate, 'DD/MM/YYYY') as L_cnt_deductiblerepurchaseDate,
       CNT_NumberInsuredDays,
       CNT_NumberInsuredCars,
       cnt_okato,
       cnt_AutoRenewal,
       cnt_PL_Role,
       cnt_PL_Name,
       to_char(cnt_PL_DateOfBirth, 'DD/MM/YYYY') as L_cnt_PL_DateOfBirth,
       to_char(cnt_creditcontractdate, 'DD/MM/YYYY') as L_cnt_creditcontractdate,
       cnt_creditcontractnumber,
       cnt_bankemployeename,
       cnt_bankemployeeposition,
       cnt_additionalofficecode,
       cnt_poscode,
       cnt_filialnameincludingpos,
       cnt_issuedpolicyemployeepos,
       CNT_Comment,
       to_char(cnt_InsuranceSigningDate, 'DD/MM/YYYY') as L_cnt_InsuranceSigningDate,
       CNT_Dealer,
       CNT_DealerCode,
       cnt_paymentmethod,
       cnt_monthlyinstallment,
       cnt_bankfilialaddress,
       cnt_credittype,
       cnt_fullcreditamount,
       cnt_TERfile,
       to_char(cnt_loanamount) as l_cnt_loanamount,
       to_char(cnt_insuredamount) as l_cnt_insuredamount,
       cnt_ClientPacketIDsticker,
       cnt_ClientPacketIDkeychain,
       cnt_clientpacketidkeychain2,
       cnt_extraguarantee,
       cnt_PolicyNumberExtra,
       cnt_br,
       cnt_sfx,
       cnt_account,
       cnt_version,
       cnt_versiondate,
       to_char(cnt_versiondate, 'DD/MM/YYYY') as L_cnt_versiondate,
       cnt_insuredamount2,
       to_char(cnt_insuredamount2) as l_cnt_insuredamount2,
       cnt_Collectionstartingdate,
       to_char(cnt_Collectionstartingdate, 'DD/MM/YYYY') as L_cnt_Collectionstartingdate,
       cnt_collectionday,
       cnt_separeference,
       -- Borrower informations
       bor_id,
       bor_fullname,
       bor_uniqueid,
       bor_dateofbirth,
       l_bor_dateofbirth,
       bor_clientid,
       bor_clientaccount,
       bor_contract,
       bor_quotashare,
       bor_firstname,
       bor_surname,
       bor_patronymicname,
       bor_placeofbirth,
       bor_homeaddress,
       bor_gender,
       l_bor_gender,
       bor_phonenumber,
       bor_profession,
       bor_passportnumber,
       bor_homezipcode,
       bor_homeregion,
       bor_homecity,
       bor_homestreetname,
       bor_homecountryname,
       bor_filetimestamp,
       bor_fileintegrationdate,
       l_bor_fileintegrationdate,
       bor_documenttype,
       bor_passportissuingdate,
       l_bor_passportissuingdate,
       bor_passportissuingplace,
       bor_deltaaccountnumber,
       bor_citizenship,
       bor_migrationcard_number,
       bor_migrationcard_from,
       l_bor_migrationcard_from,
       bor_migrationcard_to,
       l_bor_migrationcard_to,
       Bor_LancerName,
       Bor_LancerCUI,
       l_bor_driverlicenseissuingdate,
       bor_maritalstatus,
       bor_childrenpresence,
       bor_mobilephonenumber,
       bor_workphonenumber,
          case WHEN bor_phonenumber IS not NULL THEN bor_phonenumber
       || case WHEN bor_mobilephonenumber IS not NULL or bor_workphonenumber IS not NULL then ' ; ' end end
       || case WHEN bor_mobilephonenumber IS not NULL THEN bor_mobilephonenumber
       || case WHEN bor_workphonenumber IS not NULL then ' ; ' end end
       || case WHEN bor_workphonenumber IS not NULL THEN bor_workphonenumber END as bor_phonenumbers,
       bor_registrationaddress,
       bor_registrationzipcode,
       bor_registrationcity,
       bor_registrationtown,
       bor_registrationstreet,
       bor_registrationhouse,
       bor_registrationbuilding,
       bor_registrationapartment,
       BOR_LoanQuotaShare,
       bor_inn,
       bor_residencepermit,
       bor_publicperson,
       bor_tarifflife,
       bor_premiumlife,
       bor_documentissuingplacecode,
       bor_actualregion,
       bor_actualzipcode,
       bor_actualcountry,
       bor_actualcity,
       bor_actualstreetname,
       bor_actualhouse,
       bor_actualbuilding,
       bor_actuallitera,
       bor_actualcorpus,
       bor_actualapartment,
       bor_email,
       bor_klifedeath,
       bor_klifedisability,
       bor_klifeloading,
       bor_respermittype,
       bor_respermitnumber,
       to_char(bor_respermitstartdate, 'DD/MM/YYYY') as l_bor_respermitstartdate,
       to_char(bor_respermitenddate, 'DD/MM/YYYY') as l_bor_respermitenddate,
       bor_respermitissuingplace,
       to_char(cnt_loanamount*bor_quotashare/100) as l_bor_insuredamount,
       -- Co-Borrower informations
       cobor_id,
       cobor_fullname,
       cobor_uniqueid,
       cobor_dateofbirth,
       l_cobor_dateofbirth,
       cobor_clientid,
       cobor_clientaccount,
       cobor_contract,
       cobor_quotashare,
       cobor_firstname,
       cobor_surname,
       cobor_patronymicname,
       cobor_placeofbirth,
       cobor_homeaddress,
       cobor_gender,
       l_cobor_gender,
       cobor_phonenumber,
       cobor_profession,
       cobor_passportnumber,
       cobor_homezipcode,
       cobor_homeregion,
       cobor_homecity,
       cobor_homestreetname,
       cobor_homecountryname,
       cobor_filetimestamp,
       cobor_fileintegrationdate,
       l_cobor_fileintegrationdate,
       cobor_documenttype,
       cobor_passportissuingdate,
       l_cobor_passportissuingdate,
       cobor_passportissuingplace,
       cobor_deltaaccountnumber,
       cobor_citizenship,
       cobor_migrationcard_number,
       cobor_migrationcard_from,
       l_cobor_migrationcard_from,
       cobor_migrationcard_to,
       l_cobor_migrationcard_to,
       coBor_LancerName,
       coBor_LancerCUI,
       to_char(cnt_loanamount*cobor_quotashare/100) as l_cobor_insuredamount,
       -- Bank informations
       bnk_accountfirstname,
       bnk_accountlastname,
       bnk_accountnumber,
       bnk_accountcurrency,
       -- Product informations
       tbl_product.prd_id,
       tbl_product.prd_name,
       tbl_product.prd_distributor,
       prd_description,
       tbl_distributor.dst_description,
       ins_label,
       cnt_comregioncode
  from tbl_contract,
       vw_borrower,
       vw_coborrower,
       tbl_product,
       tbl_insurer,
       tbl_status,
       tbl_status2,
       tbl_branch,
       tbl_bank,
       tbl_distributor
 where cnt_id = bor_contract
   and cnt_id = cobor_contract(+)
   and cnt_product = prd_id(+)
   and prd_distributor = dst_id(+)
   and cnt_status = sts_code(+)
   and cnt_status2 = sts2_code(+)
   and cnt_branch = brn_code(+)
   and cnt_id = bnk_contract(+)
   and cnt_insurer = ins_code(+);

CREATE OR REPLACE VIEW vw_detailedpremium_c (dst_description, rsk_code, prd_name, prd_description, grt_code, cnt_number, event_number, evant_date, prm_paymentdate, gpr_compremium, gpr_extracompremium, gpr_purepremium, gpr_extrapurepremium, det_type, det_code, det_amount, prm_installmentdate, grt_insurer, rsk_id, rsk_class, prd_id, grt_id, prm_type2, prm_id, cnt_insuredamount, prm_tsaccounted, prd_distributor, prm_type3) AS SELECT  dst_description,
       rsk_code,
       prd_name,
       prd_description,
       grt_code,
       cnt_number,
       prm_id as event_number,
       prm_installmentdate as evant_date,
       prm_paymentdate,
       0 as gpr_compremium,
       0 as gpr_extracompremium,
       0 as gpr_purepremium,
       0 as gpr_extrapurepremium,
       det_type,
       det_code,
       0 as det_amount,
       prm_installmentdate,
       grt_insurer,
       rsk_id,
       rsk_class,
       prd_id,
       grt_id,
       prm_type2,
       prm_id,
       cnt_insuredamount,
       prm_tsaccounted,
       prd_distributor,
       prm_type3
   FROM tbl_premium,
       tbl_contract,
       tbl_product,
       tbl_distributor,
       tbl_guarantee,
       vw_a_productguarantee,
       tbl_risk,
       (select gp_pr.gpr_contract,
               gp_pr.gpr_eventtype,
               gp_pr.gpr_premium,
               gp_pr.gpr_guarantee,
               gp_pr.gpr_compremium,
               gp_xpr.gpr_compremium as gpr_extracompremium,
               gp_pr.gpr_purepremium,
               gp_xpr.gpr_purepremium as gpr_extrapurepremium
          from tbl_guaranteepremium gp_pr, tbl_guaranteepremium gp_xpr
         where gp_xpr.gpr_premium(+) = gp_pr.gpr_premium
           and gp_xpr.gpr_guarantee(+) = gp_pr.gpr_guarantee
           and gp_pr.gpr_eventtype = 1
           and gp_xpr.gpr_eventtype(+) = 2),
       (select tgp_premium   as det_premium,
               tgp_guarantee as det_guarantee,
               1             as det_type,
               tax_code      as det_code,
               tgp_amount    as det_amount
          from tbl_taxguaranteepremium, tbl_tax
         where tax_id = tgp_tax
        union
        select lgp_premium, lgp_guarantee, 2, ldn_code, lgp_amount
          from tbl_loadingguaranteepremium, tbl_loading
         where ldn_id = lgp_loading)
 where prm_status = 'C'
   and (cnt_status is null or cnt_status <> 'V')
   and prm_type = 'COM'
   and prm_tsaccounted is null
   and cnt_id = prm_contract
   and prd_id = cnt_product
   and dst_id = prd_distributor
   and pg_product = prd_id
   and pg_guarantee = grt_id
   and gpr_premium = prm_id
   and gpr_guarantee = grt_id
   and rsk_id = grt_typerisk
   and det_premium (+) = gpr_premium
   and det_guarantee (+) = gpr_guarantee
 order by dst_description, rsk_code, prd_name, grt_code, cnt_number , prm_paymentdate , prm_id , det_type , det_code;

CREATE OR REPLACE VIEW vw_a_productloading (pl_product, pl_loading) AS SELECT  distinct prg_product as pl_product , gl_Loading as pl_loading
 FROM tbl_productguarantee , vw_a_guaranteeloading
where prg_guarantee = gl_guarantee;

CREATE OR REPLACE VIEW vw_search (cnt_id, cnt_policynumber, cnt_policynumberextra, policynumber, bor_firstname, bor_surname, bor_dateofbirth, cnt_number, cnt_date, l_cnt_date, cnt_closingdate, l_cnt_closingdate, cnt_loanamount, l_cnt_loanamount, cnt_branch, cnt_claimdate, cnt_clientclosingdate, cnt_closingreason, cnt_status, brn_label, prd_id, prd_name, prd_distributor, prd_description, bor_uniqueid, bor_accountnumber, bor_clientaccount, sts_label) AS SELECT  CNT_ID,
       CNT_POLICYNUMBER,
       CNT_PolicyNumberExtra,
       case when CNT_PolicyNumber is null then CNT_PolicyNumberExtra when CNT_PolicyNumberExtra is null then CNT_PolicyNumber else CNT_PolicyNumber || ' / ' || CNT_PolicyNumberExtra end as PolicyNumber,
       bor_firstname,
       bor_surname,
       bor_dateofbirth,
       CNT_NUMBER,
       CNT_DATE,
       to_char(CNT_DATE, 'DD/MM/YYYY') as L_CNT_DATE,
       cnt_closingdate,
       to_char(cnt_closingdate, 'DD/MM/YYYY') as L_cnt_closingdate,
       CNT_LOANAMOUNT,
       to_char(cnt_loanamount) as l_cnt_loanamount,
       cnt_branch,
       cnt_ClaimDate,
       cnt_clientclosingdate,
       cnt_closingreason,
       cnt_status,
       case when brn_label is null then cnt_branch else brn_label end as brn_label,
       prd_id,
       prd_name,
       prd_distributor,
       prd_description,
       bor_uniqueid,
       bor_accountnumber,
       bor_clientaccount,
       sts_label
   FROM tbl_contract,
       vw_borrower,
       tbl_product,
       tbl_status,
       tbl_branch
 where cnt_id = bor_contract
   and cnt_product = prd_id(+)
   and cnt_status = sts_code(+)
   and cnt_branch = brn_code(+);

CREATE OR REPLACE VIEW vw_detailedpremium (dst_description, rsk_code, prd_name, prd_description, grt_code, cnt_number, event_number, evant_date, prm_paymentdate, gpr_compremium, gpr_extracompremium, gpr_purepremium, gpr_extrapurepremium, det_type, det_code, det_amount, prm_installmentdate, grt_insurer, rsk_id, rsk_class, prd_id, grt_id, prm_type2, prm_id, cnt_insuredamount, prm_tsaccounted, prd_distributor, prm_type3) AS SELECT  dst_description,
       rsk_code,
       prd_name,
       prd_description,
       grt_code,
       cnt_number,
       prm_id as event_number,
       prm_installmentdate as evant_date,
       prm_paymentdate,
       gpr_compremium,
       gpr_extracompremium,
       gpr_purepremium,
       gpr_extrapurepremium,
       det_type,
       det_code,
       det_amount,
       prm_installmentdate,
       grt_insurer,
       rsk_id,
       rsk_class,
       prd_id,
       grt_id,
       prm_type2,
       prm_id,
       cnt_insuredamount,
       prm_tsaccounted,
       prd_distributor,
       prm_type3
   FROM tbl_premium,
       tbl_contract,
       tbl_product,
       tbl_distributor,
       tbl_guarantee,
       vw_a_productguarantee,
       tbl_risk,
       (select gp_pr.gpr_contract,
               gp_pr.gpr_eventtype,
               gp_pr.gpr_premium,
               gp_pr.gpr_guarantee,
               gp_pr.gpr_compremium,
               gp_xpr.gpr_compremium as gpr_extracompremium,
               gp_pr.gpr_purepremium,
               gp_xpr.gpr_purepremium as gpr_extrapurepremium
          from tbl_guaranteepremium gp_pr, tbl_guaranteepremium gp_xpr
         where gp_xpr.gpr_premium(+) = gp_pr.gpr_premium
           and gp_xpr.gpr_guarantee(+) = gp_pr.gpr_guarantee
           and gp_pr.gpr_eventtype = 1
           and gp_xpr.gpr_eventtype(+) = 2),
       (select tgp_premium   as det_premium,
               tgp_guarantee as det_guarantee,
               1             as det_type,
               tax_code      as det_code,
               tgp_amount    as det_amount
          from tbl_taxguaranteepremium, tbl_tax
         where tax_id = tgp_tax
        union
        select lgp_premium, lgp_guarantee, 2, ldn_code, lgp_amount
          from tbl_loadingguaranteepremium, tbl_loading
         where ldn_id = lgp_loading)
 where (prm_status <> 'C' or prm_status is null)
   and (cnt_status is null or cnt_status <> 'V')
   and prm_type = 'COM'
   --and prm_tsaccounted is null
   and cnt_id = prm_contract
   and prd_id = cnt_product
   and dst_id = prd_distributor
   and pg_product = prd_id
   and pg_guarantee = grt_id
   and gpr_premium = prm_id
   and gpr_guarantee = grt_id
   and rsk_id = grt_typerisk
   and det_premium (+) = gpr_premium
   and det_guarantee (+) = gpr_guarantee
 order by dst_description, rsk_code, prd_name, grt_code, cnt_number , prm_paymentdate , prm_id , det_type , det_code;

CREATE OR REPLACE VIEW vw_a_p_productloading (pl_product, pl_loading) AS SELECT  distinct prg_product as pl_product , gl_Loading as pl_loading
 FROM tbl_p_productguarantee , vw_a_guaranteeloading
where prg_guarantee = gl_guarantee;

CREATE OR REPLACE VIEW vw_modifpremium (dst_description, rsk_code, prd_name, grt_code, cnt_number, event_number, evant_date, prm_paymentdate, gpr_compremium, gpr_extracompremium, gpr_purepremium, gpr_extrapurepremium, det_type, det_code, det_amount, prm_installmentdate, grt_insurer, rsk_id, rsk_class, prd_id, grt_id, prm_type2, prm_id, cnt_insuredamount, prm_tsaccounted, det_date, prd_distributor, prm_type3) AS SELECT  dst_description,
       rsk_code,
       prd_name,
       grt_code,
       cnt_number,
       prm__parent as event_number,
       prm_installmentdate as evant_date,
       prm_paymentdate,
       gpr_compremium,
       gpr_extracompremium,
       gpr_purepremium,
       gpr_extrapurepremium,
       det_type,
       det_code,
       det_amount,
       prm_installmentdate,
       grt_insurer,
       rsk_id,
       rsk_class,
       prd_id,
       grt_id,
       prm_type2,
       prm__parent as prm_id,
       cnt_insuredamount,
       prm_tsaccounted,
       det_date,
       prd_distributor,
       prm_type3
   FROM tbl_h_premium,
       tbl_contract,
       tbl_product,
       tbl_distributor,
       tbl_guarantee,
       vw_a_productguarantee,
       tbl_risk,
       (select gp_pr.gpr_contract,
               gp_pr.gpr_eventtype,
               gp_pr.gpr_premium,
               gp_pr.gpr_guarantee,
               gp_pr.gpr_compremium,
               gp_xpr.gpr_compremium as gpr_extracompremium,
               gp_pr.gpr_purepremium,
               gp_xpr.gpr_purepremium as gpr_extrapurepremium
          from tbl_h_guaranteepremium gp_pr, tbl_h_guaranteepremium gp_xpr
         where gp_xpr.gpr_premium(+) = gp_pr.gpr_premium
           and gp_xpr.gpr_guarantee(+) = gp_pr.gpr_guarantee
           and gp_pr.gpr_eventtype = 1
           and gp_xpr.gpr_eventtype(+) = 2),
       (select tgp_premium   as det_premium,
               tgp_guarantee as det_guarantee,
               1             as det_type,
               tax_code      as det_code,
               tgp_amount    as det_amount,
               tgp__modificationdate as det_date
          from tbl_h_taxguaranteepremium, tbl_tax
         where tax_id = tgp_tax
        union
        select lgp_premium, lgp_guarantee, 2, ldn_code, lgp_amount , lgp__modificationdate
          from tbl_h_loadingguaranteepremium, tbl_loading
         where ldn_id = lgp_loading)
 where prm_type = 'COM'
   and (prm_status <> 'C' or prm_status is null)
   and cnt_id = prm_contract
   and prd_id = cnt_product
   and dst_id = prd_distributor
   and pg_product = prd_id
   and pg_guarantee = grt_id
   and gpr_premium = prm__parent
   and gpr_guarantee = grt_id
   and rsk_id = grt_typerisk
   and det_premium (+) = gpr_premium
   and det_guarantee (+) = gpr_guarantee
   and prm_tsaccounted is not null
 order by dst_description, rsk_code, prd_name, grt_code, cnt_number , prm_paymentdate , prm_id , det_type , det_code , det_date;

CREATE OR REPLACE VIEW vw_modifpremium_c (dst_description, rsk_code, prd_name, grt_code, cnt_number, event_number, evant_date, prm_paymentdate, gpr_compremium, gpr_extracompremium, gpr_purepremium, gpr_extrapurepremium, det_type, det_code, det_amount, prm_installmentdate, grt_insurer, rsk_id, rsk_class, prd_id, grt_id, prm_type2, prm_id, cnt_insuredamount, prm_tsaccounted, det_date, prd_distributor, prm_type3) AS SELECT  dst_description,
       rsk_code,
       prd_name,
       grt_code,
       cnt_number,
       prm__parent as event_number,
       prm_installmentdate as evant_date,
       prm_paymentdate,
       0 as gpr_compremium,
       0 as gpr_extracompremium,
       0 as gpr_purepremium,
       0 as gpr_extrapurepremium,
       det_type,
       det_code,
       0 as det_amount,
       prm_installmentdate,
       grt_insurer,
       rsk_id,
       rsk_class,
       prd_id,
       grt_id,
       prm_type2,
       prm__parent as prm_id,
       cnt_insuredamount,
       prm_tsaccounted,
       det_date,
       prd_distributor,
       prm_type3
   FROM tbl_h_premium,
       tbl_contract,
       tbl_product,
       tbl_distributor,
       tbl_guarantee,
       vw_a_productguarantee,
       tbl_risk,
       (select gp_pr.gpr_contract,
               gp_pr.gpr_eventtype,
               gp_pr.gpr_premium,
               gp_pr.gpr_guarantee,
               gp_pr.gpr_compremium,
               gp_xpr.gpr_compremium as gpr_extracompremium,
               gp_pr.gpr_purepremium,
               gp_xpr.gpr_purepremium as gpr_extrapurepremium
          from tbl_h_guaranteepremium gp_pr, tbl_h_guaranteepremium gp_xpr
         where gp_xpr.gpr_premium(+) = gp_pr.gpr_premium
           and gp_xpr.gpr_guarantee(+) = gp_pr.gpr_guarantee
           and gp_pr.gpr_eventtype = 1
           and gp_xpr.gpr_eventtype(+) = 2),
       (select tgp_premium   as det_premium,
               tgp_guarantee as det_guarantee,
               1             as det_type,
               tax_code      as det_code,
               tgp_amount    as det_amount,
               tgp__modificationdate as det_date
          from tbl_h_taxguaranteepremium, tbl_tax
         where tax_id = tgp_tax
        union
        select lgp_premium, lgp_guarantee, 2, ldn_code, lgp_amount , lgp__modificationdate
          from tbl_h_loadingguaranteepremium, tbl_loading
         where ldn_id = lgp_loading)
 where prm_type = 'COM'
   and prm_status = 'C'
   and prm_tsaccounted is not null
   and cnt_id = prm_contract
   and prd_id = cnt_product
   and dst_id = prd_distributor
   and pg_product = prd_id
   and pg_guarantee = grt_id
   and gpr_premium = prm__parent
   and gpr_guarantee = grt_id
   and rsk_id = grt_typerisk
   and det_premium (+) = gpr_premium
   and det_guarantee (+) = gpr_guarantee
   and prm_tsaccounted is not null
 order by dst_description, rsk_code, prd_name, grt_code, cnt_number , prm_paymentdate , prm_id , det_type , det_code , det_date;


